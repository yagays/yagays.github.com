<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Wolfeyes Bioinformatics beta]]></title>
  <link href="http://yagays.github.com/atom.xml" rel="self"/>
  <link href="http://yagays.github.com/"/>
  <updated>2012-10-12T10:45:32+09:00</updated>
  <id>http://yagays.github.com/</id>
  <author>
    <name><![CDATA[yag_ays]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Prml Talksession]]></title>
    <link href="http://yagays.github.com/blog/2012/10/12/prml-talksession/"/>
    <updated>2012-10-12T00:00:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/10/12/prml-talksession</id>
    <content type="html"><![CDATA[<p>1;2c&#8212;
layout: post
title: &#8220;「今度こそわかる!? PRMLの学習の学習」に参加しました&#8221;
date: 2012-10-12 10:03
comments: true</p>

<h2>categories: PRML</h2>

<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4621061240" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4621061224" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>昨日に池袋ジュンク堂で開催されたPRML同人誌トークセッションに参加してました．講演者の皆様お疲れ様でした＆貴重なお話をありがとうございました．</p>

<ul>
<li><a href="http://www.junkudo.co.jp/tenpo/evtalk.html#20121011_talk">http://www.junkudo.co.jp/tenpo/evtalk.html#20121011_talk</a></li>
</ul>


<p>ということで，トークセッションの中で話題に上がった話を私見を交えつつ幾つか．全部の話題を網羅しているわけではないのでご了承下さい．</p>

<br />


<h3>「PRMLの学習」の2版が出た</h3>

<p>なんと「パターン認識と機械学習の学習」が早くも2版ということで，どこかで見覚えのある黄色い表紙．私はもう既に1版を買っているので2版を買おうかどうか悩んでいたら，トークセッションの受付で2版で新たに加わった内容が印刷された小冊子を頂いた．</p>

<h3>PRML翻訳は@shima__shimaさん自らが同僚や出版社に話を持ちかけて実現した</h3>

<p>翻訳に関しては，本の中では分担されているということしか分からなかったので，ちょっとした裏話．あとは，Wikiを立てて訳語の統一をされたということで，fittingやjoint distributionなどで議論が紛糾したという話も．</p>

<h3>モデルというのはモノの見方である</h3>

<p>機械学習全般の話でもよく出てくるが，今回のトークセッションでもやはり話題になったのはモデルに関する問題だった．機械学習では何らかの関数に近似したり分類したりと，未来を予測するためにはモデルを立ててパラメータをチューニングして…ということが必要になるのだが，じゃあどうやってモデルを組み上げていけばいいのか．何が良いモデルで何が悪いモデルなのか．適当にモデルを組んだら機械学習の結果が現実のデータに上手い具合に当てはまった/予想に反して全然当てはまらなかった場合には，どう解釈すればいいのか．モデルを選ぶ以前に特徴量を選ぶところにおいても，どんな工夫をすればいいのか．．．などなど，手法にかぎらず色々な部分で正当性や性能を評価する必要があり，理論が固まった現在でも人が介入する部分というのは多いという話．それを克服(?)したのが今話題のDeep Learningで，膨大なデータ量を元にして，特徴量の選択自体も機械学習の中に含めてしまおうという話とも繋がった．</p>

<h3>贋作を愛でる</h3>

<p>モデルの話に関連して，ノーフリーランチ定理やボックス氏の言葉などが話の中に出てきたが，そういった流れの中で統数研の樋口知之先生が仰られている「贋作」という単語が出てきて，個人的にはそのニュアンスが非常に腑に落ちる感じで印象に残った．最終的には現実問題を解決したいということが根本にあると思うのだが，機械学習なんかは理論などは置いておいて単純に動けばいいやという考えもあり，逆に何でも適用しようとすると論文を量産する機械になってしまったり，SOMみたいな万能性に溺れてしまうという話もあり，なかなか難しい部分ではある．</p>

<ul>
<li><a href="http://d.hatena.ne.jp/what_a_dude/20110902/p1">http://d.hatena.ne.jp/what_a_dude/20110902/p1</a></li>
<li><a href="http://www.ai-gakkai.or.jp/jsai/sig/dmsm/007/discussion.html">http://www.ai-gakkai.or.jp/jsai/sig/dmsm/007/discussion.html</a></li>
<li><a href="http://www.ai-gakkai.or.jp/jsai/activity/241_p162_165.pdf">http://www.ai-gakkai.or.jp/jsai/activity/241_p162_165.pdf</a> (pdf)</li>
</ul>


<h3>余談：PRMLの学習と実装に関する疑問について．</h3>

<p>実装の話はトークセッションではあまり出て来なかったのだが，帰り際の電車の中で実装に関する疑問をふと思いついて「さっき訊いときゃよかった」と思ったので，折角なので書いてみる．</p>

<p>プログラマーなどは，アルゴリズムを自分で実装しないと本当に理解したことにならない，なんてことがよく言われるけれども，そういう環境で育った技術系の人がPRMLを読み始めると「書いてあることをひと通りまんべんなく実装しないといけない」みたいな感じになって，取っ掛かりとしては非常に辛いんじゃないかなーという個人的な印象がある．</p>

<p>例えば，尤度関数でlogを取って対数尤度にするのは小さな確率の値を掛け算していくと非常に小さい値になって計算機で扱うには困るからlogを取って足し算にしているんだよ，という実装上の工夫は非常によくされる説明だけれども，じゃあ他の機械学習の理論においても，実装のことを考慮した勉強をしないといけないんじゃないかという感覚は今でもある．</p>

<p>そのあたり，トークセッションの中で話があったように，理論レベルの難しさと実装レベルの難しさは別物だし，今は良質の機械学習パッケージが充実しているから機械学習を使うだけなら自分で実装する必要性は必ずしも無いけれども，「加減」の問題として，どの程度やったらいいのかという疑問．まあ，現実の問題を解こうと思った時には，やはりその分野（自然言語処理であったりレコメンドであったり）の機械学習本を参考にしたほうが良いのだけれども．</p>

<p>そういえば@Shuyoさんが「数式をnumpyに落としこむコツ」という解説を書かれており，非常に分かりやすくていつも参考にしているのだが，そのあたり「プログラマのためのPRMLの学習」同人誌があるといいんじゃないかと思う．</p>

<ul>
<li><a href="http://d.hatena.ne.jp/n_shuyo/20111016/numpy">http://d.hatena.ne.jp/n_shuyo/20111016/numpy</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SOAPdenovo2のアセンブル情報を集計するスクリプト]]></title>
    <link href="http://yagays.github.com/blog/2012/10/11/soapdenovo2-stats/"/>
    <updated>2012-10-11T16:08:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/10/11/soapdenovo2-stats</id>
    <content type="html"><![CDATA[<p>SOAPdenovo2になって，アセンブリで得られた配列の統計情報がscafStatisticsというファイルに出力されるようになった．そのため，自分でアセンブリ結果を解析しなくとも，コンティグ数やN50などの基本情報をチェックすることができる……のだが，scafStatisticsは項目を並べただけのテキストファイルなので，複数のアセンブリ結果を比較しようと思った場合，いちいちファイルを開いて統計情報を集計するのが非常に面倒になる．</p>

<p>ということで，SOAPdenovo2のアセンブルで出力される情報を一つにまとめるスクリプトを簡単に書いてみた．タブ区切りテキストで出力されるので，Excelなどでも見やすいようにしてある．</p>

<br />


<h2>インストール</h2>

<ul>
<li><a href="https://gist.github.com/3870629">https://gist.github.com/3870629</a></li>
</ul>


<p>上記のgistに置いてあるソースコードをダウンロードするか，wgetでソースコードを落としてくる．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>wget --no-check-certificate https://raw.github.com/gist/3870629/6547d69e768e3d87a140d6405fdf19102ff525cb/soapdenovo2_stats.rb
</span></code></pre></td></tr></table></div></figure>


<p>動作確認はRuby 1.8.7および1.9.3で行っているが，まあ変なことはしてないのでどんな環境でもだいたい動くと思う．RubyのバージョンよりかはSOAPdenovo2の未知の部分や仕様変更などが怖いわけで，そもそも以下のデータセットで出てきたscafStatisticsを参考にしているため，SOAPdenovo2のパラメータなどによっては期待通りの動きをしないかもしれない．あと，例外処理などをあまり真面目に書いていないので，入力ファイルが見つからない場合にエラーを吐かなかったりするが，そこらへんは後々修正するかも．</p>

<br />


<h2>使い方</h2>

<h3>基本的な使い方</h3>

<p><strong><code>ruby soapdenovo2_stats.rb</code></strong>のあとにscafStatisticsのファイルを並べるだけ．標準出力に表示される情報は，scafStatistics内のInformation for assembly Scaffoldのうち，重要な統計量のみとなっている．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ruby soapdenovo2_stats.rb path/to/k23.scafStatistics path/to/k25.scafStatistics
</span><span class='line'>Filename        Size_includeN   Size_withoutN   Scaffold_Num    Mean_Size       Median_Size     Longest_Seq     Shortest_Seq    Singleton_Num   N50
</span><span class='line'>k23.scafStatistics      4533843 4533843 845     5365    2919    55290   100     845     11457
</span><span class='line'>k25.scafStatistics      4536449 4536449 654     6936    3609    71235   100     654     14798
</span></code></pre></td></tr></table></div></figure>


<h3>その他の詳細な統計量を出力する</h3>

<p><strong><code>-a</code></strong>または<strong><code>--all</code></strong>オプションをつけることでscafStatistics内のすべての統計量を出力するようにしている．また，<strong><code>-c</code></strong>または<strong><code>--contig</code></strong>オプションをつけることによって，ScaffoldではなくContigの情報（scafStatistics内のInformation for assembly Contig より下側の情報）を出力できる．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ruby soapdenovo2_stats.rb -a -c path/to/k23.scafStatistics
</span><span class='line'>Size_includeN   Size_withoutN   Contig_Num      Mean_Size       Median_Size     Longest_Seq     Shortest_Seq    Contig&gt;100      Contig&gt;100 <span class="o">(</span>%<span class="o">)</span>  Contig&gt;500      Contig&gt;500 <span class="o">(</span>%<span class="o">)</span>  Contig&gt;1K       Contig&gt;1K <span class="o">(</span>%<span class="o">)</span>   Contig&gt;10K      Contig&gt;10K <span class="o">(</span>%<span class="o">)</span>  Contig&gt;100K     Contig&gt;100K <span class="o">(</span>%<span class="o">)</span> Contig&gt;1M       Contig&gt;1M <span class="o">(</span>%<span class="o">)</span>   Nucleotide_A    Nucleotide_A <span class="o">(</span>%<span class="o">)</span>        Nucleotide_C    Nucleotide_C <span class="o">(</span>%<span class="o">)</span>    Nucleotide_G    Nucleotide_G <span class="o">(</span>%<span class="o">)</span>        Nucleotide_T    Nucleotide_T <span class="o">(</span>%<span class="o">)</span>        GapContent_N    GapContent_N <span class="o">(</span>%<span class="o">)</span>        Non_ACGTN       Non_ACGTN <span class="o">(</span>%<span class="o">)</span>   GC_Content      N10     Contigs &gt;0 in N10       N20     Contigs &gt;0 in N20       N30     Contigs &gt;0 in N30       N40     Contigs &gt;0 in N40       N50     Contigs &gt;0 in N50       N60     Contigs &gt;0 in N60   N70     Contigs &gt;0 in N70       N80     Contigs &gt;0 in N80       N90     Contigs &gt;0 in N90       NG50    Contigs &gt;0 in NG50      N50_contig-NG50_contig_length_difference        Number_of_contigs_in_scaffolds  Number_of_contigs_not_in_scaffolds<span class="o">(</span>Singleton<span class="o">)</span>   Average_number_of_contigs_per_scaffold
</span><span class='line'>4533843 4533843 845     5365    2919    55290   100     840     99.41   646     76.45   589     69.7    147     17.4    0       0.0     0       0.0     1122311 24.75   1154274 25.46   1146494 25.29   1110764 24.5    0       0.0     0       0.0     50.75   29554   13      21527   31      17094   55      13748   85      11457   121     9180    165     7136    2225257     296     3315    403     NaN     NaN     NaN     0       845     0
</span></code></pre></td></tr></table></div></figure>


<h3>ワイルドカードを使って入力ファイルを複数指定する</h3>

<p>Zshなどのシェルコマンドと同様に，入力ファイルの指定には<strong><code>*</code></strong>や<strong><code>?</code></strong>などのワイルドカードなどが使用できる．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ruby soapdenovo2_stats.rb  path/to/*.scafStatistics
</span><span class='line'>Filename        Size_includeN   Size_withoutN   Scaffold_Num    Mean_Size       Median_Size     Longest_Seq     Shortest_Seq    Singleton_Num   N50
</span><span class='line'>k23.scafStatistics      4533843 4533843 845     5365    2919    55290   100     845     11457
</span><span class='line'>k25.scafStatistics      4536449 4536449 654     6936    3609    71235   100     654     14798
</span><span class='line'>k27.scafStatistics      4539473 4539473 578     7853    3781    79498   100     578     18157
</span><span class='line'>k29.scafStatistics      4544164 4544164 570     7972    3672    103369  100     570     17945
</span><span class='line'>k31.scafStatistics      4550461 4550461 621     7327    3306    77302   100     621     17052
</span><span class='line'>k33.scafStatistics      4582773 4582773 1655    2769    1688    22953   100     1655    5435
</span><span class='line'>k35.scafStatistics      2393501 2393501 16300   146     132     1345    105     16300   142
</span></code></pre></td></tr></table></div></figure>


<h3>特定のカラムでソートする</h3>

<p><strong><code>-s</code></strong>オプションを使うことで，特定のカラムで値をソートした結果を出力することができる．ここではN50を降順で並び替えており，一番右端の列を見るとN50が一番大きいものはk=27であったことがわかる．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ruby soapdenovo2_stats.rb -s N50 path/to/*.scafStatistics
</span><span class='line'>Filename        Size_includeN   Size_withoutN   Scaffold_Num    Mean_Size       Median_Size     Longest_Seq     Shortest_Seq    Singleton_Num   N50
</span><span class='line'>k27.scafStatistics      4539473 4539473 578     7853    3781    79498   100     578     18157
</span><span class='line'>k29.scafStatistics      4544164 4544164 570     7972    3672    103369  100     570     17945
</span><span class='line'>k31.scafStatistics      4550461 4550461 621     7327    3306    77302   100     621     17052
</span><span class='line'>k25.scafStatistics      4536449 4536449 654     6936    3609    71235   100     654     14798
</span><span class='line'>k23.scafStatistics      4533843 4533843 845     5365    2919    55290   100     845     11457
</span><span class='line'>k33.scafStatistics      4582773 4582773 1655    2769    1688    22953   100     1655    5435
</span><span class='line'>k35.scafStatistics      2393501 2393501 16300   146     132     1345    105     16300   142
</span></code></pre></td></tr></table></div></figure>


<h2>今回用いたサンプルデータ</h2>

<p>なお，今回上記で示したデータは，E.coliのSRR001665のデータを用いてSOAPdenovo2_revision210でアセンブルしたものを使用している．アセンブルのコマンドとconfigファイルは以下のとおり．SEQanswersのWikiにあったExampleをそのまま使わせてもらっている（ <a href="http://seqanswers.com/wiki/How-to/de_novo_assembly#SOAP_denovo">http://seqanswers.com/wiki/How-to/de_novo_assembly#SOAP_denovo</a>）．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>SOAPdenovo-63mer all -K 25 -R -s cont.config -o output/k25
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>cont.config</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#maximal read length</span>
</span><span class='line'><span class="nv">max_rd_len</span><span class="o">=</span>36
</span><span class='line'><span class="o">[</span>LIB<span class="o">]</span>
</span><span class='line'><span class="c">#average insert size</span>
</span><span class='line'><span class="nv">avg_ins</span><span class="o">=</span>200
</span><span class='line'><span class="c">#if sequence needs to be reversed </span>
</span><span class='line'><span class="nv">reverse_seq</span><span class="o">=</span>0
</span><span class='line'><span class="c">#use for contig building only</span>
</span><span class='line'><span class="nv">asm_flags</span><span class="o">=</span>1
</span><span class='line'><span class="c">#in which order the reads are used while scaffolding</span>
</span><span class='line'><span class="nv">rank</span><span class="o">=</span>1
</span><span class='line'><span class="c">#fastq files</span>
</span><span class='line'><span class="nv">q1</span><span class="o">=</span>/home/yag_ays/tmp/soapdenovo2_testrun/SRR001665_1.fastq
</span><span class='line'><span class="nv">q2</span><span class="o">=</span>/home/yag_ays/tmp/soapdenovo2_testrun/SRR001665_2.fastq
</span></code></pre></td></tr></table></div></figure>


<h3>参考</h3>

<ul>
<li><a href="http://sourceforge.net/projects/soapdenovo2/">http://sourceforge.net/projects/soapdenovo2/</a></li>
<li><a href="http://www.homolog.us/blogs/2012/07/10/testing-soapdenovo2-prerelease-v-map-and-scaff/">http://www.homolog.us/blogs/2012/07/10/testing-soapdenovo2-prerelease-v-map-and-scaff/</a></li>
</ul>


<h3>ソースコード</h3>

<!-- more -->


<div><script src='https://gist.github.com/3870629.js?file='></script>
<noscript><pre><code>#/usr/bin/env ruby

require &quot;optparse&quot;

def v(s)
  if s == &quot;NaN&quot;
    return s
  elsif s.include?(&quot;%&quot;)
    return s.gsub(&quot;%&quot;,&quot;&quot;).to_f
  else
    return s.to_i
  end
end

def parse_scafstatistics(file)
  stats = []
  header = []
  open(file) { |f|
    header &lt;&lt; &quot;Filename&quot;
    stats &lt;&lt; File.basename(file)
    f.each_line do |line|
      if !line.include?(&quot;&lt;--&quot;) &amp;&amp; line != &quot;\n&quot;
        l = line.chomp.split(&quot;\t&quot;)
        if l[0] == &quot;GC_Content&quot;
          header &lt;&lt; l[0]
          stats &lt;&lt; v(l[1])
        elsif l.length == 3
          if l[2].include?(&quot;%&quot;)
            header &lt;&lt; l[0].strip
            header &lt;&lt; l[0].strip + &quot; (%)&quot;
            stats &lt;&lt; v(l[1])
            stats &lt;&lt; v(l[2])
          else
            header &lt;&lt; l[0]
            header &lt;&lt; &quot;Contigs &gt;0 in &quot; + l[0]
            stats &lt;&lt; v(l[1])
            stats &lt;&lt; v(l[2])
          end
        else
          header &lt;&lt; l[0]
          stats &lt;&lt; v(l[1])
        end
      end
    end
  }
  return header, stats
end

def print_tsv(header, stats, print_all, print_scaffold)
  h = []
  s = []
  if print_scaffold
    if print_all
      h = header[0..57]
      s = stats.map{|a| a[0..57]}
    else
      h = [header[0..8],header[45]]
      s = stats.map{|a| [a[0..8],a[45]]}
    end
  else
    if print_all
      h = header[58..header.length]
      s = stats.map{|a| a[58..a.length]}
    else
      h = [header[58..65].flatten,header[98]]
      s = stats.map{|a| [a[58..65].flatten,a[98]]}
    end
  end
  puts h.join(&quot;\t&quot;)
  s.each do |f|
    puts f.join(&quot;\t&quot;)
  end
end


if __FILE__ == $PROGRAM_NAME
  header = []
  stats = []

  sort_column = nil
  print_all = false
  print_scaffold = true

  ARGV.options do |opt|
    opt.on( &quot;-a&quot;,&quot;--all&quot;) { print_all = true }
    opt.on( &quot;-s VAL&quot;,&quot;--sort&quot;) { |a| sort_column = a }
    opt.on( &quot;-c&quot;, &quot;--contig&quot;) { print_scaffold = false }
    opt.on( &quot;-h&quot;,&quot;--help&quot;) { puts opt ;exit }
    opt.parse!
  end

  Dir.glob(ARGV).each do |f|
    h, s = parse_scafstatistics(f)
    header = h
    stats &lt;&lt; s
  end

  if sort_column
    i = header.index(sort_column)
    if i == nil
      puts &quot;ERROR : unknown column name '#{sort_column}' &quot;
      exit 1
    end
    stats = stats.sort{|a,b| b[i] &lt;=&gt; a[i] }
  end

  print_tsv(header, stats, print_all, print_scaffold)
end
</code></pre></noscript></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ウェブページにリストアップされているpdfファイルをwgetでまとめてダウンロードする方法]]></title>
    <link href="http://yagays.github.com/blog/2012/10/10/shut-the-fuck-up-and-download-all-pdf-files/"/>
    <updated>2012-10-10T00:03:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/10/10/shut-the-fuck-up-and-download-all-pdf-files</id>
    <content type="html"><![CDATA[<h3>pdf中毒者のためのwget入門</h3>

<p>大学の先生方が用意する講義資料やプレゼンテーションのスライドの類なんかは，得てして個人のウェブページにまとまりなくリストアップされているだけの場合が多い．必要なときにダウンロードするようにすると既に持っているファイルを再度ダウンロードしてしまって重複することがあるし，まとめてダウンロードするためにブラウザ上でいちいちクリックするのも面倒くさい．そのため，ウェブページにリストアップされているpdfファイルをコマンド一発でまとめてダウンロードしたい！というときには，wgetコマンドが非常に便利だ．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>wget -r -l 1 -A pdf -w 5 -nd http://example.com/hoge/index.html
</span></code></pre></td></tr></table></div></figure>


<p>これだけでいいのだ．このコマンドを使えば，example.com/hoge/index.htmlというウェブページにリストアップされているpdfファイルを一括してダウンロードすることができる．指定したオプションを少し解説しよう．</p>

<h4><code>-r -l 1</code></h4>

<p><strong>-r</strong>と<strong>-l</strong>オプションによって，再帰的に1階層分だけリンクをたどるように指定している．つまり，指定したウェブページに貼ってあるリンクの中から，目的となるファイルだけをダウンロードすることができる．</p>

<h4><code>-A pdf</code></h4>

<p><strong>-A</strong>オプションによって，拡張子がpdfのファイルのみをダウンロードするように指定している．これをpptに変えればパワーポイントのファイルだけダウンロードできるし，pdf,pptのようにコンマ区切りで複数列挙することもできる．</p>

<h4><code>-w 5</code></h4>

<p><strong>-w</strong>オプションによって，ダウンロード処理の間隔を5秒開けている．wgetはダウンロード処理が終わり次第次のダウンロードを実行し始めるため，短時間に大量にダウンロードすると向こうのサーバに負荷をかける可能性がある．そのため，ダウンロード間隔を少し開けることで，集中してアクセスしないようにしている．間隔の秒数には特に意味があるわけではないが，最低でも数秒は開けたほうが良いだろう．「<a href="http://www.amazon.co.jp/gp/product/4873111870/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4873111870&linkCode=as2&tag=yagays-22">Spidering hacks―ウェブ情報ラクラク取得テクニック101選</a><img src="http://www.assoc-amazon.jp/e/ir?t=yagays-22&l=as2&o=9&a=4873111870" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />」なんかを見ると，スクリプトによって3秒または5秒開けてる場合が多い．</p>

<h4><code>-nd</code></h4>

<p><strong>-nd</strong>オプションによって，ダウンロードしたファイルを同一ディレクトリ（標準ではカレントディレクトリ）に保存している．これを指定しないと，ウェブページのURL階層通りに/hoge/fuga/piyo/といったディレクトリ構造が作成されてしまう．なお，<code>-P hoge</code>というオプションを追加すると，hogeというディレクトリ以下にダウンロードしたファイルが保存される．</p>

<h3>なお，Mac OS Xの場合にはwgetのインストールが必要</h3>

<p>そういえば，wgetはMacには標準で入っていないので，MacPortsかHomebrewなどを使ってインストールする必要がある．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo port install wget
</span></code></pre></td></tr></table></div></figure>


<p>または</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew install wget
</span></code></pre></td></tr></table></div></figure>


<p>もちろんソースコードをコンパイルして入れることもできる(<a href="http://osxdaily.com/2012/05/22/install-wget-mac-os-x/">http://osxdaily.com/2012/05/22/install-wget-mac-os-x/</a>)</p>

<h3>!注意!</h3>

<p><strong>相手方のサーバ負荷に配慮するのはもちろん，利用規約の有無やダウンロード環境にも注意が必要である．</strong>ウェブページによっては，スクリプトを使った一括ダウンロードなどを制限/禁止している場合がある．上記コマンドを使ったダウンロードを行う際は，そのような利用規約があるかどうかをまず確認し，最大限利用規約を守るよう注意しなければいけない．また，万が一の場合には相手に迷惑を掛けてドメイン/IPアドレス単位でアクセスが禁止される可能性もある．そのため，会社や大学で実行する際には細心の注意を払い，同じIPアドレスを使う同僚や組織に迷惑をかけないよう注意しなければならない．</p>

<h3>参考</h3>

<ul>
<li><a href="http://www.itsenka.com/contents/development/unix-linux/wget.html">http://www.itsenka.com/contents/development/unix-linux/wget.html</a></li>
<li><a href="http://taichino.com/engineer-life/linux/288">http://taichino.com/engineer-life/linux/288</a></li>
</ul>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4873111870" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4774138169" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「読書の技法 誰でも本物の知識が身につく熟読術・速読術「超」入門」読了]]></title>
    <link href="http://yagays.github.com/blog/2012/10/09/review-art-of-reading/"/>
    <updated>2012-10-09T06:45:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/10/09/review-art-of-reading</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4492044698" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<h3>対象は文学・思想・哲学・歴史に偏っているが，読書法としては簡潔で的確</h3>

<p>本書は佐藤優が実践している読書法や勉強法，そして大量の情報をどうやって効率良く捌くかについて論じた本だ．本書前半では，佐藤氏のこれまでの人生における読書遍歴が語られるほか，本書全体を通して文章の端々に彼独自の試行錯誤の跡が見られる．</p>

<p>読書に対する彼の態度は非常に明確で，本や情報の取捨選択をはっきりすることが繰り返し述べられる．それは，どのような本を読むべきでどのような本を読まないべきか，どういう情報を重視してどういう情報を読み飛ばすかということだ．ある事柄に関して読書で知識を得ようと思った時に，まず基本となる本の選び方から，重要な箇所のマーキングや書き込み，そして要約などの情報の整理に至るまで，本の著者の意見や自分の欲しい情報を的確に抜き出す技術が具体的に語られる．このような考えの根本には，時間は有限であるという彼自身の強い考えがあり，多読・速読を勧める上での佐藤氏ならではの理由付けがある．本書の技法に倣って文章を抜き出せば，</p>

<blockquote><p>「読書は有限であり希少財である」という大原則を忘れてはいけない．速読はあくまで熟読する本を精査するための手段にすぎず，熟読できる本の数が限られるからこそ必要となるものだ．速読が熟読よりも効果を上げることは絶対にない．</p>

<p><a href="http://www.amazon.co.jp/gp/product/4492044698/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4492044698&linkCode=as2&tag=yagays-22">読書の技法 誰でも本物の知識が身につく熟読術・速読術「超」入門</a><img src="http://www.assoc-amazon.jp/e/ir?t=yagays-22&l=as2&o=9&a=4492044698" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /> (p.88)</p></blockquote>

<p>と，速読をただ単に早く本を読む技術と見なしているわけではないことがわかる．本書の帯には「月平均300冊，多い月は500冊以上」と多読を煽る謳い文句が並んでいるが，中をしっかりと読めばそれが安易な多読を推奨しているわけではないことが理解できるだろう．こういった点においては，読書ありきで自然と知識が身につくという陳腐な読書論と比較して，本書の主張や読書手法は非常に合理的であり，ある程度の訓練を必要としながらも実用的である．</p>

<p>佐藤氏の元外務省主任分析官という経歴や神学部出身という学歴から分かる通り，主に思想や歴史の分野に関わる話が多い．科学や理学系に関しては，数学の勉強法で「テクネー」と呼ばれる繰り返しによる理解の重要性に触れている等ある程度の言及はあるものの，少し物足りなさは感じる．しかし，だからといって彼の技法が理学系に通用しないというわけではなく，全体を通して読書法や勉強法は首尾一貫しており応用が効くようなものだ．また，漫画や小説の読み方もそれぞれ読み方があり，漫画のデフォルメされた主張を鵜呑みにし過ぎないことや小説から何を汲み取るべきかなど，学問以外の読書に関しても言及があるのが本書の良いところだ．読書技法の基本から応用まで幅広く網羅した，誰でも読める幅広い年齢層向けの本として，かなり良くまとまっていてクオリティが高い1冊だと思う．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「NHKスペシャル 最強ウイルス―新型インフルエンザの恐怖」読了]]></title>
    <link href="http://yagays.github.com/blog/2012/10/02/review-nhk-virus/"/>
    <updated>2012-10-02T07:55:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/10/02/review-nhk-virus</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4140812923" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>本書はNHKスペシャルにて放送されたドラマおよびドキュメンタリー「NHKスペシャル シリーズ 最強ウイルス」のスタッフの取材記録を元にして，そのH5N1という新型インフルエンザの実態や各国政府の対策などの情報をまとめて再構成したものだ．2008年時点での現状として，H5N1は東南アジア諸国において鳥から人間への小規模な感染が確認され死者も出ているが，今のところ人間から人間への感染力の強い変異は起きていない．しかし，実際に特定の家族間ではヒトからヒトへの感染が確認されているなど，これも時間の問題とされている．本書ではまずこのような事実とインフルエンザに関する基本知識が述べられたのちに，実際に検討・実施されている世界各国のパンデミック対策や，そこから少し遅れている日本政府の実態と，地方自治体レベルでの取り組みが紹介される．また，新型インフルエンザのパンデミックに対してそれぞれ異なる意見を持つ日本人研究者3人に対して，個別にインタビューして見解を伺った記録も興味深い．</p>

<p>「<a href="http://yagays.github.com/blog/2012/09/15/review-h5n1/">H5N1</a>」に引き続いて2冊目となる本を読んだのだが，2008年出版の本なので少し情報の古さはあるものの，よく情報が整理されており200ページ程度の単行本に上手くまとまっている．科学的知見をベースにしたフィクションである「H5N1」と比較して，新型インフルエンザをとりまく情報自体は特に目新しいものはなかったが，本書では豊富な実例のもと，アメリカにおける模擬訓練の取り組みやウィルス検体提供における国家間の軋轢などが示され，より社会的な視点に重きが置かれている．また，ワクチンの製造や貯蓄に関しても非常に重要な問題であり，アジュバントと呼ばれるワクチンの効果を高める化学物質も開発され実用化にむけて臨床段階に入っているなど，行政以外の活動も盛り込まれている．本書を読んでいると，とにかく日本のパンデミック対策は遅れているんだという事実にもどかしさを感じるばかりなのだが，NHKで取り上げたことにより社会的な影響も多方面であったようで，このことが政府が重い腰を上げるきっかけにもなったようだ．そういう話を聞くと幾分安堵を覚えるのだが，一番の恐怖は新型インフルエンザ自体であるということは常に意識しておかなければいけないことだろう．</p>

<p>さて，10月に入り今年もインフルエンザの予防接種が受けられる時期になったので，早めに受けるとしよう．</p>

<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B001F10YU4" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B001F10YUE" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「読書力」読了]]></title>
    <link href="http://yagays.github.com/blog/2012/10/01/review-reading-skill/"/>
    <updated>2012-10-01T07:57:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/10/01/review-reading-skill</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4004308011" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>タイトルにあるように，本書は読書をする能力の重要性を唱える本である．著者は，読書は自己形成の手段であり教養を養うために必要な能力であると主張する．特に本書冒頭では，本を読む読まないは自由だという意見を否定し，本は絶対に読むべきものだと断定している．それと同時に，今まで読書によく親しんできた人間が読書を軽んじている発言をすることを強く非難し，本を読むという行為の重要性や意味，効果などが列挙される．また後半では，どういった方法で本を読めばよいかといった技術に関しても語られる．</p>

<p>読書というものは，言ってしまえば文字や文章を読むといったことは，文字の読み方を覚えたばかりの子供から眼が衰えた老人まで，文字を読める人間すべてが行う行為だ．読む対象としての活字の種類も多岐にわたる．しかし本書では，読書と言いながらも，語られるのは子供や若者に対する，よく言われるような活字離れや読解力の低下に対する警鐘と，自分が感じてきた読書の素晴らしさや思い出話ばかりが強調される．言ってしまえば，本書は子供のための読書論であり，それはただの教育という行為にすぎない．それを悪いとは言わないが，それを読書論として展開するのはあまりにも読書という行為とかけ離れている気がする．結局のところ読書を他の単語に変えても若者のだらしない現状を憂いているような文脈で成り立つようでは，読書に関して何も踏み込んだことが言えてないのではないかと思う．巻末のお薦め文庫100選も近代文学などの古典や個人的なお薦め本ばかりで，つまるところ読書ではなく教養についてアレコレ言いたいだけなのだといった感想しか持てない．</p>

<p>結局はよくある読書礼賛本だったが，ただ個別に見れば同意する部分もある．本の読み方には色々と種類があり，軽く要点だけを掴むような読み方から，じっくり時間をかけて文字を追っていくな読み方まで，本の種類や状況に応じて変えるべきだという意見は正にその通りだ．ボールペンで書き込みをしたり音読することの重要性も賛同できる．その他にも読書による思考能力の強化に関しては全面否定出来無いあたり，言ってることは正しくても全体として意味をなしていない感じが否めない．</p>

<p>あと，妙なところに突っかかっても意味がないのだが，どうしても一言言いたい部分がある．「本を引用する会話」に出てくる衒学的な会話にまつわる話だ．著者は，ペダンティック・衒学的という言葉自体が死語になりつつあるのは，知らないことを恥と思う文化がなくなったからだという．知らないことが恥でなくなったから，相手に難しいことを言われても恥だと思わなくなった．教養が尊敬されることだからこそ，意味のないひけらかしを批判する言葉も使われる意味があったのだと言っている．これは本当だろうか．衒学という言葉が死語になったのと知らないことを恥と思わない文化がなくなったことの真偽はまあ脇においておこう．では，教養がなく物事を知らないことを恥と思わなくなれば，意味のないひけらかしをする人間に対して衒学だと思わないのだろうか．僕はそうは思わない．レベルの程度はあれど，本質的に意味のある話をしないことに対する蔑視は，教養の無さを恥と思うか思わないかに依らず存在する．「グローバルなイノベーションをマネージメントする」なんて糞みたいな定型文を聞いてイノベーションという単語の意味をしらないけど恥とは思わないから何も感じませんといったことにはならないだろう．教養や知識は関係なくとも，相手の言葉に意味がないということを感じ取れるからこそ，その発言を空虚だと判断して衒学的だと非難できる．そこに物事を知らないことで感じる恥は関係ないと思うのだが，どうやら著者の眼には若者が何も考えてないとしか写っていないらしい，本書ではこのあと唐突に本の話を若者がしなくなってけしからんという話が始まって余計に辟易するのだが，衒学のところにも非常に疑問が残る．そもそも本書自体が，古典文学や昔の偉い学者を盾にして一方的に時代の変化を憂いているだけの衒学的な雑感にとどまっているんじゃないだろうか．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dropbox+Sphinxで自分専用の電子書籍リストを作ってみた]]></title>
    <link href="http://yagays.github.com/blog/2012/09/29/sphinx-dropbox-bookshelf/"/>
    <updated>2012-09-29T14:05:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/09/29/sphinx-dropbox-bookshelf</id>
    <content type="html"><![CDATA[<p><img src="http://dl.dropbox.com/u/142306/b/bookshelf.png" align="right" hspace="10px"></p>

<h3>きっかけ</h3>

<p>本を裁断してpdfにする自炊というものをやり始めて1年以上が経ち，自炊したpdfも350冊・35GBを超えてしまった．手持ちのiPadには全部の書籍が入りきらなくなってしまい，終いには自炊した本のことを忘れて中古で買い直す始末．そんなこんなで，自炊した書籍のpdfをまとめる本棚みたいなものが欲しくなってきた．手の込んだものはいらないので，表紙をざっと眺めたり，タイトルと著者を検索できる程度のもので簡単に済ませたい．</p>

<p>というわけで，<strong>Sphinxで静的htmlを吐き出してDropboxのPublicフォルダで公開するようなシステム</strong>を簡単に組んでみた．SphinxはPythonで書かれたドキュメンテーションツールで，rst形式のテキストから静的なhtmlを出力できるほか，jsで簡易な検索もできる．バックグラウンドでスクリプトを動かしたりデータベースを置いておく必要がないので，DropboxのPublicフォルダみたいな場所でも公開できる便利さがある．今回はそれをメインにして，付加情報として書籍ファイルのISBNを使ってAmazonのProduct Advertising APIを叩いてメタ情報を入手し，書籍カバーの画像と一緒に表示させるようなSphinxのrstファイルを作成するという目論見．今回やってみた限りだとDropbox+Sphinxは連携が案外簡単だったので，この他にも個人的なメモなどの用途にも最適だと思う．</p>

<p>なお，今回のウェブページはリンクを一般に公開しておらず，また書籍pdfはダウンロードできる状態にはしていない．書籍の電子化に関しては色々難しいところがあるのでスクリプトの公開などは控えるようにする．</p>

<!-- more -->


<h3>できたページ</h3>

<p>トップページには直近50件の書籍カバーの画像と，その下には書籍タイトル一覧を表示してある．タイトルで検索するだけならこのページでテキスト検索するだけで済む．</p>

<p>iPhoneとの連携も良好だ．ちなみに今回始めて知ったのだが，iOSのSafariでもテキスト検索ができるらしい．ウェブページを表示した状態で右上の検索ボックスに単語を入力し，出てくる候補の一番下にある&#8221;On This Page&#8221;の候補をクリックすると，Mac OS XのSafariと同様に検索できる．</p>

<h3>作り方</h3>

<p>基本的に書籍pdfに付けているタイトル「#{data}#{title}.pdf」をそのまま使用している．rstを作る部分はRubyで書いており，ファイル名を抜き出してそれぞれのrstファイルを自動生成している．</p>

<p>メインのindex.rstには，画像を並べる部分と</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.. image:: _book_thumb/20120927自炊本1.jpg
</span><span class='line'>   :target: _book_rst/20120927自炊本1.html
</span><span class='line'>   :width: 100px
</span><span class='line'>
</span><span class='line'>.. image:: _book_thumb/20120927自炊本2.jpg
</span><span class='line'>   :target: _book_rst/20120927自炊本2.html
</span><span class='line'>   :width: 100px
</span><span class='line'>
</span><span class='line'>.. image:: _book_thumb/20120927自炊本3.jpg
</span><span class='line'>   :target: _book_rst/20120927自炊本3.html
</span><span class='line'>   :width: 100px
</span><span class='line'>
</span><span class='line'>〜〜〜続く〜〜〜</span></code></pre></td></tr></table></div></figure>


<p>と，toctreeの部分</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.. toctree::
</span><span class='line'>   :maxdepth: 2
</span><span class='line'>
</span><span class='line'>   _book_rst/20120927自炊本1
</span><span class='line'>   _book_rst/20120927自炊本2
</span><span class='line'>   _book_rst/20120927自炊本3
</span><span class='line'>   _book_rst/20120927自炊本4
</span><span class='line'>   _book_rst/20120927自炊本5
</span><span class='line'>   _book_rst/20120927自炊本6
</span><span class='line'>
</span><span class='line'>〜〜〜続く〜〜〜</span></code></pre></td></tr></table></div></figure>


<p>を上のように並べているだけ．</p>

<p>また，書籍カバーのサムネイル用の画像はMac OS Xのコマンドラインツールであるsipsを使って生成している．</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sips -s format jpeg --resampleWidth 100 --out /path/to/out_dir /path/to/pdf_dir/*.pdf</span></code></pre></td></tr></table></div></figure>


<p>とすると，/path/to/pdf_dir/にあるpdfファイルがすべて幅100pxのjpgファイルとなって/path/to/out_dirに保存される．今回始めてsipsを使ってみたのだが，フォーマット変換やリサイズに関してはImageMagickと同様の便利さでなかなか良かった．まあ今回は速度とかは特に気にしていないので手軽に出来ればそれで良い．</p>

<p>そして，最終的なSphinxのビルドはmake htmlで出力する先をDropboxのPublicフォルダに設定する．Makefileの中にあるBUILDDIRを</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>BUILDDIR = /Users/yag_ays/Dropbox/Public/path/to/dir/</span></code></pre></td></tr></table></div></figure>


<p>とすると，静的な画像ファイルなども含めてPublicの指定ディレクトリ以下に展開される．</p>

<h3>問題点</h3>

<p>最低限の機能さえあれば十分といいつつも，1つだけ気になる点がある．
それはSphinxの検索があまりよろしくないことだ．どうやら予めテキストをn-gramに分割したものからパターンマッチで検索しているらしく，クエリとして投げる単語によっては検索できたりできなかったりする．このあたりが改良できると，曖昧な記憶の中から本を探すときに便利になるのだが…．</p>

<h3>参考</h3>

<p>Sphinxの検索まわりの日本語対応と強化．</p>

<ul>
<li><a href="http://d.hatena.ne.jp/koyudoon/20120126/1327529750">http://d.hatena.ne.jp/koyudoon/20120126/1327529750</a></li>
<li><a href="http://note.sicafe.net/sphinx_memo/JapaneaseSearch.html">http://note.sicafe.net/sphinx_memo/JapaneaseSearch.html</a></li>
</ul>


<p>Product Advertising APIはRubyのamazon-ecsを使った．</p>

<ul>
<li><a href="https://github.com/jugend/amazon-ecs">https://github.com/jugend/amazon-ecs</a></li>
</ul>


<p>sipsの詳細</p>

<ul>
<li><a href="http://d.hatena.ne.jp/toolkit/20060726/p1">http://d.hatena.ne.jp/toolkit/20060726/p1</a></li>
</ul>


<p>iPhoneのSafariでテキスト検索する方法</p>

<ul>
<li><a href="http://www.lifehacker.jp/2011/05/110521iphonesafarisearch.html">http://www.lifehacker.jp/2011/05/110521iphonesafarisearch.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「外国語を身につけるための日本語レッスン」読了]]></title>
    <link href="http://yagays.github.com/blog/2012/09/25/review-critical-speaking/"/>
    <updated>2012-09-25T00:04:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/09/25/review-critical-speaking</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4560049882" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>だいぶ時間が空いてしまった．<a href="http://yagays.github.com/blog/2012/09/05/review-critical-reading/">「外国語で発想するための日本語レッスン」</a>に続いて本書も既に読み終えていたのだけれども，色々な印象をもう片方の本に引っ張られそうだったので，あえて書評を書くのを先送りにしていた1冊．少し間をおいて改めて通読したのだが，その間に本書の技術をどれだけ現実に活かすことができたかと考えると，なかなか自分で評価するのは難しい．</p>

<p>本書「外国語を身につけるための日本語レッスン」は，会話における論理的な言語技術を身につけるための本である．疑問と回答を繰り返す論理的な対話は，基本的に言語に依存しない．ただ，言語の背景にある文化や共通認識によって，そのスタイルというのはかなり違ったものとなっている．そういった点において外国語に翻訳できるような日本語というのは，日本語でありながら日本語的ではない一面も持つ．本書はその違いを埋めつつ言語的に互換があるような論理的な会話を組み立てるために，日本語で曖昧になっている部分をとことん突き詰めて理解するところから始まる．そして，自分の理解を相手にはっきり分かりやすく伝え理解してもらうためには，どういう情報を伝えればいいのか，そしてどういう順番で伝えればいいのかといった具体的な手法が述べられる．</p>

<p>「外国語で発想するための日本語レッスン」が文章の書き方指南だとしたら，本書はプレゼンテーション指南の本だ．自分の考えを人に伝えるという点では同じだが，対話ならではの会話のやり取りやリアルタイムで流れる時間は，文章とは違った即興性や論理展開を必要とする．取り敢えず大学生は背伸びした振りをしてビジネス書や就活本に手をだすくらいなら，一通りこれを読めと言いたくなるような，非常に信頼出来る1冊．できる事なら，テストで自己満足の論述や発表をしては一人満足するものの実際の点数はあんまり良くない，みたいな昔の自分に教えたいくらいだ…．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「原典による生命科学入門」読了]]></title>
    <link href="http://yagays.github.com/blog/2012/09/24/review-lifescience-10-classics/"/>
    <updated>2012-09-24T22:41:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/09/24/review-lifescience-10-classics</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4480094784" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>生物を相手にした学問というのは，医学という人間自身を対象とした研究を含めれば，数学など他の学問に勝るとも劣らない長い歴史を持っている．そのような生命科学において，後世に多大なる影響を与えパラダイムシフトに重要な役割を果たしたと思われる10の著作を取り上げ，その研究の概要と著作の一部の翻訳を纏めたのが本書の概要だ．とりあげられる著作は，ヒポクラテスやアリストテレスのギリシャ哲学から始まり，ハーヴィやデカルト，ベルナール，ラマルク，ダーウィン，メンデル，モーガン，そしてワトソン・クリックと，近代の生物学の勃興を支えた数多くの研究者の名前とその著作が並ぶ．</p>

<p>「巨人の肩の上に立つ」と言うように，今の学問は当然ながら今までの研究成果の上に築かれるが，だからといって過去の科学史を順に追っていく必要もなければ今となっては古くなった知識を入れる必要も無い．だが，今まで人間が築いてきた知識体系の歴史を知るということは，真理であろうとなかろうと，当時の科学思想の理解，そして脈々と続く科学そのものを理解することができる．そういった意味で本書は，当時の歴史背景を含め要点を抑えた形で過去の名著を現代でも読みやすく示されるので，特に過去の名著を知る良い機会となるだろう．原典全部を読むのは大変でも，本書ならある程度の分量で全体を俯瞰することができる．</p>

<p>ただ一つ苦言を呈するならば，本書はただただ単調だ．10の著作それぞれの解説と著作の一部翻訳が羅列されるだけで，その時代の主流を表面的に攫ったようなだけに感じる．百科事典のようであり，ある意味Wikipediaの記事を読んでいるかのような感覚を覚えた．著作の翻訳も紙面の都合上全部が掲載されているわけではなく，特に時代を象徴する箇所をかいつまんだ形で示されるので，どうしても広く浅くという印象しか残らなかった．ここで扱われている著作の多くはそれぞれ文庫などで翻訳が存在するので，生命科学史を俯瞰する必要がなければ個別の著作を当たったほうがいいだろう．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「生命とは何か―物理的にみた生細胞」読了]]></title>
    <link href="http://yagays.github.com/blog/2012/09/23/review-what-is-life/"/>
    <updated>2012-09-23T02:09:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/09/23/review-what-is-life</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4003394615" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p><a href="http://yagays.github.com/blog/2012/09/19/review-chance-and-necessity/">前回の記事</a>で久しぶりに本書を思い出して改めて読み返したのだが，やはりこの本は名著だ．内容自体も，そしてこの本が纏められた時代性を考えても，著者の異才さ非凡さを窺い知ることができる．</p>

<p>本書は理論物理学者，とりわけ量子力学や波動力学の発展に大きく寄与したSchrödingerが，物理学と生物学の分野を統合するような形で生命の真理を追い求めたものである．それは至極簡単な疑問から始まる．なぜ原子は生物に比べてこれほど小さいのか．逆に言えば，万物の最小単位である原子から見て，なぜ生物はこれほどまでに大きく複雑な構造を持っているのかということだ．この疑問の背景には，量子力学における原子レベルでのミクロの不確定性さやマクロでの決定的な振る舞いがある．原子や分子などは，我々が感じる世界と違って，ランダムが支配する世界だ．人間はそのミクロの世界の振る舞いを完全に観測したり予測することができず，また熱や放射線などによる状態変異も起きやすい．生物も当然ながら他の無生物と同じく原子から成り立っているのに，なぜ生物はミクロでの不確実さに影響されることなく安定した構造と機能を保ち続けているのかという問題に，Schrödingerは果敢にも分野を乗り越えて立ち向かっている．</p>

<p>数年前に読んだときにはただ単純に物理学と生物学の融合というところだけを見て面白がっていたのだが，統計力学や確率論をある程度学んだ現在改めてその言説に触れてみると，Schrödingerの言いたかったことをより深く理解できた気がする．読み返しながら幾度と無く「ああ，そういうことだったんだ」とひたすら納得するばかりだった．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「そのデータ，本当？」―思い込みによる曲解と前提条件を信用することの難しさ]]></title>
    <link href="http://yagays.github.com/blog/2012/09/22/data-validity/"/>
    <updated>2012-09-22T08:09:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/09/22/data-validity</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4846108031" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>「<a href="http://www.foocom.net/fs/takou_old/1013/">ヤマザキパンはなぜカビないか</a>」という有名な話がある．保存料無添加を謳っているヤマザキパンと家庭で作った手作りのパン，どちらが先にカビるだろうかという問題だ．正解は家庭で作った手作りのパンの方．なぜなら手作りでパンを作った場合では，どうしてもカビがパンの表面に付着したり中に入り込んだりして増殖しやすいからだ．その点ヤマザキパンのパン工場では，非常に清潔な環境でパンが作られているため，カビが入り込む余地がない．これは実験でも確かめられている事実だ．だが，その問題の本の著者を含め，健康に人一倍敏感な人は解答こそ正しくとも「いや，それはヤマザキパンに保存料が添加されているからだ」と見当違いな主張をしがちである．なぜそのような間違いをするかというと，カビないのはパンに含まれてる何かが原因だとして理論展開していくからだ．上の逸話を書いた方は，これらの議論に欠けているのは量の問題だとし，食品の安全について的確な意見を述べている．</p>

<p>しかし，この話には量の問題以上に，より根本的で難しい問題を抱えている．それは<strong>前提条件・データを信じていないこと</strong>だ．保存料の有無はここでは前提条件として提示されており，同時に科学的なデータでもある．まず冒頭でヤマザキパンには保存料が入っていないと言っているのに，間違えた考え方をする人はヤマザキパンに保存料が添加されているはずだと決めつけてしまう．これは客観的に見れば明らかに言いがかりだ．ヤマザキパンに対して，いいやそれはパンじゃなくてご飯だ，と言っているのと何ら変わらない．ここでは保存料の入っていないパンと言っているのだから，そのパンにレーズンが入っていようとジャムが入っていようと，保存料は入っていないことには間違いない．そこをきちんと抑えておかないと，間違った考え方に走って前提を無視した論調になるのだ．ただ，こういう考えに至るプロセスは分からないわけではない．昔は保存料が入っていたかもしれないし，実は嘘をついてこっそり保存料を入れているかもしれないと疑うのは人間の性だ．ただ，この場合においては素直に前提を受け入れるべきだし，自分の導きたい結果から類推して前提をねじ曲げるのは論理的・批判的な姿勢ではない．</p>

<p>教訓としては，<strong>前提条件を自分で勝手に解釈してはいけない，与えられたデータはその通りに受け取るべきだ</strong>，ということだ．</p>

<br />


<p>今回の例では少し思考実験みたいな形を取ったので，上のように分かりやすい形で問題点が顕になったが，実際の科学的な議論ではこの問題が複雑になりやすい．それは前提条件やデータがはっきりと正しいとは言い切れなかったり他人の意見を元にしている場合だ．データを示してきちんと論理を組み立てたとしても，データ自体を攻撃されることは防ぎようがない．それが再取得可能であったり再現実験できるようなものであれば攻撃に対処できるのだが，大抵はそれが難しい．</p>

<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4862381502" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>山形浩生の「訳者解説」に収められている訳者あとがきの中で，これに関連した話がある．山形浩生が訳した地球温暖化に関する本の中で，ホッキョクグマの個体数の経年変化において一般的な想定とは違った傾向を示しているデータがあるのだが，その本の著者はそのデータを元に話を進めている．山形浩生はそれを変だと思い，自分ならデータの中で一部明らかに怪しい部分は信用しないと言っている．その疑問に対する著者自身の解答は，以下に引用したとおりだ．なお，ロンボルグとは原書の著者のことである．</p>

<blockquote><p>しかしながら、それはあくまで考え方のちがいだ。この点をロンボルグに尋ねると、かれとしてはそうした恣意的なデータの取捨選択はすべきでないとの回答だった。ぼくたちはホッキョクグマの専門家じゃない。データを集めて発表しているところは、一応それなりに一貫性を持ってデータを出している。それについて見る側が自分の勝手な解釈にしたがって、元データをいじるべきではない、という。それをやるのはデータの改ざんだ、と。確かに、それは一理ある。そこから導く結論はもう少し慎重であってもいいとは思うけれど。</p>

<p>「<a href="http://www.amazon.co.jp/gp/product/4862381502/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4862381502&linkCode=as2&tag=yagays-22">訳者解説 -新教養主義宣言リターンズ- (木星叢書)</a><img src="http://www.assoc-amazon.jp/e/ir?t=yagays-22&l=as2&o=9&a=4862381502" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />」(p.213)</p></blockquote>

<p>つまりこの本の著者としては，取り敢えずはデータを信じようよ，素人の解釈でデータをいじるのは改ざんに他ならないんだと言っている．データは確かに怪しいかもしれないけれども，そこは恣意的なデータの取捨選択をしてはいけないというスタンスであり，これこそまさに最初の逸話であった保存料無添加の前提を信じる信じないの話と根っこの部分は同じなのだ．</p>

<br />


<p>だからと言って，この方法を徹底するのはやはり難しい．全てのデータを並べて公平に議論できるわけでもないし，明らかな外れ値などは補正しないとどうしようもない場合もある．単純な思考実験だと容易に論破できるものでも，実際の議論では通用しないことがある．ただ，原則としてこの方法を守ることは非常に重要だ．まずはこの規範を元にして，そこから許容できる範囲内でどれだけ規範を超えられるかが問題だろう．その点，許容できる程度やそのやり方は非常にシビアであり，意見の別れるところだ．僕としては，基本的にデータを信じるべきだしデータの不備は違うデータによって補うべきだと考えているが，うーん，難しい．</p>

<br />


<p>（なお，この文章では冒頭の逸話に則って清潔な製品としてのパンをヤマザキパンと言っており，山崎製パンの実際の商品とは何ら関係がないことを付け加えておく．）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「偶然と必然―現代生物学の思想的な問いかけ」読了]]></title>
    <link href="http://yagays.github.com/blog/2012/09/19/review-chance-and-necessity/"/>
    <updated>2012-09-19T21:28:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/09/19/review-chance-and-necessity</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4622004283" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>本書「偶然と必然」は副題にある通り，進化学や遺伝学など19世紀後半から20世紀半ばにかけて発展した現代生物学という新しい考え方を通して，科学の探求における思想・哲学的な問題に対して指針を示すような内容となっている．著者はノーベル生理学医学賞を受賞したJacques Lucien Monodで，1969年の講演をもとに書かれている．翻訳書は1972年に初版が出版されているので，かれこれ40年も前の本になる．</p>

<p>本書ではまず自然物と人工物の違いなどから生物の特性として合目的性・自律的形態発生・複製の不変性が示される．その過程には「客観性」が重要なキーワードとして登場し，自然の持つ客観性，客観性の前提の元での科学批判の重要性，そして科学そのものが客観性を前提としていることが語られ，自然物と人工物(生物)の矛盾が提起される．そして実際に生物の持つ複雑な機能や役割を，生化学や遺伝学，そして進化学的な視点で解釈していく．そして最後には進化や人間の思考を総括し，人間の知識や倫理問題，第二の進化といった思想的な持論へと発展していく．</p>

<p>とまあ解ったような振りをして纏めてみたものの，実際は殆ど理解していないと思う．全体を通して過去の西洋哲学や各種思想などと織り交ぜて語られるため，概要がつかみにくい部分があってなかなか苦労した．まあこれは私の不勉強からくるものだから仕方がない．昔の名著と呼ばれる本を読むときには必ずといっていいほど起こる現象なのだが，語られる内容や表現の古さからくる難解さと自分の理解の無さが交じり合って非常に不明瞭なまま読み進めなければいけない辺り，内容をただ追うことに専念できる普段の読書とは違ってなかなか辛いものがある．</p>

<p>本書の場合，生命観などの思想に関しては今でも色褪せないような内容だと思われるが，生物学に限って言えば，生物の定義や生命機能の理解のような諸問題に関しては今の主流の考え方とさほど変わらない．生物分野の古典の名著といえば「<a href="http://www.amazon.co.jp/gp/product/4003394615/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4003394615&linkCode=as2&tag=yagays-22">生命とは何か―物理的にみた生細胞 (岩波文庫)</a><img src="http://www.assoc-amazon.jp/e/ir?t=yagays-22&l=as2&o=9&a=4003394615" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />」あたりは上手く物理と融合した内容で改めて今読み直しても結構面白いのだが，本書に限ってはやはり生物学より自然哲学の傾向が強いので，そのあたり読む人を選ぶ本かもしれない．</p>

<p>(追記 2012/09/20)</p>

<p>「<a href="http://www.amazon.co.jp/gp/product/4130633333/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4130633333&linkCode=as2&tag=yagays-22">40年後の『偶然と必然』: モノーが描いた生命・進化・人類の未来</a><img src="http://www.assoc-amazon.jp/e/ir?t=yagays-22&l=as2&o=9&a=4130633333" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />」という本が最近出版されたらしく，書店で立ち読みした限りだとなかなかおもしろそうなので今度読んでみたい．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「ヤバい経済学」読了]]></title>
    <link href="http://yagays.github.com/blog/2012/09/18/review-freakonomics/"/>
    <updated>2012-09-18T21:21:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/09/18/review-freakonomics</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4492313788" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>2010に制作，2011年には日本で公開された映画「ヤバい経済学」は，結論から言って良くも悪くもない普通の映画だった．ネタはだいたい原書から持ってきているので当然面白くないわけがないんだけれども，どうも映像でコンパクトに見せられるとイマイチ面白みが伝わってこないのが残念で仕方がなかった．その原因はおそらく議論の過程が示されないからで，ああでもないこうでもないと反論の応酬や論理の組み上げ方が見えにくいのが問題だと思うのだが，かといって学者が円卓に座って延々人の話もろくに聞かずに議論しあうのを見ても全然面白く無いし…．Steven D. Levittが喋ってる映像を見られたのは良かったけど，具体的な事例は本読んだほうがいいよねという印象．</p>

<p>というわけで映画はあまり冴えない感じだったけど，本書「ヤバい経済学」は出版されてから5年立った現在でもその驚きは色褪せていない．経済学と統計資料を武器に社会通念を次々と覆していく様はまさに爽快そのものだ．不動産屋の売り言葉は本当なのかどうかといった話題から，学校の先生のインチキ，ドラッグの売人が儲かるかどうかに至るまで，ある意味下世話な，ある意味で人々が気付きもしなかった現象について解き明かしてくれる．しかし同時に，読者にとって不都合な真実も突きつけられることになる．日本の相撲界の八百長話や中絶の是非と犯罪率の相関，そして子供の名前と子供の将来など，薄々気付いてはいても認めたくないような結論も含まれる．ただ，じゃあ本書で述べられている議論はみんな正しいからその通りに観たり感じたり接したりしなければいけないのか，と言われれば，そういうわけでは無いというのが本書の最終的な主張だ．最終章のまとめで触られれているように，</p>

<blockquote><p>道徳が私達の望む世界のあり方を映しているのだとすると，経済学が映しているのは世の中の実際のあり方だ．</p>

<p>(p.268)</p></blockquote>

<p>とすると，私達が考えるべきことは世の中の実際のあり方から私達の望む世界へと適切にフィードバックしていくことだ．それに，個別の例で見ていけば必ずしも統計的な結論とはそぐわないことが出てくることも，念を押すかのように最後に書かれている．ある種の希望のような終わり方であり，また改めて現実を突きつけられているようでもある．</p>

<br/>


<p>そういえば，上の文章を書き終えた後に，ちょういいタイミングで山形浩生が本書について言及していたので，それについてもちょっと書き加えておこう．</p>

<p>どうやら中絶の合憲判定とアメリカの犯罪低下については最終的に間違いだったらしいことが分かっているとのこと．この話題は本書の核のような話題だけに，もしそうだとすると少し残念だ．じゃあ何が原因で犯罪の低下につながったのかが気になるところだが，リンク先の論文のAbstを見る限りだと間違いの指摘しか書いてなさそうなので，その辺は追えていない．これを受けてのLevittの新しい見解が気になるところだが，また新しく本でも書いてその中で言及して欲しいところ．</p>

<ul>
<li><a href="http://d.hatena.ne.jp/wlj-Friday/20120918/1347949754">http://d.hatena.ne.jp/wlj-Friday/20120918/1347949754</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「さっさと不況を終わらせろ」読了]]></title>
    <link href="http://yagays.github.com/blog/2012/09/17/review-enddepression/"/>
    <updated>2012-09-17T09:31:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/09/17/review-enddepression</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4152093129" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>うーん，やっぱり経済学は難しい．僕の知識はスティグリッツの入門経済学くらいで止まってて，大学での興味は経済学よりマーケティングの方に傾いちゃったから，そもそも基礎の辺りで分かってないんだろうなと思うことが多い．本書なんかはその点かなり分かりやすく書かれているんだろうとは思うんだけど，ベビーシッター協同組合の上手い喩えから抜けだしたあたりの，じゃあFRBや政府や投資銀行やらの具体的な政策の話に入ると，どうしても要点がつかみにくくて難しいと感じてしまう．やっぱり経済学という枠の中での定番の話について知っておかないと，クルーグマンが如何に大胆な提言をしているのかといった部分についても見えてこないんじゃないかという心配もある．</p>

<p>まあそれでも経済学は面白い．ヒトの物々交換が何でこんな複雑怪奇で実感とかけ離れたところまで来てしまったんだという歴史的なところから，その裏に隠れた経済活動を加速するための巧妙な仕組み，そして現実世界で今起こっている現象に対して頭のいい人たちがよってたかって集まって殴り合っている様はどれも非常に面白い．あとは「<a href="http://www.amazon.co.jp/gp/product/4492313788/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4492313788&linkCode=as2&tag=yagays-22">ヤバい経済学</a><img src="http://www.assoc-amazon.jp/e/ir?t=yagays-22&l=as2&o=9&a=4492313788" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />」のような日常に落とし込んだ経済学も，それはそれで実感レベルでの驚きがあって良い．経済学という人間の経済活動を研究すること自体，ドライバーが自分のポンコツ車を高速で走らせたまま修理するようなもので（これ何の喩えだっけ），それにしても本当に難しい学問だとも感じる．</p>

<p>本書は，リーマン・ショック以降の現在のアメリカおよびユーロ圏の経済停滞において「これからどうするのか？」という問題を，過去の大恐慌やその時代のジョン・メイナード・ケインズの研究を軸に考えていこうという内容となっている．もちろん政府やFRBのバーナンキなどはどうにかして停滞を脱しようとしているわけだが，その政策はまだまだ甘い，効果が稀薄だとクルーグマンは主張する．</p>

<p>さて，本書に関してはまあざっと読んで付箋をペタペタ貼りまくって一応は通読したわけだけど，取り敢えず外堀を埋めるという意味でも，もうちょっと経済学の基礎の部分を勉強していきたいところ．いくつか既に本は買ってあるし，スティグリッツの教科書もまだ残っているので，どういう感じで攻めていこうか考え中．</p>

<p>あと，先日のニコニコ生放送の宮崎哲弥x山形浩生x田中秀臣は本書を読む上でとても参考になった．</p>

<ul>
<li><a href="http://live.nicovideo.jp/watch/lv107129123">http://live.nicovideo.jp/watch/lv107129123</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「スーパーコンピューターを20万円で創る」読了]]></title>
    <link href="http://yagays.github.com/blog/2012/09/16/review-supercomputer/"/>
    <updated>2012-09-16T02:24:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/09/16/review-supercomputer</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4087203956" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>以前「情熱大陸」という番組で理論天文学者である小久保英一郎がTVで語った言葉が，今でも強く印象に残っている．その言葉が番組のページに残っているので少し長めに引用させてもらうと，</p>

<blockquote><p>「探検は知的情熱の肉体的表現である」</p>

<p>（チェリー・ガラード：スコット南極探検隊）</p>

<p>僕はこれ、だいッ好きな言葉で。</p>

<p>もう何ていうか、
このように生きていきたいと思っているわけです。</p>

<p>「シミュレーションは知的情熱の計算機的表現である」と。</p>

<p>ほんとは僕、探検家になりたかったんですけど。</p>

<p>まあなかなかそういう世の中でもないので、</p>

<p>知的な探検をする、と。</p>

<p>で、道具はスーパーコンピュータということでやっています。</p>

<p><a href="http://www.mbs.jp/jounetsu/2008/01_20.shtml">http://www.mbs.jp/jounetsu/2008/01_20.shtml</a></p></blockquote>

<p>と，計算機シミュレーションを端的に素晴らしい言葉で言い表している．本書「スーパーコンピューターを20万円で創る」は，小久保英一郎がスーパーコンピューターGRAPEの開発に参加する少し前，まだスーパーコンピューターというものが企業主導の大資本で大規模開発されていた頃に，重力多体問題のシミュレーションを行うために自力でスーパーコンピューターを組み上げた研究者たちの実話の物語となっている．</p>

<p>内容はかなり大雑把に物語を追いかける形となっており細かい部分に少し物足りなさは感じるものの，それでも当時の研究者の熱意や苦悩がひしひしと伝わってくる．私自身も今現在彼らと同じような立場にあるのだが，自分の境遇と似た部分も多く，非常に勇気づけられると同時に研究への情熱を奮い立たせられるような作品だった．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「H5N1―強毒性新型インフルエンザウイルス日本上陸のシナリオ」読了]]></title>
    <link href="http://yagays.github.com/blog/2012/09/15/review-h5n1/"/>
    <updated>2012-09-15T23:54:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/09/15/review-h5n1</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4478002401" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>本書はフィクションでありながら，同時にノンフィクション，想定されうる未来でもある．本文の言葉を借りるならば</p>

<blockquote><p>新型インフルエンザの出現は&#8221;if&#8221;ではなく&#8221;when&#8221;の問題
(p.19)</p></blockquote>

<p>なのである．</p>

<p>本書は，東南アジアのある国で起きた鳥インフルエンザの人への感染と強毒化を起点し，そのインフルエンザウィルスがどのようにして感染を拡大し日本に上陸してパンデミックを起こすかを，歴史的・科学的知見を元に詳細なディテールとともにシミュレーションしたものである．インフルエンザウィルスといっても，毎年のように冬になると家族や職場の同僚が罹るようなインフルエンザウィルスではない．最も重要なのは，それが新型でありワクチンがまだ世に存在しないこと，そして強毒性のため感染者に重大な多臓器不全を起こすということである．そのようなウィルスは，感染の拡大を妨害されることなく有病者から空気を媒介して他人に感染する．ウィルスは数日の潜伏期間があるため，感染者は必ずしも病気の症状が出ているわけではない．そのような人知れずウィスルを保持する感染者が，検疫という科学の目すらもかいくぐって，空港，鉄道，バス，職場，そして家庭へとウィルスをばらまき，新たな感染者を生み出し，そして大規模な感染拡大へとつながっていく．</p>

<p>本書で描かれるのは主に感染症研究所の研究員や病院の医者，保健所職員，空港の検疫官など，職業としてインフルエンザウィルスと対峙していく人間だ．彼ら/彼女らの奮闘も虚しく無慈悲にも感染は拡大していくのだが，そこから見えてくるのは，市民の感染症への無知と政府地方自治体の準備不足，そして刻々と死者が増えていく無残な現実だ．インフルエンザウィルスに対して何も対処出来ない感染者，市民，医療従事者，病院，そして政府．淡々と語られる現実の中で感じるのは，様々な不条理に対する苛立ちと無力感，もどかしさなど，本書が読者に訴えかけるものは様々だ．</p>

<p>2011年公開の映画「<a href="http://ja.wikipedia.org/wiki/%E3%82%B3%E3%83%B3%E3%83%86%E3%82%A4%E3%82%B8%E3%83%A7%E3%83%B3">コンテイジョン</a>」も，強毒性新型ウィルスがアメリカ全土に感染拡大していく中で起こる様々な人間模様を描いた映画であり，本書と非常によく似た作品で共通点も多い．この映画はアメリカ疾病予防管理センター（CDC）や専門家などの協力を得て作成されており，また本書の著者は国立感染症研究所研究員と，どちらも医科学的なリアリティを持ちながらも，同時にフィクションとしての緻密さや現実感を伴って見事に描き切っている．私は映画を見てから本書の存在を知り，今更ながら読んだわけだが，どちらも綿密に練られたストーリーと科学的な裏付けがされた，とても良い作品だった．あと，読み終わった後には必ず何かしないといけないという衝動にかられるだろう．それだけの危機意識を感じさせるという意味でも，本書は非常に啓蒙的でよく作られていると思う．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「『言語技術』が日本のサッカーを変える」読了]]></title>
    <link href="http://yagays.github.com/blog/2012/09/14/review-tajima-soccer/"/>
    <updated>2012-09-14T01:03:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/09/14/review-tajima-soccer</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4334034268" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p><a href="http://yagays.github.com/blog/2012/09/05/review-critical-reading/">前回の「外国語で発想するための日本語レッスン」の記事</a>で，三森氏の言語技術に関連した書籍としてnext49さんに教えていただいた新書を読んだ（参考：<a href="http://d.hatena.ne.jp/next49/20120906/p1">next49氏のblog記事</a>）．</p>

<p>本書は，海外のサッカー指導法に影響を受けた田嶋幸三氏が，日本のサッカー選手/指導者の育成に言語技術などを取り入れ実践している現場を紹介したものとなっている．田嶋氏は個人的な指導にとどまらず，指導者のライセンス制度の改革や全寮制のエリート育成学校を立ち上げるなど，精力的に活動されている．その中で教えている内容というのが，本書のキーワードである「言語技術」である．どのようにして選手に考える力を付け自己決定力の能力を育てるか，そういう選手に育てるようなサッカー指導者自体をどう育てるか，そういった選手と指導者の両者にわたる指導法が非常に詳しく具体的に書かれている．それに加え，現在の活躍に至る過程にあった，田嶋氏自身の留学の苦い経験や海外勢の根本的に違う価値観や考え方，そして日本サッカー自体の不振と再興への思いも盛り込まれている．</p>

<p>三森ゆりか氏の著作では言語技術の基礎や背景などの理論的な部分が多かったが，本書ではより応用・実践的な部分について，じゃあどうやって子供に教えればいいのか，どういう段階を踏むべきなのか，目指すところはどこなのかといった疑問をひと通り網羅している．ただ，かなり多岐にわたるトピックが新書1冊に詰め込まれているため，始めにいきなり服装や態度の話から入ったり，論理とは別の話として偉人の言葉のリスペクトといった本題から脇にそれる話が挟まったりと，少し論理的な思考技術から外れる部分もあるが，言語技術に関しては実例とともに分かりやすく整理されている．そして何よりもまず実践に基づいた語り口ほど説得力のあるものは無いと言える．三森氏の「外国語で発想するための日本語レッスン」と合わせてお薦めできる1冊だ．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「小さなチーム、大きな仕事〔完全版〕」読了]]></title>
    <link href="http://yagays.github.com/blog/2012/09/13/review-rework/"/>
    <updated>2012-09-13T08:25:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/09/13/review-rework</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=415209267X" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>Ruby on Railsなどで知られる37signalsのJason FriedとDHHの著作．ハヤカワ新書juiceで既に書籍化されていたが，完全版となるにあたって原書付属のイラストが加わり，ハードカバーになっているほか，訳者あとがきが削除されている．</p>

<p>私はハヤカワ新書の時に一度読んでいるので今回改めて読み返したのだけれども，口調はぶっきらぼうながらも極限まで突き詰めたシンプルさと合理性で，非常に痛快だ．まさに彼ららしいやり方だと感じる．これを異端と捉えるか革新と捉えるかは最終的に読者に委ねられるが，一つだけ確かなことは，彼らはこの方法で収益を上げて成功している．そういう意味で，この企業はビジネスの世界では絶対的に正しい．</p>

<p>あと，はてブが全くついてないので意外だったのだが，37signalsの本書公式ページで旧体制の大企業を痛烈に批判したプロモーションビデオがあるので，本書を読まれた方はぜひ一度見て見ることをお薦めする．</p>

<ul>
<li><a href="http://37signals.com/rework">http://37signals.com/rework</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「小さく賭けろ！―世界を変えた人と組織の成功の秘密」読了]]></title>
    <link href="http://yagays.github.com/blog/2012/09/12/review-little-bets/"/>
    <updated>2012-09-12T12:51:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/09/12/review-little-bets</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4822248968" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>主張は恐ろしく簡潔だ．成功者は小さな試行錯誤を繰り返す．様々な試行は殆ど失敗に終わるが，それを経験と見なして学習する．そして多数の失敗の中から小さな成功を見つけて，それを積み重ねていく．そういった一連のプロセスを「小さな賭け」と呼び，近年大きな活躍を見せている起業家や会社，コメディアンから軍隊までが，どういった方法で小さな賭けを実行しているかを，社会心理学や人類学などの最新知見とともに詳しく解説したのが本書「小さく賭けろ！」である．</p>

<p>こんな分かりきったことを言うだけなら，これほど簡単なことは無い．しかし，本書の前半では成功者に共通する方法からさらに踏み込んで，どういった態度で試行錯誤から失敗を学び成功を導き出せばよいのか，その基本的な思考パターンというものを心理学的な側面から解析している．本書ではそれをマインドセットと呼び，社会心理学者のCarol Dweckが研究しているモチベーションの研究を引き合いに出して，人が学習する態度には「固定的マインドセット」と「成長思考のマインドセット」の2つがあるとしている．この対比は本書の図によくまとまっているが，そこから言葉を少し拝借すれば，固定的マインドセットの人間は「知性は静的」であると思い込み「頭が良いと見られたい」がために，自分の中で言い訳を作り「自由意志の力を信じず，決定論的に世界を見るようになりやすい」としている．一方，成長思考のマインドセットの人間は「知性は成長できる」と考え「学ぶ意欲が強い」がために，「自らの意志の力を信じる傾向が強まる」という性質がある．この2つのマインドセットは完全に人によって区別できるものではなく，両者のバランスの上に成り立っているとしながらも，それぞれが学習や失敗，批判や人の成功に対して取る態度は恐ろしいほど異なっている．そして，本書の主題である小さな賭けを繰り返すアプローチは，上で示した成長思考のマインドセットと親和性が高く，その思考を鍛えることに繋がると結論づけている．つまり，ただひたすらに試行錯誤を繰り返せば良いアイデアが自ずと出てくるというわけではなく，一連のプロセスから得られる結果を自分がどう捉えるかによって，その価値を認め活かすことができるかどうかが決まってくるというのだ．この分析は，具体的な事例から成功者の成功者たる所以を知るための背景知識として，非常に重要な意味合いを持ってくる．</p>

<p>本書後半では，どういう人間が試行錯誤の中から成功の予兆を感じ取りやすいかといった問題や，試行錯誤を実践するための具体的な方法，偉大な成功者たちの事例などが多数示されている．本書はハウツー本では無いので，何をすれば成功できるといったマニュアルのようなものは書かれていない．しかし，個人がどのように独創的なアイデアを生み出し不確実性に対処できるようなクリエイティブな活動ができるか，その方法と実例がたっぷり詰まった1冊だと言える．</p>

<p>(追記 2012/09/12)</p>

<p>こことは別の個人的な雑文置き場のblogに，この本の逸話にまつわる話を少し書いた．上の文章よりも意外によく纏まってしまったので差し替えようかとも思ったが，取り敢えず別の話なのでそのままにしておく．</p>

<p><a href="http://yag-ays.hatenablog.com/entry/2012/09/12/142735">http://yag-ays.hatenablog.com/entry/2012/09/12/142735</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「世界でもっとも強力な9のアルゴリズム」読了]]></title>
    <link href="http://yagays.github.com/blog/2012/09/09/review-nine-algorithms/"/>
    <updated>2012-09-09T01:14:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/09/09/review-nine-algorithms</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=482228493X" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>題名は少し語弊があるし，あまりにも意訳しすぎている．原題&#8221;Nine Algorithms that Changed the Future: The Ingenious Ideas that Drive Today&#8217;s Computers&#8221;を見てもらえればわかるとおり，本書で取り上げられているアルゴリズムはどれも，1930年以降の計算機科学の勃興において中心的な役割を果たしたものから，近年のビッグデータなどに伴う大規模情報処理の手法に至るまで，現在の情報社会に強く影響を与え続けているものばかりだ．それらを9つの分類に分けて，それぞれ具体例を用いて分かりやすく解説したのが本書である．対象としているアルゴリズムは主に，Webの検索エンジンやページランクに始まり，セキュリティにまつわる公開鍵暗号やデジタル署名，データの取り扱いにまつわるデータベースやデータ圧縮，さらには機械学習に代表されるパターン認識まで，アルゴリズムというトピックに縛られることなく情報理論や計算機科学などを広くまたぐような形で選ばれている．また，10章「決定不可能性とはなにか」では停止性問題に関わる話題も組み込まれており，ただのアルゴリズムの事例紹介だけに留まらないことがわかる．</p>

<p>上に書いた通り，本書には様々な話題が詰め込まれているが，それを300ページ足らずの本で理論から応用まで網羅することなど不可能なことは明らかだろう．アルゴリズムの根本的な仕組みは丁寧に解説されるが，実際にどういう形で使われているかといった詳細な部分に関しては省かれている場合が多い．このような内容に関して，何を書いて何を書いていないかといったことはイントロダクションで詳しく述べられており，普段何気なくコンピューターや携帯を使っている人に，その裏で使われているアルゴリズムを少しでも意識してもらいたいという趣旨で書かれているようだ．そういった点で，アルゴリズムがどこで使われているか，何を目的としているか，どのような仕組みで実現しているのかといった要点は非常に上手くまとまっている．その反面，ある程度情報理論やプログラミングに明るい人が読むと，少し物足りなさを感じるだろうと思う．アルゴリズムの歴史などは面白いかもしれないが，それ以外の部分はかなり初歩的な内容の復習になってしまう．知っているところは読み飛ばしたり，アルゴリズムの説明の仕方や具体例を学ぶといった割り切りが必要になってくる．個人的にはmodを時計に喩えて説明している箇所がなるほどといった感じだったが，人に説明するときは使えても自分で読む文には逆に辛いものがある．</p>

<p>題名だけ見ると安いまとめサイトみたいな印象だが，内容は確かだ．非インターネット世代向けの啓蒙書，またはインターネット世代がこれから勉強するキッカケとなるような入門書だと言える．</p>
]]></content>
  </entry>
  
</feed>
