<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Wolfeyes Bioinformatics beta]]></title>
  <link href="http://yagays.github.io/atom.xml" rel="self"/>
  <link href="http://yagays.github.io/"/>
  <updated>2014-08-31T11:28:41+09:00</updated>
  <id>http://yagays.github.io/</id>
  <author>
    <name><![CDATA[yag_ays]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[私的Vowpal Wabbitまとめ]]></title>
    <link href="http://yagays.github.io/blog/2014/08/31/vowpal-wabbit/"/>
    <updated>2014-08-31T10:47:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/08/31/vowpal-wabbit</id>
    <content type="html"><![CDATA[<h2>VWとは</h2>

<blockquote><p>The Vowpal Wabbit (VW) project is a fast out-of-core learning system sponsored by Microsoft Research and (previously) Yahoo! Research.</p>

<p><a href="https://github.com/JohnLangford/vowpal_wabbit/wiki">Home · JohnLangford/vowpal_wabbit Wiki</a></p></blockquote>

<h2>Install</h2>

<p>要Boost．</p>

<h4>Linux</h4>

<p><a href="https://github.com/JohnLangford/vowpal_wabbit/blob/master/README.md">vowpal_wabbit/README.md</a>に書いてある通り，git cloneしてmakeする．それが駄目なら./autogen.shしてからmakeする．</p>

<p>自分の場合は./autogen.shがエラーを吐いたので調べたところ，./autogen.sh内部でldconfigに失敗してBOOST_DIR_ARGが取得でていないのが原因だった．su権限でldconfigをしてLIBFILEの箇所を以下のように書き換えて対処した．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#  LIBFILE=`ldconfig -p | grep program_options | tail -n 1 | cut -d &#39;&gt;&#39; -f 2`</span>
</span><span class='line'>  <span class="nv">LIBFILE</span><span class="o">=</span><span class="s2">&quot;/usr/lib64/libboost_program_options-mt.so&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Mac OS X</h4>

<p>Mac OS Xの場合Homebrewでバイナリをインストール可能だが，vw-varinfo等のutil系は入らない．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>brew info vowpal-wabbit
</span><span class='line'>vowpal-wabbit: stable 7.7 <span class="o">(</span>bottled<span class="o">)</span>, HEAD
</span><span class='line'>https://github.com/JohnLangford/vowpal_wabbit
</span><span class='line'>/usr/local/Cellar/vowpal-wabbit/7.7 <span class="o">(</span>30 files, 4.7M<span class="o">)</span> *
</span><span class='line'>  Poured from bottle
</span><span class='line'>From: https://github.com/Homebrew/homebrew/blob/master/Library/Formula/vowpal-wabbit.rb
</span><span class='line'><span class="o">==</span>&gt; Dependencies
</span><span class='line'>Build: boost ✔, autoconf ✔, automake ✔, libtool ✔
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>brew install vowpal-wabbit
</span></code></pre></td></tr></table></div></figure>


<h4>Windows</h4>

<ul>
<li><a href="http://qiita.com/shima_x/items/9147eaa3626fab87ada2">機械学習 - windowsマシンでvowpal wabbitを使う（個人的メモ） - Qiita</a></li>
</ul>


<h2>VWを始めるときに気をつけるポイント</h2>

<ul>
<li>VWの独自フォーマット

<ul>
<li>VWを使いはじめるときの最初の難関ポイント</li>
<li>自分でcsvなどのデータをVWフォーマットに変換する必要がある</li>
<li>カテゴリ変数やテキストはそのまま列挙しても大丈夫．VWの方でn-gramも取ることができる</li>
</ul>
</li>
<li>VWのパラメータ名

<ul>
<li>資料によってパラメータの名前が違うので注意</li>
<li>自分の環境で<code>vw --help</code>して適宜読み替える</li>
</ul>
</li>
</ul>


<h2>Tutorial</h2>

<ul>
<li><a href="https://github.com/JohnLangford/vowpal_wabbit/wiki/Tutorial">Tutorial · JohnLangford/vowpal_wabbit Wiki</a>

<ul>
<li><a href="https://github.com/JohnLangford/vowpal_wabbit/wiki/v7.0_tutorial.pdf">https://github.com/JohnLangford/vowpal_wabbit/wiki/v7.0_tutorial.pdf</a>

<ul>
<li>Binary Classification and Regression</li>
<li>Multiclass Classification</li>
<li>“Offline” Contextual Bandit</li>
<li>Sequence Predictions</li>
</ul>
</li>
</ul>
</li>
<li><a href="http://zinkov.com/posts/2013-08-13-vowpal-tutorial/">Convex Optimized - Vowpal Wabbit tutorial for the Uninitiated</a>

<ul>
<li>かなり幅広く網羅したtutorial</li>
</ul>
</li>
</ul>


<h2>Other Resources</h2>

<ul>
<li><a href="http://www.slideshare.net/pauldix/terascale-learning">Terascale Learning</a></li>
<li><a href="http://www.slideshare.net/jakehofman/technical-tricks-of-vowpal-wabbit">Technical Tricks of Vowpal Wabbit</a></li>
<li><a href="http://fastml.com/large-scale-l1-feature-selection-with-vowpal-wabbit/">Large scale L1 feature selection with Vowpal Wabbit - FastML</a>

<ul>
<li>L1 Regularizationについて</li>
<li><a href="http://www.kaggle.com/c/job-salary-prediction">Job Salary Prediction | Kaggle</a></li>
</ul>
</li>
<li><a href="http://fastml.com/vowpal-wabbit-eats-big-data-from-the-criteo-competition-for-breakfast/">Vowpal Wabbit eats big data from the Criteo competition for breakfast - FastML</a>

<ul>
<li>コンペの評価方法がLogarithmic Lossだから，VWの<code>--loss_function</code>をlogisticにしてくとVWの標準出力のaverage lossの部分がだいたいKaggleのスコアになるという話</li>
<li><a href="http://www.kaggle.com/c/criteo-display-ad-challenge">Display Advertising Challenge | Kaggle</a></li>
<li>変数が大量にあるとfeature hashingの時にHashValが衝突(collision)するから，<code>-b</code>でちょっと大きめにしておくといいという話

<ul>
<li><a href="https://github.com/JohnLangford/vowpal_wabbit/wiki/Feature-Hashing-and-Extraction">Feature Hashing and Extraction · JohnLangford/vowpal_wabbit Wiki</a></li>
<li>むやみに大きくしても意味がないので，使用するデータのfeature数に合わせて調節する</li>
<li>VWは通常メモリ使わないほうだけど，<code>-b</code>を大きくするとGBレベルでメモリ消費するようになる．最大の<code>-b 32</code>だと64GB程度</li>
</ul>
</li>
</ul>
</li>
<li><a href="http://blogs.technet.com/b/machinelearning/archive/2014/08/13/vowpal-wabbit-for-fast-learning.aspx">Vowpal Wabbit for Fast Learning - Machine Learning - Site Home - TechNet Blogs</a>

<ul>
<li>Vowpal Wabbitの名前の由来が書いてある</li>
</ul>
</li>
<li><a href="http://fastml.com/go-non-linear-with-vowpal-wabbit/">Go non-linear with Vowpal Wabbit - FastML</a>

<ul>
<li>VWの様々な機能(Neural Network,Quadratic and cubic features, N-grams)について</li>
<li><a href="https://www.kaggle.com/c/amazon-employee-access-challenge">Amazon.com - Employee Access Challenge | Kaggle</a></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[kimonoでKaggleユーザのクロールをしてみた]]></title>
    <link href="http://yagays.github.io/blog/2014/08/18/kaggle-users-japan/"/>
    <updated>2014-08-18T20:37:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/08/18/kaggle-users-japan</id>
    <content type="html"><![CDATA[<p>ふとKaggleに参加している日本人がどれくらいいるのかが気になったので，簡単にクローラーを作って調べてみた．</p>

<h3>Kimonoを使ったクロール</h3>

<p>手動でクローラーを書いてもいいのだけれども，今回は<a href="https://www.kimonolabs.com/">kimono</a>というクローラーを使ってみた．</p>

<ul>
<li>参考：<a href="http://blog.takuros.net/entry/2014/08/13/212838">プログラミング・レスで5分でサックリWebスクレイピング「kimonolabs」 - プログラマになりたい</a></li>
</ul>


<p>kimonoはWebから簡単にクローラーを作成してAPIやJSON形式で取得できるようにするようなアプリケーションで，Chrome Extensionを使うことでインタラクティブにクロールする内容を選択することができる．今回は，<a href="http://www.kaggle.com/users/">Kaggle Rankings</a>のランキング500ページ分をクロールして，20000人分のユーザの情報（名前，ランク，ポイント，ロケーション）を取得した．今回クロールした結果は，以下のkimonoのウェブページから誰でも利用できるはず(アカウント持ってないと見れないかな)．ただしrankとptsが一緒になってたりとちょっと汚いので注意．</p>

<ul>
<li><a href="https://www.kimonolabs.com/apis/dyo7tdm8">https://www.kimonolabs.com/apis/dyo7tdm8</a></li>
</ul>


<p>ちなみに，どれくらい簡単にできるかをgif動画にしてみた．最初は色々戸惑った部分もあったけれど，慣れてしまえば本当に簡単に扱える．以下の場合だと，ユーザ情報がページあたり50人分あるので，ある部分を選択したあとに他の部分も同様に取得するようにチェックを付けるのが重要．あと，paginationはいわゆる「次」にあたる部分を選択する．本当は選択した部分に対して正規表現を掛けてテキスト処理をかけることもできるのだけれども，今回は行っていない．</p>

<p><img src="http://dl.dropboxusercontent.com/u/142306/b/kimono.gif" alt="" /></p>

<h3>後処理</h3>

<p>クロール自体はkimonoに任せることができたので，ここからはpythonスクリプトをちゃちゃっと書いて整形作業．クロールしたデータはJSON形式やcsv形式でダウンロードすることもできるが，今回はAPIから叩いてみる．kimonoの&#8221;Use in code&#8221;というタブに，CurlやjQuery，Node，PHP，Python，Rubyでそれぞれ書かれたスクリプトがあるので，それを使ってデータを取得する．例えば，curlとPythonだと以下のようになる</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ curl --include --request GET "https://www.kimonolabs.com/api/dyo7tdm8?apikey=7ZTTugRoP8xgIlOdAdyiHmwP4rFLviDO"</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">json</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">urllib</span>
</span><span class='line'>
</span><span class='line'><span class="n">results</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">urllib</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span><span class="s">&quot;https://www.kimonolabs.com/api/dyo7tdm8?apikey=7ZTTugRoP8xgIlOdAdyiHmwP4rFLviDO&quot;</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>今回は日本人のアカウント一覧が欲しいので，&#8221;Country of residence&#8221;にJapanと書かれていてかつポイントを持っているアカウント一覧を出力した．なお，ユーザプロフィールの記入は基本任意なので，<strong>プロフィールで&#8221;Country of residence&#8221;を編集していない日本人は対象外になっている</strong>．</p>

<h3>リスト(2014/08/18現在)</h3>

<p>ユーザページに飛べるように一応HTMLにした．気が向いたら定期的にアップデートするようにして，もっときちんと体裁整えるかも．こういった公開も含めてkimono側で簡単なインターフェイスがあると楽なんだけどなーと思った．</p>

<ul>
<li><a href="https://dl.dropboxusercontent.com/u/142306/kaggle_jpn.html">https://dl.dropboxusercontent.com/u/142306/kaggle_jpn.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「バッドデータハンドブック ―データにまつわる問題への19の処方箋」読了]]></title>
    <link href="http://yagays.github.io/blog/2014/08/16/review-bad-data-handbook/"/>
    <updated>2014-08-16T16:51:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/08/16/review-bad-data-handbook</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4873116406" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>最近流行りの華々しいデータ解析の現実をつきつけられる1冊．ビッグデータといって騒いでいるお偉いさんは「顧客の行動データを収集して解析することで業務効率化」といった言葉を軽々しく口にするけれども，実際はそんな一言で片付けられるほど容易ではない．現実のデータ解析は泥臭く，手垢にまみれていて，そしていつも試行錯誤の繰り返しだ．手に入るデータがどれも十分な量あって構造化されていて綺麗なことなんてあるわけがない．そんなバッドデータを相手にどう立ち振る舞うかについて，大学で統計学を教えている講師から，データサイエンティスト，経済学者，スタートアップの共同創業者などなど，様々な分野の人間が自身の体験や知識をもとに書いている．それぞれがコンパクトにまとまっていて関連性が無いので，雑誌をペラペラめくる感覚で好きな箇所を読むことができる．</p>

<p>そのなかで個人的に面白かった章を幾つかピックアップして紹介してみる．</p>

<h4>3章 機械ではなく人間が使うことを意図したデータ</h4>

<p>いわゆるネ申エクセルのような人間が読むことを前提にした非構造化データを，いかにプログラムで読み取るかという話．ここではニュージーランドの学校ごとの成績の統計を取ろうとしているのだけれども，Excelのスプレッドシートにまとめられているうえに，男子校だからという理由で女生徒の情報が入力されていなかったり，男子校なのになぜか女生徒の結果が入っていたり&#8230;とデータ取得の苦労が見られる．それでも著者は，コードを書くことが解決法であり，データフォーマットを自在に変換できることこそが重要な能力であると断言する．実際には厳しい道だけれども，まさにその通りだと思う．</p>

<h4>8章 血と汗と尿</h4>

<p>英国安全衛生研究所に持ち込まれる大量のサンプルの化学的解析を行っていた著者の話．化学者のカルチャーを身をもって体験した話がとても面白く，実験系の人のことを知っていれば非常に共感できる内容になっている．著者の同僚の化学者はその道のプロフェッショナルで，データの測り方に必要な計器のキャリブレーション，実験で出てくるデータのピアレビューといった方法など，化学の世界で独自に発展させてきた技術や経験があるものの，いまだにExcelですべて完結させていたりと，データ解析の面では改良の余地がある．なんとかして構造化データとしてまとめた上で自動化したいんだけど，現実にはデータのタイプや欠損値の扱いなど様々なハードルがある．それでも怠惰という自動化は素晴らしいし，適切なコードを書くことで達成できるというもの．</p>

<h4>14章 クラウドコンピューティングの神話</h4>

<p>この章はちょっと系統が違っていて，データ解析というよりかはクラウドの現実に焦点が当てられている．著者はMongoDBを開発している10genのエバンジェリスト．内容はストーリー仕立てで，自分のサービスをクラウドで運用しはじめたスタートアップCTOの主人公が，次第に規模が大きくなっていくにつれて様々な障害に直面していくという流れになっている．地道なパフォーマンスチューニングにはじまり，クラウドが落ちてどうしようもなくなったり，小規模だからといって手動で行っていたことが仇となったり，次第にスケールしなくなっていく水平方向のサーバ増強，コストの増加など，非常にリアルな話が次々と出てくる．結局はバズワードに飛びつくのは勝手だが現状を打破して何でも解決してくれる技術なんて存在しないということなんだけれども，将来的に技術が発展してそういう未来になるといいよねという，本来私たちが望んでいる理想で締められているところが良い．</p>

<h4>16章 機械学習の専門家の手なづけ方</h4>

<p>Kaggleというデータ解析のコンテストに出題側として参加したスタートアップの創業者の話．サービスに合う機械学習アルゴリズムの開発をKaggleを通してアウトソースするのは，一見簡単そうに見えて実は大変で，データセットの作成から評価方法の検討，匿名化，コンテスト運営など，クリアしなければいけない関門は意外に多い．それでもコンテストの結果は満足のいくものだったし，自分たちで正解セットをタグ付けしたり特徴量を考えたりすることによって，結果的に出題者自身が問題を正しく理解できたという側面もあったという．こういったデータ解析分野としての新しいコミュニティやプラットフォームが出てきて企業の問題解決につながるというのは，データ解析に身をおく人間として望む未来だよなぁとしみじみ思う．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iPython Notebookの--pylab inlineは使うのをやめようという話]]></title>
    <link href="http://yagays.github.io/blog/2014/08/15/ipython-notebook-matplotlib-inline/"/>
    <updated>2014-08-15T09:48:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/08/15/ipython-notebook-matplotlib-inline</id>
    <content type="html"><![CDATA[<h3>TL;DR</h3>

<p><code>ipython notebook --pylab inline</code>のかわりに<code>ipython notebook --matplotlib inline</code>を使おう．もしくはipythonの始めに<code>%matplotlib inline</code>を実行しておく．</p>

<h3>iPython Notebookについて</h3>

<p>周知の事実だとは思うが，<a href="http://ipython.org/index.html">iPython</a>は超便利なPythonのインタラクティブシェルだ．その一部として<a href="http://ipython.org/notebook.html">iPython Notebook</a>というのがあり，ブラウザでコードを実行できたり，実行結果をノートとして保存したり，matplotlibなどで描写したグラフをノートの中にそのまま表示したりできる．RでいうところのRstudio+knitrのような，解析レポートを作るときには重宝するツールとなっている．</p>

<br/>


<p><img src="https://dl.dropboxusercontent.com/u/142306/b/ipythonnotebook.png" alt="http://nbviewer.ipython.org/gist/twiecki/3962843より" /></p>

<p>(<a href="http://nbviewer.ipython.org/gist/twiecki/3962843">http://nbviewer.ipython.org/gist/twiecki/3962843</a>より)</p>

<p>で，iPython Notebookに関する記事を見ていると，だいたい以下のようなコマンドで実行している．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>ipython notebook --pylab inline
</span></code></pre></td></tr></table></div></figure>


<p>ipython notebookで起動，それにくわえて&#8211;pylab inlineとすることでiPython Notebook内で描写したグラフが展開できて嬉しいわけだけど，一つ問題がある．それはpylabをインポートしている点だ．</p>

<h3>無意識にpylabを使うとなにが危ないか</h3>

<p>pylab自体は色々と便利なパッケージなんだけれども，そのpylabの挙動に少し問題がある．上で示したようなコマンドでpylabフラグを付けて実行すると，実は裏ではnumpyのモジュールがnpのエイリアスとともに，トップレベルでもインポートされている．実際にコマンドを叩いて確かめてみると以下のようになる．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>ipython --pylab
</span><span class='line'>
</span><span class='line'>In <span class="o">[</span>1<span class="o">]</span>: np.arange<span class="o">(</span>0,10<span class="o">)</span>
</span><span class='line'>Out<span class="o">[</span>1<span class="o">]</span>: array<span class="o">([</span>0, 1, 2, 3, 4, 5, 6, 7, 8, 9<span class="o">])</span>
</span><span class='line'>
</span><span class='line'>In <span class="o">[</span>2<span class="o">]</span>: arange<span class="o">(</span>0,10<span class="o">)</span>
</span><span class='line'>Out<span class="o">[</span>2<span class="o">]</span>: array<span class="o">([</span>0, 1, 2, 3, 4, 5, 6, 7, 8, 9<span class="o">])</span>
</span></code></pre></td></tr></table></div></figure>


<p>どっちも実行できていて何の変哲もないように見えるんだけど，よくNumpyの実行環境で見るimport numpy as npの場合だと，1行目の書き方では実行できるが，2行目の書き方では実行できない．それが，pylabをインポートしているとどちらもできてしまう，正確に言えば，Numpyの関数がモジュール名もしくはエイリアスを先頭に付けなくても実行できてしまう．</p>

<p>ではこれの何が問題かというと，関数の名前がかぶるというわけだ．たとえば組み込み関数の<a href="http://docs.python.jp/2/library/functions.html#sum">sum()</a>や<a href="http://docs.python.jp/2/library/functions.html#all">all()</a>は，実はNumpyにも同様の名前の関数がある（<a href="http://docs.scipy.org/doc/numpy/reference/generated/numpy.sum.html">sum()</a>,<a href="http://docs.scipy.org/doc/numpy/reference/generated/numpy.all.html">all()</a>）．なのでpylabをインポートすると，勝手にsumやallがNumpyのモジュールのものに置き換わってしまう．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># pylabをインポートしない場合</span>
</span><span class='line'><span class="nv">$ </span>ipython
</span><span class='line'>
</span><span class='line'>In <span class="o">[</span>1<span class="o">]</span>: sum,all
</span><span class='line'>Out<span class="o">[</span>1<span class="o">]</span>: <span class="o">(</span>&lt;<span class="k">function </span>sum&gt;, &lt;<span class="k">function </span>all&gt;<span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># pylabをインポートした場合</span>
</span><span class='line'><span class="nv">$ </span>ipython --pylab
</span><span class='line'>
</span><span class='line'>In <span class="o">[</span>1<span class="o">]</span>: sum,all
</span><span class='line'>Out<span class="o">[</span>1<span class="o">]</span>: <span class="o">(</span>&lt;<span class="k">function </span>numpy.core.fromnumeric.sum&gt;, &lt;<span class="k">function </span>numpy.core.fromnumeric.all&gt;<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>意識的にpylabを使おうと思って書くコードなら良いんだけど，もしpylab関係なくいつもiPython Notebook使ってるからという感覚でpythonのコードを書いたとして，あとで普通のpythonで実行したら動かない，なんてことが起こりかねない．まあ気をつければ済む話かもしれないが，こういう地雷は踏まないに限る．</p>

<h3>公式にも&#8211;pylabは使えなくなる見込み</h3>

<p>あと，&#8211;pylabを使ってiPython Notebookを起動すると以下のような警告文が出る．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>ipython notebook --pylab inline
</span><span class='line'>
</span><span class='line'><span class="o">[</span>...<span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span>NotebookApp<span class="o">]</span> WARNING | Starting all kernels in pylab mode is not recommended,
</span><span class='line'>    and will be disabled in a future release.
</span><span class='line'>    Please use the %matplotlib magic to <span class="nb">enable </span>matplotlib instead.
</span><span class='line'>    pylab implies many imports, which can have confusing side effects
</span><span class='line'>    and harm the reproducibility of your notebooks.
</span></code></pre></td></tr></table></div></figure>


<p>ということで，iPython Notebookを使うときには&#8211;pylabで読み込みをしないほうが良い．</p>

<h3>pylabを使わないでinline表示させるには</h3>

<p>&#8211;pylab inlineを回避する方法は2つある．</p>

<ul>
<li><code>ipython notebook --matplotlib inline</code>で起動する</li>
<li><code>%matplotlib inline</code>をiPython Notebookの冒頭で実行しておく</li>
</ul>


<p>こうすることによって，pylabのインポートを回避しつつiPythonのノート内でグラフを描写することができる．1つ目のiPythonのフラグで指定するほうが簡単だとは思うのだが，ぐぐってもこのコマンドで実行している例があまり出てこないのだけれども，たぶん問題無いと思う．</p>

<h3>注意</h3>

<p>ここまで読んだならわかるとは思うけれども，pylabの行儀悪いNumpyインポートを避けようということをしたわけだから，当然Numpyは別でインポートしないといけないし，そのへんのウェブページに載っているiPython Notebookの実行例とかのNumpyの関数の入ったコードはそのままでは実行できない．今回の方法を使っているなら，そのあたりは適宜読み替える必要がある．あんまり見たこと無い関数があったら，それがPythonの組み込み関数なのかNumpyやpylabの関数なのか疑ってかかろう．もしNumpyの関数なら，import numpy as npがされていることを確認したうえでnp.を関数の先頭につければ実行できる．なんかコードのサンプルをコピペしたけど動かないというときは，まあ大抵この問題だ．</p>

<h3>元ネタ</h3>

<ul>
<li><a href="http://carreau.github.io/posts/10-No-PyLab-Thanks.ipynb.html">No Pylab Thanks | Random Thoughts</a></li>
</ul>


<h3>参考</h3>

<ul>
<li><a href="http://docs.python.jp/2/tutorial/modules.html">6. モジュール — Python 2.7ja1 documentation</a></li>
<li><a href="http://hennohito.cocolog-nifty.com/blog/2014/07/pythonpylab-21a.html">今から始めるPython　その４　pylabネームスペースの解説: YATTSUKE BLOG</a></li>
<li><a href="http://nbviewer.ipython.org/github/ipython/ipython/blob/1.x/examples/notebooks/Part%203%20-%20Plotting%20with%20Matplotlib.ipynb">http://nbviewer.ipython.org/github/ipython/ipython/blob/1.x/examples/notebooks/Part%203%20-%20Plotting%20with%20Matplotlib.ipynb</a>

<ul>
<li>%matplotlib inlineを使っている例</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Homebrew/scienceでバイオインフォマティクスのソフトウェアを入れる]]></title>
    <link href="http://yagays.github.io/blog/2014/07/23/homebrew-science-bioinformatics/"/>
    <updated>2014-07-23T00:38:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/07/23/homebrew-science-bioinformatics</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/Homebrew/homebrew-science">Homebrew/homebrew-science</a></p>

<p>Homebrewにはtapというコマンドがあって，例えばHomebrew/dupesのようにMacOSXに標準で入っているソフトウェア/パッケージを個別に入れられたりと，公式以外のフォーミュラからbrewコマンドで入れられるシステムがある．</p>

<h3>Homebrew/science</h3>

<p>その中でHomebrew/scienceという科学系のリポジトリがあり，バイオインフォマティクスに関するソフトウェアも多数登録されている．例えば，</p>

<ul>
<li>blast</li>
<li>blat</li>
<li>hmmer</li>
<li>clustal-w</li>
</ul>


<p>のような基本的なソフトウェアから，</p>

<ul>
<li>bowtie2</li>
<li>cufflinks</li>
<li>bwa</li>
<li>fastqc</li>
<li>igv</li>
<li>samtools</li>
<li>bedtools</li>
<li>&#8230;</li>
</ul>


<p>のようなNGSまわりの解析ツールもひと通りHomebrewから入れることができる．ここに挙げている以外にも多数のバイオインフォマティクス関連のソフトウェアが登録されているので，詳しくは<a href="https://github.com/Homebrew/homebrew-science">homebrew-scienceのGitHubページ</a>を参考．</p>

<p>ひとつ注意点としては，Homebrew/sicenceで入れたソフトウェアが常に最新のものかどうかは保証されない．Homebrew/scienceの中にあるフォーミュラで記述されているものがインストールされるので，フォーミュラの管理状態によっては最新ではないバージョンを指している可能性がある．もし最新バージョンを入れたい/バージョンに気をつけるといった場合には，公式ページで配布されているソフトウェアのバージョンを確認したほうが良いだろう．</p>

<h3>使い方</h3>

<p>Homebrewをセットアップした上で，以下のコマンドでtapを追加することができる．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>brew tap homebrew/science
</span></code></pre></td></tr></table></div></figure>


<p>あとは好きなソフトウェアをbrew installすれば良い．</p>

<h3>恒例のアレ</h3>

<p>このxkcdのマンガには，Homebrew/scienceのページに載っているコマ以外にちゃんとした前振りがある．詳しくは<a href="http://xkcd.com/585/">http://xkcd.com/585/</a>にて．</p>

<p><img src="https://camo.githubusercontent.com/3409f4a35fcb0bf160c8c9bb153bb133d8f83b4f/687474703a2f2f692e696d6775722e636f6d2f42737770312e706e67" alt="" /></p>

<h4>参考</h4>

<ul>
<li><a href="https://github.com/Homebrew/homebrew/wiki/brew-tap">brew tap · Homebrew/homebrew Wiki</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GollumでCtrl-bのキーボードショートカットを無効にする]]></title>
    <link href="http://yagays.github.io/blog/2014/07/18/gollum-disable-ctrl-b-hotkey/"/>
    <updated>2014-07-18T04:12:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/07/18/gollum-disable-ctrl-b-hotkey</id>
    <content type="html"><![CDATA[<p>Gollumで記事を編集していると，Ctrl-bで「****」というmarkdownのbold記法が挿入されるキーボードショートカットがあって邪魔だったので，無効にした．</p>

<h3>方法</h3>

<p>Gollumのgollum.editor.jsの中の該当部分をコメントアウトする．</p>

<p><a href="https://github.com/gollum/gollum/blob/master/lib/gollum/public/gollum/javascript/editor/gollum.editor.js#L215">https://github.com/gollum/gollum/blob/master/lib/gollum/public/gollum/javascript/editor/gollum.editor.js#L215</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'>      <span class="nx">Mousetrap</span><span class="p">.</span><span class="nx">bind</span><span class="p">([</span><span class="s1">&#39;command+3&#39;</span><span class="p">,</span> <span class="s1">&#39;ctrl+3&#39;</span><span class="p">],</span> <span class="kd">function</span><span class="p">(</span> <span class="nx">e</span> <span class="p">){</span> <span class="nx">hotkey</span><span class="p">(</span> <span class="nx">e</span><span class="p">,</span> <span class="s1">&#39;function-h3&#39;</span> <span class="p">);</span> <span class="p">});</span>
</span><span class='line'><span class="c1">//           Mousetrap.bind([&#39;command+b&#39;, &#39;ctrl+b&#39;], function( e ){ hotkey( e, &#39;function-bold&#39; ); });</span>
</span><span class='line'>      <span class="nx">Mousetrap</span><span class="p">.</span><span class="nx">bind</span><span class="p">([</span><span class="s1">&#39;command+i&#39;</span><span class="p">,</span> <span class="s1">&#39;ctrl+i&#39;</span><span class="p">],</span> <span class="kd">function</span><span class="p">(</span> <span class="nx">e</span> <span class="p">){</span> <span class="nx">hotkey</span><span class="p">(</span> <span class="nx">e</span><span class="p">,</span> <span class="s1">&#39;function-italic&#39;</span> <span class="p">);</span> <span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>gollum.editor.jsは，rbenvで入れた自分の環境の場合$HOME/.rbenv/versions/1.9.3-p547/lib/ruby/gems/1.9.1/gems/gollum-3.0.0/lib/gollum/public/gollum/javascript/editorに入っている．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[論文紹介:Recommending Investors for Crowdfunding Projects]]></title>
    <link href="http://yagays.github.io/blog/2014/07/09/www2014review-kickstarter/"/>
    <updated>2014-07-09T16:08:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/07/09/www2014review-kickstarter</id>
    <content type="html"><![CDATA[<p>某所で発表を予定していたんだけど，台風のせいで飛びそうなので先に公開しておきます．読んだのはWWW2014のMatchingセクションに採択されたKickstarterに関する論文．</p>

<script async class="speakerdeck-embed" data-id="1b6dec40e95b01313be5762c67c15dde" data-ratio="1.77777777777778" src="http://yagays.github.io//speakerdeck.com/assets/embed.js"></script>


<h4>補足</h4>

<ul>
<li>まずFrequent InvestorsとOccasional Investorsの和訳について

<ul>
<li>スライド中では「常連投資家」と「気まぐれ投資家」と訳したが，あまり適切な訳語が思い浮かばなかった</li>
<li>無理に訳す必要もないんだけど，FIとOIとかにしてもぱっと見意味不明だし，スライドの都合上日本語にした</li>
</ul>
</li>
<li>KickstarterにはAPIがないから自力でクロールしたらしい

<ul>
<li>Twitterのアカウントとの紐付けなども考えると，かなり大変そう</li>
</ul>
</li>
<li>既存研究あんまり書かなかったんだけど，投資分野の予測なのでいろいろある

<ul>
<li>Kickstarterにおいて特定のフレーズプロジェクトの成功予測に役立つとか(<a href="http://dl.acm.org/citation.cfm?id=2531602.2531656">http://dl.acm.org/citation.cfm?id=2531602.2531656</a>)</li>
<li>Kickstarter以外にもCrowdfundingはいろいろあるので，その辺のレポートも引用されてる</li>
</ul>
</li>
<li>LDAのトピック数は書かれていないんだけど，これはKickstarterのカテゴリー数=13でいいんだろうか

<ul>
<li>なお，今ではCraftとJournalismというカテゴリが加わって15になっている</li>
</ul>
</li>
<li>マッチングの手法について

<ul>
<li>このあたり専門じゃないからあんまり分からないけど，手法的には普通な印象</li>
<li>RBFカーネルのSVMが最良だったのも納得

<ul>
<li>参考：<a href="http://d.hatena.ne.jp/sleepy_yoshi/20120624/p1">SVM実践ガイド (A Practical Guide to Support Vector Classification) - 睡眠不足？！</a></li>
</ul>
</li>
</ul>
</li>
</ul>


<h4>感想</h4>

<ul>
<li>マッチングについて

<ul>
<li>サービス提供側(ここではKickstarter)からすると，例えばこのようなマッチングを作ると考えた時にTwitterのような外部サービスを利用するとなると，ちょっと大変そう

<ul>
<li>外部サイト連携とかを付けないと，そもそも取ってこれないし正式に使えない(?)</li>
<li>一番使いやすいのはKickstarterで表示したプロジェクトのウェブページの履歴とかかな</li>
<li>いずれにせよ投資者の趣向をどう観測するかという感じ</li>
</ul>
</li>
<li>そもそもKickstarterの投資に参加している人のなかでマッチングが上手くいったとして，投資数が増えるのだろうか？

<ul>
<li>プロジェクトの成功率/投資額をあげようと思った時に，推薦に限界がある場合には，いかに他所から興味ある人を引っ張ってくるかになる</li>
<li>ソーシャルのちからに頼れなくなると，結局広告打ったりメディアに紹介してもらったりという従来の方法に頼らざるをえないかも</li>
</ul>
</li>
</ul>
</li>
<li>ウェブサービスに関わる人間にとって大事なこと

<ul>
<li>アカウント新規登録時の登録項目大事

<ul>
<li>ユーザが情報を入力してくれるタイミングなんてそうそう無い</li>
<li>たとえば本論文だとファウンダーのlocationがないとGeographic Dispersionが取れないわけだし</li>
<li>どのような情報が自サービスのレコメンドなどに効いてくるかをしっかり考えておいて布石を打つ必要がある</li>
</ul>
</li>
<li>外部サービス連携大事

<ul>
<li>TwitterとかFacebookとかの情報を一部取れるだけでも嬉しい

<ul>
<li>書き込みなどが取れれば万々歳，友達数とかだけでもFrequent/Occasionalは判別できそう</li>
</ul>
</li>
<li>外部サービスにポストするという機能以外にもユーザの特徴をつかむ意味で大事かと</li>
</ul>
</li>
</ul>
</li>
</ul>


<h4>参考</h4>

<ul>
<li><a href="http://dl.acm.org/citation.cfm?id=2568005">Recommending investors for crowdfunding projects</a></li>
<li><a href="http://www2014.kr/program/research-track-9-7/">Research Track |www2014</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「ドイツ流、日本流: 30年暮らして見えてきたもの」読了]]></title>
    <link href="http://yagays.github.io/blog/2014/06/28/review-germany-japan-essay/"/>
    <updated>2014-06-28T15:39:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/06/28/review-germany-japan-essay</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4794220456" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>本書は「<a href="http://www.amazon.co.jp/gp/product/479421796X/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=479421796X&linkCode=as2&tag=yagays-22">サービスできないドイツ人、主張できない日本人</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=yagays-22&l=as2&o=9&a=479421796X" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />」を文庫化したものだ．ドイツ人の夫を持ち，ドイツで30年近く住んでいる日本生まれの著者のエッセイだが，旧題にあるようなサービスと主張というトピックはほんの一部で，他にも幅広い文化比較がなされている．異なる国の文化に挟まれて初めて互いの文化の良いところや悪いところが見えてくるように，読者からすると，知らないドイツを知るとともに自分たちの文化を振り返ることになる．</p>

<p>個人的には，ドイツの教育システムが一番気になった．以前読んだ<a href="http://yagays.github.io/blog/2012/09/05/review-critical-reading/">「外国語で発想するための日本語レッスン」</a>ではヨーロッパの教育の良い部分についてフォーカスしていただけに，本書で語られる負の部分，ドイツの義務教育のねじれのようなものが一層際立ってみえた．ランク分けされたギムナジウムや挽回のチャンスが限られた進学システム，マイスターに求められる質の変化など，一見して不合理だとわかっていながらも文化的な背景で縛られて身動きが取れなくなっているように感じる．こういった制度を是正する動きを既得権益を持ったエリートが妨害するといった，古くからある階級社会が見え隠れするところも興味深い．そして，そこから日本の教育に目を向けた時にどう感じるかも考えなくてはいけない．当然ながら日本の教育はドイツとは違うし，それらが成立する背景も違う．例えば，ドイツの教師は徹底的にビジネスライクなのに対して，日本の教師はまったく真逆で，人によっては人生の師ともなるほどに親密な関係を築く．そういう前提があるときに，日本の教育のいいところはどこか，一方でドイツの教育のいいところはどこか，教育を良くしていくにはどこを真似れば良いのかなど，考えなくてはいけないことは山ほどある．結局どっちが良いという問題ではないだけに，なかなか難しいところではある．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gollum入門した]]></title>
    <link href="http://yagays.github.io/blog/2014/06/27/gollum-wiki/"/>
    <updated>2014-06-27T11:31:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/06/27/gollum-wiki</id>
    <content type="html"><![CDATA[<p>最近メモがあちこちに散乱していて，<a href="http://kobito.qiita.com/ja">Kobito</a>に殴り書きしたり，<a href="http://brettterpstra.com/projects/nvalt/">nvALT</a>に適当に書いたり，<a href="http://evernote.com/intl/jp/">Evernote</a>にノート作ったりと，色々と良くない感じだったので，ある程度しっかりと書くメモはGollumで書くようにした．</p>

<p>GollumはGitHub-likeなwikiエンジンだ．とにかくmarkdownで書けてgit連携，DBを立てる必要も無く，ソースコードがシンタックスハイライト付きで貼れるというのが嬉しい．</p>

<h3>Gollumセットアップ</h3>

<p><a href="https://github.com/gollum/gollum">gollum/gollum</a></p>

<h4>Gollumのインストール</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ gem install gollum</span></code></pre></td></tr></table></div></figure>


<h4>Gollumセットアップ</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ mkdir wiki; cd wiki
</span><span class='line'>$ git init
</span><span class='line'>$ gollum</span></code></pre></td></tr></table></div></figure>


<p>これでhttp://localhost:4567/にアクセスするとwikiが立ち上がっている．もしgit initしていないとエラーになるので注意．</p>

<h3>スクリーンショット</h3>

<p>というわけで，適当にmarkdownで書いて保存すると以下のように立ち上がる．</p>

<p><img src="http://dl.dropboxusercontent.com/u/142306/b/gollum.png" alt="" /></p>

<h3>所感</h3>

<p>まだ使い始めて1週間も経っていないけれども，かなり使い勝手は良いと思う．簡素な作りながらも，ディレクトリ構成やgitの方を意識しないで済むのは楽だ．一方で物足りない部分は確かにあって，ファイルやディレクトリ名を入力するときの補完とかをしてくれればいいのにとは思うけれども，まあその辺はそれほど苦にならないし運用でカバーできる．そういう部分も含めて，他のWikiエンジンやWordpress，Sphinxを使うよりかは，はるかに自分に合っていると思う．</p>

<h4>参考</h4>

<ul>
<li><a href="https://github.com/gollum/gollum/wiki">Home · gollum/gollum Wiki</a></li>
<li><a href="http://yukke.hateblo.jp/entry/2013/05/02/224859">githubのwikiエンジン&#8221;gollum&#8221;の導入と細かい設定 - yukke::note</a></li>
<li><a href="http://blog.hifumi.info/2014/02/02/my-wiki-powered-by-gollum/">gollumを使って個人用wikiをサーバに立てた | blog: takahiro okumura</a></li>
<li><a href="http://pioneerboy.hatenablog.com/entry/2014/06/19/161859">ゼロからはじめるGollum Wiki - 雨に煙る</a></li>
<li><a href="http://blog.necomimi.net/?p=1941">Github gollumでファイルアップロードする | CATch a TAIL!</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「住まいの解剖図鑑」読了]]></title>
    <link href="http://yagays.github.io/blog/2014/06/19/review-the-anatomical-chart-of-homes/"/>
    <updated>2014-06-19T13:09:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/06/19/review-the-anatomical-chart-of-homes</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4767809185" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>建築について前から勉強したいと思って初心者向けの本を探していたのだけれども，本書はまさに入門書としてピッタリの本だった．最初は住宅設計に関する学生向けにかかれていたそうだが，家を建てたいという一般の人にでもわかるようにも工夫されたそうで，それほど専門的ではないながらも住宅設計のコアの考え方が詰まっている．</p>

<p>本書の内容について，著者は冒頭「はじめに」で</p>

<blockquote><p>本書の大半は，そうした定石が「なぜそうなっているのか」を，私なりに解読したページです</p>

<p>「<a href="http://www.amazon.co.jp/gp/product/4767809185/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4767809185&linkCode=as2&tag=yagays-22">住まいの解剖図鑑</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=yagays-22&l=as2&o=9&a=4767809185" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />」 P.7</p></blockquote>

<p>と書いている．ここで言う定石とは「ごくありふれたモノやカタチ」であって，私たちが住宅でよく見かける，または何気なしに使っているもののことだ．屋根のカタチ，玄関のカタチ，ドアのカタチなどなど，たくさんの住宅を並べてパターンを見ると意外と共通点が存在する．そしてそれらの定石といえるパターンには，実は共通した理由がある．成るべくして成っているとも言えるそれらの理由を紐解いていこうというのが本書の流れだ．ページをパラパラめくると個別の間取りやカタチが並んでいるだけに見えるが，実はそれぞれにしっかりとした理由が明記されており，それらに共通する考え方が見えてくる．上の引用と同じく著者はそれを「一つのゴールを示すのではなく，たくさんのスタート地点を並べたガイドブック」だと呼んでいる．さすが大学の教員もされている著者だけのことはある．</p>

<p>中身が素晴らしいのは言うまでもなく，個人的にはこのタイトルがとても良いと思う．解剖学というと，ヒトだったら個々のパーツの形や性質を観察して，そこから人間という構造や機能を理解していく学問のことだ．本書はまさにその住宅バージョンと言える．家のそれぞれの部分を取り出して，その形を観察してパターンを探したり機能を考えたりしてく．ただしそれで終わってしまっては，解剖学にならない．そういった部品を組み合わせて，最終的にはひとつの家として，そして周りの家との相互作用を含めて組み上げていく．そしてそこには人間を中心にして作られるという究極のテーマが存在する．まさに解剖図鑑と称するに相応しい一冊だ．</p>

<p>「解剖図鑑」シリーズは，現在のところ</p>

<ul>
<li><a href="http://www.amazon.co.jp/gp/product/4767809185/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4767809185&linkCode=as2&tag=yagays-22">住まいの解剖図鑑</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=yagays-22&l=as2&o=9&a=4767809185" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.co.jp/gp/product/4767816696/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4767816696&linkCode=as2&tag=yagays-22">片づけの解剖図鑑</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=yagays-22&l=as2&o=9&a=4767816696" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.co.jp/gp/product/4767812380/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4767812380&linkCode=as2&tag=yagays-22">住宅・インテリアの解剖図鑑</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=yagays-22&l=as2&o=9&a=4767812380" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.co.jp/gp/product/4767815703/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4767815703&linkCode=as2&tag=yagays-22">建築デザインの解剖図鑑</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=yagays-22&l=as2&o=9&a=4767815703" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>


<p>の4冊が出ているそうなので，他も読んでみたいと思う．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「減らす技術」読了]]></title>
    <link href="http://yagays.github.io/blog/2014/06/15/review-the-power-of-less/"/>
    <updated>2014-06-15T16:08:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/06/15/review-the-power-of-less</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4887597304" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p><a href="http://d.hatena.ne.jp/yomoyomo/20140603/leobabauta">世界的人気ブログZen Habitsなどレオ・バボータの文章の日本語訳 - YAMDAS現更新履歴</a></p>

<p>上の記事でレオ・バボータのことを知って本書を手にとった．別に気持ちが楽になりたいというわけでもないのだけれど，そこらのまとめサイトの雑な受け売りではなく，一通り元ネタを知っておきたいという気持ちが常にあるからだ．ざっと読んで内容と著者の名前を覚えておければそれで良かった．</p>

<p>本書の主張はほんとうにシンプルで「制約をつければ重要なことにフォーカスできる」というもの．やりたいことを減らす，仕事の量を減らす，メールを読む量を減らす．そうやって自分に制限を課すことによって，自然と重要そうなことだけしかやれないような状態になる．そうすれば，人生や仕事にクリティカルに効いてくるようなことに絞った行動ができるし，逆に不必要なことに時間を割くこともなくなる．そして生活はシンプルになって，結果としてハッピーだというわけだ．</p>

<br/>


<p>言っていることはまあそうだよねという感じ．それよりも，伝え方が巧い．言ってしまえばどんな人間だって，これをすれば理想の方向に持っていけるような方法に落としこんでいる．どんなに怠惰で意志が弱くてやりたい事なんて無いというような人であっても，この方法を実践できるし(したいかどうかは別)，実践すればある程度の成果を出せる．一方で，もともと生産性の高い人でも，仕事以外では成功していなかったり，何かを犠牲にしている場合があるわけで，そうしたケースにも対応できている．</p>

<p>さて，この方法の前提には，だれもが「多ければ多いほど良い」と考えているという，ある種の本能的な価値観がある．労働時間に応じて給料が上がるならば，労働時間を増やせば手に入るお金も多くなるといった感覚だ．この具体的なケースが正しいかどうかはまあ置いておいて，日常的なものごとというものは基本的に出した分だけ見返りも多いことが多い．そうすると，みんな欲求のもとになるものを増やそうとする．それ自体は間違ってはいないんだけど，そもそも効率を考えていないし，選択しないという悪い習慣に繋がるというのが一番の問題になる．それが本書の根底にあるみんなの悪い癖だ．その癖をなくそうと思っても，減らすと見返りも減ると思い込んでいるから，なかなか成功しない．だから本書のような方法で強制的に制限をかけることで，なんとかしようということだ．</p>

<p>中には「量をこなせば質になる」と考える人もいるだろうが，それはある意味あっていて，同時にまちがっている．質に変化させる段階で見極める力を身につけていないと，結局数撃ちゃ当たる戦法からは抜け出せない．ちなみに，この量から質に持って行こうとする方法を「<a href="http://www.amazon.co.jp/gp/product/4862760856/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4862760856&linkCode=as2&tag=yagays-22">イシューからはじめよ―知的生産の「シンプルな本質」</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=yagays-22&l=as2&o=9&a=4862760856" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />」という本の中では「犬の道」と言い表している．言い得て妙というか，まあ人間なんだから頭使えよということだろう．</p>

<p>こういうことに自覚的な人でもそうでない人も，とりあえず本書のようなことをすれば大体は自然と良い方向に行くと思う．中にはシンプルを崇拝しすぎて必要なものまで削ってしまうような人も出てくるかもしれないけれど，まあほどほどということをわきまえた上でやってみると，上手くいくかもしれない．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「All You Need Is Kill」読了]]></title>
    <link href="http://yagays.github.io/blog/2014/06/14/review-all-you-need-is-kill/"/>
    <updated>2014-06-14T10:33:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/06/14/review-all-you-need-is-kill</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4086302195" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>映画が始まる前に読んでおこうと思って読んだ作品．本作品を原作としてハリウッドで映画化され，向こうでは<a href="http://www.imdb.com/title/tt1631867/">”Edge of Tomorrow”</a>という題になっているそうだ．<a href="http://www.rottentomatoes.com/m/edge_of_tomorrow/">Rotten Tomatoes評</a>をみるかぎり，なかなか評判は良さそうなので期待が高まる．</p>

<p>これを読んで一番に思い浮かべたのがダンカン・ジョーンズの「ミッション: 8ミニッツ」だった．といっても，本書が出たのが2004年，映画は2011年．個人的にアイデアのオリジナリティとかは気にしないのでそれはどうでもいいとして，両者ともに主人公の心情の変化というものが同じ軌跡をなぞるようで面白い．ループの最初はとまどい現状の認識に手一杯なのだけれども，次第に理解をしてその中で自由に動けるまでになる．そして最終的にはその時間に愛着を抱くようになり，目標の達成とともにその愛する時間は終わってしまう．逆に結末はまったく違う．一方は理想的な解を見つけて愛する人と結ばれ，もう一方は愛する人を失いながらも残酷な世界を生き抜く．時間が終わること自体がオチなのだけれど，その先に提示される世界に作り手が考える人間の生きることの捉え方が表れているようで，その点も興味深い．</p>

<p>「勝ちに不思議の勝ちあり、負けに不思議の負けなし」という言葉があるが，この場合は不思議さを完全に払拭するような明確な理由がある．だがそれは周りからは認識できないし，能力や成績などの結果からしか推測することができない．たとえそれを外部が認識したとして，無限回の試行を勝ちの理由にできるんだろうか．全探索に近いような繰り返しでパターンを覚えたから？　それとも無限回の試行で訓練されたから？　それはある意味で機械学習の文脈での過学習のような気もするし，目的関数の最適解への収束にも取れる．まあループが繰り返したりネストせずにその場限りなら，どちらにせよループの末の結論が本人の納得という意味で正しいのだろうけれども，そうして生き延びた彼ら/彼女らの将来を思慮せずにはいられない．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「申し訳ない、御社をつぶしたのは私です。」読了]]></title>
    <link href="http://yagays.github.io/blog/2014/06/08/review-im-sorry-i-broke-your-company/"/>
    <updated>2014-06-08T21:30:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/06/08/review-im-sorry-i-broke-your-company</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4479794336" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>なんともショッキングなタイトルだけれど，それに名前負けしないほどの内容の濃い興味深い本だった．本書はコンサルティング業界に長年勤めた著者による，業界内部で行われている一見立派で頭が良くて有効そうな仕事がいかにハッタリであるかということを暴露する本である．もう少し正確に言えば，そうしたコンサルティングのやり方は結局は<a href="http://ja.wikipedia.org/wiki/%E9%8A%80%E3%81%AE%E5%BC%BE%E3%81%AA%E3%81%A9%E3%81%AA%E3%81%84">銀の弾丸</a>ではなくて，成功する場合もあるし失敗する場合もあるし，実際には顧客を振り回すだけの代物にすぎない．一番大事なことは，そういうことを踏まえた上で，コンサルティングとは究極的には人との対話による理解なのだということが本書の主張である．コンサルが悪ということを中の人が認めたということで溜飲を下げる本では決して無いことに注意．</p>

<p>コンサルティング業は常にエリートが集う華々しい業界であることには間違いない．人の会社に行っては口出しをするのが彼ら/彼女らの仕事だ．会社の方針を決めたり事業レベルで効率化や業務システムの最適化を行い，目もくらむような高給で考えられないほど大量の仕事をこなす．論理的な分析で複雑なフレームワークを駆使する様は，まさに職人芸である．しかし，そんなコンサルタントであっても将来だけは予測することができない．だから予測が外れてしまった場合には，望んだ結果が得られないどころか，最悪企業が潰れてしまうことだってある．</p>

<p>といって，じゃあコンサルティングは虚業で意味のない金食い虫だというかと，必ずしもそうではない．自社だけではできない内部の効率化やレイオフは内部の利害を超えて第三者だからできることだし，戦略立案こそ本当に企業が必要としていることである．例えば，戦略計画を立てることに関して，以下のようなことを言っている．</p>

<blockquote><p>問題は，人びとが戦略計画イコール解決策だと信じてきたことにある．だが，計画自体にはほとんど価値はない．名高い将軍たちが示したとおり，計画を立てる過程にこそ価値があるのだ．</p>

<p>「<a href="http://www.amazon.co.jp/gp/product/4479794336/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4479794336&linkCode=as2&tag=yagays-22">申し訳ない、御社をつぶしたのは私です。</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=yagays-22&l=as2&o=9&a=4479794336" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />」P.59</p></blockquote>

<p>つまり，コンサル会社が立てた戦略計画の紙の束が重要なんじゃなくて，立案の過程で行った調査や研究自体が有用なのだと．そしてそれは将来的な計画変更のときにも大いに役に立つということだ．</p>

<p>経営戦略や最適化プロセス，リーダーシップなど他の分野でも上と同様に，コンサルティングを取り巻く問題点と解決法が一通り提示される．結論も重要ながら，その考え方自体も興味深い．それに，それぞれの分野が，どのように発展してきたのか，誰が始めに言い始めたのかといった歴史が紹介されるのも本書の特徴だ．どこぞの教授が論文に書いたのが始まりだとか，あのコンサル会社から広がったとか，そういった経緯も，業界の裏側を覗いているようで面白い．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「「レジリエンス」の鍛え方」読了]]></title>
    <link href="http://yagays.github.io/blog/2014/05/29/review-resilience/"/>
    <updated>2014-05-29T14:10:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/05/29/review-resilience</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=440845494X" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>レジリエンスとは「精神的な打たれ強さであり感情をコントロールできる強い自己規律」のことを言うそうだ．世界で活躍するエリートには，そのレジリエンスというものがあるからこそ活躍でき，逆に言えばレジリエンスがない人はキャリアの途中で挫折したり成果が出なかったりするらしい．そういった精神的な部分はビジネススクールではあまり教えてくれないから重要だという．著者はP&amp;G出身者で現在はレジリエンスを専門にした社会人向けの心的ケアの会社を立ち上げている．</p>

<p>内容に入る前にまずレジリエンスという聞きなれない言葉なのだけれども，本書を読む限りだと，特段新しい考え方や方法論を言い表しているわけではなさそうだ．レリジエンスという体系が出来上がっているようには見えず，単に小手先のテクニック集にしかなっていないと感じる．いちおう本書の流れとしては失敗とそこからの再生に沿って話が進むけれども……．具体的な内容としては，精神的な強さが必要でそれを実現するにはこういうことをすべきだということが手を替え品を替えて説明される．それぞれに取って付けたような心理学の研究結果みたいなものが理論付けとして述べられるが，因果と相関の違いがわかってないんじゃないかと思う部分も多い．もちろん個別の内容がすべて悪いというわけではなく，例えば失敗に対して予期できる失敗とアクシデンタルな失敗を区別して考えるべきとか，感情をコントロールするには自分で自分を分析して一歩引いた目線で考えろとか，そういったテクニックとしてはいいんだけど，それで終わりという感じ．</p>

<p>多くの人は当然ながらストレスを抱え込みたくないし，失敗だってしたくないし，ポジティブに日々を過ごして仕事で成果を出したいと思うはずだ．そういう時にこそ自分を変えようと思って他人の人生であったり優秀な人の習慣を参考にするのだろうけれども，今回の場合は本で読んでも感動は薄いし，まあこういった内容は自己啓発セミナー向けかなぁ．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「数学は世界をこう見る 数と空間への現代的なアプローチ」読了]]></title>
    <link href="http://yagays.github.io/blog/2014/05/28/review-hiroyukikojima-php/"/>
    <updated>2014-05-28T10:14:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/05/28/review-hiroyukikojima-php</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4569818706" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>まずは著者が書いたブログを紹介しておこう．ここを読めば本書のことはだいたいわかる．</p>

<ul>
<li><a href="http://d.hatena.ne.jp/hiroyukikojima/20140510/1399708808">数学は異世界を創り出す - hiroyukikojimaの日記</a></li>
<li><a href="http://d.hatena.ne.jp/hiroyukikojima/20140516/1400210650">世界を見つめる「思想」としての数学 - hiroyukikojimaの日記</a></li>
<li><a href="http://d.hatena.ne.jp/hiroyukikojima/20140523/1400837261">数学は、人生を総動員して理解するとよいのだ、とわかった - hiroyukikojimaの日記</a></li>
</ul>


<p>さて，本書の最大の特徴は，現代数学の概念を中学・高校で習うような基本的な知識で理解しようとするところにある．ただし，ここではその思想を理解するための骨組みだけが示される．その構成要素こそ，本書のトピックとして登場するイデアル，有限体，ホモロジー群，位相空間，スキームといった概念である．過去の数学者がどういう発想をして，どうしてそこにたどり着いたのかということをここではトレースする．その試みは意外と基本的な代数の知識だけで何とかなってしまうということを，本書は示してくれる．</p>

<p>読んでみて分かるのだが，この本は最後のほうまで流れるように読めてしまう．それはあたかも原理から定理をどんどん作り上げていくような感覚だ．しかも内容も抜群に面白くて考えても見なかった発想がどんどんでてくるものだから，細かい証明などはある程度読み飛ばして先のトピックへと急いでしまう．余分な要素がなくて必要最小限の知識だけで組み立てているからだと思うのだけれども，これには自分でも驚いた．一方で，理解半分で進むものだから，ときどき定理などが分からなくなって前に戻ることもしばしばあった．もしもきちんと話を追っていきたいという人は，定理や具体例を実際にノートに書き写していくといいかもしれない．</p>

<p>最後に，折角なので著者の言葉を幾つか引用しておこう．数学が苦手な自分としても，こういう真髄を理解できるようになりたいものだ．</p>

<blockquote><p>数学というのは、人類が二千年以上にもわたって構築してきた、この世界を認識するための技術だ。したがって、ホンモノの数学は、イメージ豊かで深遠で夢のある分野なのである。このことは、数学者が世界を見つめるその見方を知ると納得できると思う。数学者が生み出す数学は、新しい見方・奇抜な見方に満ちている。</p>

<p><a href="http://d.hatena.ne.jp/hiroyukikojima/20140516/1400210650">http://d.hatena.ne.jp/hiroyukikojima/20140516/1400210650</a></p>

<p>数学を(いや、どんな学問でもそれを)理解する、という行為は、人生を総動員して行うべきものであり、そうしさえすれば、(それへの愛と欲求がある限り)理解は不可能なことでもそんなに難しいことでもない</p>

<p><a href="http://d.hatena.ne.jp/hiroyukikojima/20140523/1400837261">http://d.hatena.ne.jp/hiroyukikojima/20140523/1400837261</a></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[京都・貴船に行ってきた]]></title>
    <link href="http://yagays.github.io/blog/2014/05/26/kyoto-kibune/"/>
    <updated>2014-05-26T07:41:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/05/26/kyoto-kibune</id>
    <content type="html"><![CDATA[<p>京都に住んでいる知り合いと久しぶりに遊ぶことになって，貴船に行ってきた．どこに行くかとかを含めて昼夜の店まで手配してくれて，本当にありがたかった．</p>

<p>出町柳から叡山電鉄で30分ほど揺られて，そこから10分ほどバスに乗ると貴船に着く．山間の狭い川沿いに店が幾つも並んでいて，いたるところに川床(かわどこ)がある．川床とは川の上を覆うかたちで大きな台を敷いてその上で飲み食いする場所のことで，自然の景観を利用した何とも風流な設備である．しかも台は川の平たいところにしかおけないので，川床の間には滝が挟まっていたりしていて最高に眺めが良い．その日は京都市内ならすぐに汗ばむくらいの気温でも，川床にいるとちょっとひんやりする程度で，本当に気持ちがよかった．今回は<a href="http://hirobun.co.jp/">「ひろ文」</a>で流しそうめんを食べたのだけれど，目の前の滝に癒やされつつも手前に勢い良く流れてくるそうめんを掴んで食べるのは，まさにエンターテイメント性があった．川床はそこにいるだけで快適で楽しいので，今度は普通にだらだら料理を食べるのもいいかもしれない．何やら温泉もできるようなので，湯につかったあとの涼みは最高に気持ちが良いだろうなと考えつつ下山．また紅葉のときにでも訪れたい場所だ．</p>

<p>その後は京都市内でスイーツを食べたり魚を食べたりした．写真は撮ってないけど，生湯葉チーズ巻なるものが非常に美味しかった．</p>

<iframe src="https://www.flickr.com/photos/124108383@N03/14264345825/in/set-72157644421797979/player/" width="800" height="600" frameborder="0" allowfullscreen webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>




<iframe src="https://www.flickr.com/photos/124108383@N03/14077788737/in/set-72157644421797979/player/" width="800" height="600" frameborder="0" allowfullscreen webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>




<iframe src="https://www.flickr.com/photos/124108383@N03/14263921954/in/set-72157644421797979/player/" width="800" height="600" frameborder="0" allowfullscreen webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>




<iframe src="https://www.flickr.com/photos/124108383@N03/14077720160/in/set-72157644421797979/player/" width="800" height="600" frameborder="0" allowfullscreen webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>




<iframe src="https://www.flickr.com/photos/124108383@N03/14264320815/in/set-72157644421797979/player/" width="800" height="600" frameborder="0" allowfullscreen webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「盤上の夜」読了]]></title>
    <link href="http://yagays.github.io/blog/2014/05/25/review-dark-beyond-the-weiqi/"/>
    <updated>2014-05-25T15:15:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/05/25/review-dark-beyond-the-weiqi</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4488747019" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>宮内悠介のデビュー作．比較的短い作品が6つ収録されており，それぞれに囲碁や将棋，チェッカー，麻雀，古代チェスといったテーブルゲームが題材となっている．</p>

<p>最初は人に勧められて読んだのだが，タイトルにもなっている作品「盤上の夜」を読んだ途端に，著者の非凡なる才能に感化されてしまった．文庫50ページにも満たない短編ながら，そこに存在する圧倒的なリアリティと少しの非現実なディテールに，SF作家としてのたぐいまれなる才気を感じた．</p>

<p>内容としては，確かに最近の流れを汲んで構成されていることに違いない．将棋の電王戦の盛り上がりを背景に，人間とコンピュータの関係性について，その未来のことを真剣に考える人は多い．そういう時に，人間の本質的な部分について，その仕組みや機構を超えて，可能性を見出そうとすることはある意味自然なことだと考えられる．古典的な条件付けや記憶からのパターン認識とともに，勘や共感覚や神秘的な現象，不可思議や超常現象にも近いものが取り上げられるのは，読者の興味に沿っているといえる．</p>

<p>そういう環境において，これほどまでに知的な好奇心を刺激される作品が出てくるのはSF作品の醍醐味だと言える．本書の短編が提示するテーマは，想定しうる科学の延長線を大きく逸脱しない未来において，現在私たちが持っている疑問や不安にある種の答えを出してくれるような，そんな感覚を持つ．それでいてストーリーに没入できる面白さも兼ね備えた，優れた作品であることに間違いない．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「Webを支える技術」「WEB+DB PRESS Vol.80」読了]]></title>
    <link href="http://yagays.github.io/blog/2014/05/14/review-webdb-web-architecture/"/>
    <updated>2014-05-14T00:18:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/05/14/review-webdb-web-architecture</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4774163988" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4774142042" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>なんでもそうなんだけど，WEB+DB PRESSの表紙に書いてある「新人さん大歓迎」みたいに，基礎をもう一度おさらい！とかまだ間に合う！とかいう売り文句にめっぽう弱い．自分自身基礎をほっぽり出してトップダウン式にアレコレやってきたからというのもあるし，何か抜けているところは無いかと心配性になったりというのもあるし，何にせよ再入門みたいなことを繰り返してしまう．実際に中身を見れば「ああこの程度か」とか「所々わからないなー」のように当たりはつくのだけれども，際限なく空いている穴を埋めきるのに必死になってしまう．</p>

<p>ということでWeb+DB PRESSの「Web技術入門」を読んでもうちょっと詳しく見ときたいなと思って，本棚から「Webを支える技術」を引っ張り出してきて一通り読み返した．だいたいのことは覚えていたけれども，それでも抜け落ちていた部分であったり，数年前に読んだ時にはピンと来なかった部分を見つけられたと思う．特にHTTPやRESTのシンプルな構造ゆえのpros and consみたいな点は最近ようやく分かるようになってきた．アプリケーション状態を持たないステートレスな接続の果たす役割や，それを実現する自己記述的なメッセージ，あとはHTTPメソッドそれぞれの冪等性や安全の有無も改めて考えると面白い．</p>

<p>それにしても今月のWeb+DB PRESSは本当に新人向けにまとまってて良かった．Mac開発環境の解説とかは本当に必要最低限の技術を広く浅くという感じなのだけれども，これからバリバリプログラミングしたいですって人とかに勧めるのに最適な1冊じゃないだろうか．他にもエンジニアの学び方とかCourseraのコラムも良さ気．あとはzsh入門があればバッチリだと思ったのだが，まあそこは次のステップにでも．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「機龍警察」読了]]></title>
    <link href="http://yagays.github.io/blog/2014/05/13/review-police-dragoon/"/>
    <updated>2014-05-13T01:11:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/05/13/review-police-dragoon</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4150309930" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>爽快メカアクションかと思いきや，実は警察の派閥争いやら内部腐敗やらのシステムに身悶えする(萌える)小説だった．そもそも人が運用する外部装甲の設定や機龍兵と呼ばれる特捜部が隠し持つ圧倒的な武力描写はちょっとしたスパイスであり，むしろ組織内の人間模様が中心にあった．警察という国家権力として治安維持という職務に準ずる中で，その理想としての公正さと現実の不条理さの狭間で身動きが取れなくなり，組織として硬直する様は非常にリアリティがある．そこに物語を際立たせる要素として，機龍兵に搭乗する特捜部3人の傭兵の過去が織り込まれていくのだが，文字通り三者三様な職務への姿勢と，その過去とのつながりが本書の醍醐味の一つとなっている．</p>

<p>本書は様々な伏線や登場人物の語られない一面を残しつつ終わっている．機龍警察シリーズはこの後も暗黒市場，自爆条項，未亡旅団と続いていくので，続編を読むのが楽しみな作品だ．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「know」読了]]></title>
    <link href="http://yagays.github.io/blog/2014/05/12/review-know-nozaki-mado/"/>
    <updated>2014-05-12T09:02:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/05/12/review-know-nozaki-mado</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4150311218" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>「ググる」に代表される検索システムがが電子葉という脳機能の一部として実用化され，知ること自体がネットワーク上の情報にアクセスすることと同義となった世界の物語．身の回りでは情報材とよばれる素子によって通信が媒介され情報が発信し続けられ，人間はそれに自由にアクセスできる．そんな情報に溢れた未来で，知りたいと欲する知識欲の根源とはなにか，予測できるものとできないもの，そして全能性について，本書「Know」はそういった問題に焦点を当てた小説だ．</p>

<p>扱われるトピック的には現在の科学技術の延長線上に収まっていて，突拍子もないアイデアが出てきたり宇宙人がみたいな話も無い．その分ある程度予期できるというか，出来なくはないだろうという感じで未だ実現しない技術が常識的に使われる未来を脳内に描きやすい．というより読んでいてあれこれ考えを巡らすのが楽しい．</p>

<p>一方で，本書は京都が舞台になっており，表紙絵からも分かる通りかなり宗教色や日本の歴史観を入れ込んだ作品になっている．そういうあたりは手塚治虫の火の鳥を想起させるけれども，本書が向き合う宗教や歴史観はそれとは少し違う気がする．あたかも宗教画や教義の中には真実が隠されていて，現代人はそれに気付いてないんだ的な扱いをしていて，僕はあまり好きじゃない．ある意味西洋的であるというか，宗教や歴史的な古文書ってそんなに始まりをつかさどるようなものだったっけ？と疑問が湧いてしまって，その点は馴染めなかった．</p>

<p>あと最後に蛇足で内容とは全く関係無いが，計算機科学的にはCould not getではなくてPermission Deniedなのでは&#8230;と思った．</p>
]]></content>
  </entry>
  
</feed>
