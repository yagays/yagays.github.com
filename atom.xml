<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Wolfeyes Bioinformatics beta]]></title>
  <link href="http://yagays.github.io/atom.xml" rel="self"/>
  <link href="http://yagays.github.io/"/>
  <updated>2014-01-17T21:11:25+09:00</updated>
  <id>http://yagays.github.io/</id>
  <author>
    <name><![CDATA[yag_ays]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[「細胞の物理生物学」読書ノート：第3章]]></title>
    <link href="http://yagays.github.io/blog/2014/01/17/pboc-03/"/>
    <updated>2014-01-17T20:42:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/01/17/pboc-03</id>
    <content type="html"><![CDATA[<ul>
<li>読書ノートまとめ：<a href="http://yagays.github.io/blog/2013/11/30/archive-physical-biology-of-the-cell/">http://yagays.github.io/blog/2013/11/30/archive-physical-biology-of-the-cell/</a></li>
</ul>


<h4>この章のまとめ</h4>

<p>3章では，生物を取り巻く「時間」を扱う．細胞内の化学反応などのナノセカンドスケールから，生物の進化の歴史のスケールまで，様々な時間というものが考えられる．本章では，前半では一般的な生物学的時間スケールについての数の感覚をつかむために，様々な生物現象の時間について扱うとともに，後半ではそれらを進行時間・相対的時間・操作される時間の3つの時間に大別して，その特徴や機構について見ていく．</p>

<p>この章のポイントとしては，</p>

<ul>
<li>生物を取り巻く時間の数の感覚を理解することに</li>
<li>生物が時間をどう「操作」しているのか</li>
</ul>


<p>だろう．一つ目は前章と同様にオーダーレベルで生物現象の時間を把握することだが，それと同時に「なぜそれくらい時間がかかるのか」といった時間を規定するより低次な現象についても考慮していく必要がある．原子の大きさに比べて生物のサイズがなぜこれほどまでに大きいのかという前章の疑問と同様に，なぜ生物は今の時間スケールで生きているのかということが，各時間スケールを俯瞰することにより理解できる．二つ目は抽象的な言い方をしているが，化学反応や物理現象は時間という一方向にしか進まないものを，いかに生物が都合の良いように調節しているかということである．そこには，時計のような周期性の仕組みであったり，タイミングを同期するようなチェック機構，反応時間自体の調節などがある．</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4320057163" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=0815344503" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<h3>3.1 時間スケールの階層性</h3>

<ul>
<li>様々な生物学的時間の階層（おおよそ対数スケール）

<ul>
<li>ショウジョウバエの発生</li>
<li>ショウジョウバエの胚の初期発生段階</li>
<li>細菌の細胞分裂</li>
<li>細胞の運動</li>
<li>タンパク質合成</li>
<li>転写</li>
<li>イオンチャネルの開閉</li>
<li>酵素による触媒反応</li>
</ul>
</li>
<li>生物学的時間の測定

<ul>
<li>直接的観測

<ul>
<li>実際に裸眼や光学顕微鏡で観測した対象の変化を見る</li>
</ul>
</li>
<li>固定した時間での観測

<ul>
<li>ある時間間隔で測定し，集団の性質の経時変化を見る</li>
<li>計測によって対象が変化してしまう場合に有効

<ul>
<li>細胞が壊れてしまうとか死んでしまうとか</li>
</ul>
</li>
</ul>
</li>
<li>パルス追跡

<ul>
<li>放射性炭素によるラベリング</li>
</ul>
</li>
<li>生成物の蓄積の観測

<ul>
<li>生成物の濃度や蛍光強度を計測する</li>
</ul>
</li>
</ul>
</li>
<li>進化のスケール

<ul>
<li>共通祖先の存在（LUCA:last universal common ancestor）</li>
<li>進化の過程を直接測定することは難しい

<ul>
<li>化石の分析</li>
<li>現存する種の比較

<ul>
<li>形態学的な特徴</li>
<li>DNA配列の類似性</li>
</ul>
</li>
</ul>
</li>
<li>こういった測定には標準的な時間を計るストップウォッチのようなものが必要</li>
</ul>
</li>
<li>大腸菌の時間

<ul>
<li>最少培地での増殖速度は3,000秒（50分）</li>
</ul>
</li>
</ul>


<h3>3.2 進行時間</h3>

<p>多くのステップからなる生物現象の時間や，時計や振動の機構について見ていく．</p>

<ul>
<li>セントラルドグマ

<ul>
<li>それぞれのステップのに関わる高分子の速度が関わってくる

<ul>
<li>DNA複製：レプリソーム（約1,000 bp/s）</li>
<li>転写：RNAポリメラーゼ（約40 nucleotide/s）</li>
<li>翻訳：リボソーム（約15 aa/s）</li>
</ul>
</li>
</ul>
</li>
<li>時計と振動

<ul>
<li>時計のような振動する機構は，その一部分の時間を使って振動周期を決めるようコントロールされている</li>
<li>基本的に活性化と抑制の組み合わせ</li>
<li>e.g. 初期胚の細胞周期

<ul>
<li><ol>
<li>サイクリンのタンパク質合成</li>
</ol>
</li>
<li><ol>
<li>閾値を超えるサイクリンの蓄積によるサイクリン依存キナーゼの活性</li>
</ol>
</li>
<li><ol>
<li>キナーゼの標的タンパク質によるサイクリンタンパク質の分解分解</li>
</ol>
</li>
</ul>
</li>
<li>e.g. シアノバクテリアの概日リズム</li>
</ul>
</li>
</ul>


<h3>3.3 相対的時間</h3>

<p>関係した過程の順番を保証するような機構について見ていく</p>

<h4>真核生物の細胞周期や複雑な機構の生成</h4>

<p>複雑な制御やチェック機構を実現するために，遺伝子ネットワークによって遺伝子発現の順序がプログラムされている．</p>

<ul>
<li>複雑な細胞周期とチェックポイント

<ul>
<li>G_1 (ギャップ1)

<ul>
<li>細胞サイズや周囲の環境のチェック</li>
<li>DNA損傷のチェック</li>
</ul>
</li>
<li>S (核内DNAの複製)

<ul>
<li>なし</li>
</ul>
</li>
<li>G_2 (ギャップ2)

<ul>
<li>DNAの複製のチェック</li>
</ul>
</li>
<li>M (核分裂，細胞分裂)

<ul>
<li>染色体と紡錘体の結合のチェック</li>
</ul>
</li>
</ul>
</li>
<li>タンパク質がプロモータ領域に結合することによる転写制御

<ul>
<li>抑制：転写を物理的に妨害（ネガティブな制御）</li>
<li>活性化：RNAポリメラーゼを誘導（ポジティブな制御）</li>
</ul>
</li>
<li>実験による相対的時間の計測

<ul>
<li>e.g. カウロバクターの細胞分裂

<ul>
<li>細胞周期を同期させ，一定時間おきにDNAマイクロアレイでmRNAの発現量を計測する</li>
<li>ゲノムの20%程度が細胞周期に従うmRNAの時間変化を示した→細胞周期に関わっている</li>
</ul>
</li>
<li>e.g. 大腸菌のべん毛の形成

<ul>
<li>べん毛を構成する高分子に対応する遺伝子の発現強度をGFPを用いて計測する</li>
<li>関連する遺伝子産物が段階的に生成されていく様子が観測される</li>
</ul>
</li>
</ul>
</li>
</ul>


<h4>ウィルスの生活環</h4>

<p>バクテリオファージの場合，ウィスルの付着から溶菌まで30分程度で完了する．</p>

<ul>
<li>ウィルスの自己複製の過程

<ul>
<li>付着による感染・DNA注入</li>
<li>転写・翻訳</li>
<li>集合・詰め込み</li>
<li>溶菌</li>
</ul>
</li>
</ul>


<h4>発生過程</h4>

<p>多細胞生物の発生過程において，受精卵だった1つの核の分裂や細胞の空間的な移動が正確に調整され，胚発生に関する遺伝子がカスケード的に働くことによりパターンの形成が行われる．</p>

<ul>
<li>ギャップ遺伝子

<ul>
<li>胚を前部，中部，後部の3つの領域に分割する</li>
</ul>
</li>
<li>ペアルール遺伝子

<ul>
<li>7本の縞模様を作る</li>
</ul>
</li>
<li>体節極性遺伝子

<ul>
<li>14本の縞模様を作る</li>
</ul>
</li>
</ul>


<h3>3.4 操作される時間</h3>

<p>細胞内部では自然に起こる物理的な速度を超えて，生物が能動的に化学反応や物質輸送の速度を上昇させる．こういった速度を操作する機構について見ていく．</p>

<ul>
<li>酵素反応

<ul>
<li>通常の化学反応では非常に長い時間がかかる</li>
<li>酵素を触媒として使うことにより反応の時間をオーダーレベルで加速させる</li>
<li>e.g. トリースリン酸異性化酵素は反応速度を10<sup>9</sup> 倍にする</li>
</ul>
</li>
<li>細胞内の物質輸送

<ul>
<li>ブラウン運動による移動はランダムであり，拡散する時間は長さのスケールに依存する

<ul>
<li><script type="math/tex">t_{\mathrm{diffusion}}=x ^ 2/D</script>（<script type="math/tex">D</script>は拡散係数，<script type="math/tex">x</script>は距離）</li>
<li>濃度にも関連する</li>
</ul>
</li>
<li>分子モーターにより細胞内輸送を行う

<ul>
<li>アクチンフィラメントにおけるキネシンとダイニン</li>
</ul>
</li>
<li>膜タンパクのチャネルとポンプ

<ul>
<li>イオン輸送・イオンの濃度勾配を保つ</li>
</ul>
</li>
</ul>
</li>
<li>DNAの複製速度

<ul>
<li>最少培地では大腸菌の分裂は3,000 s程度で，染色体の複製フォークの最高スピード程度で実現できる．

<ul>
<li>しかし実際には，環境が良ければ1,200 s程度で分裂できる</li>
</ul>
</li>
<li>染色体の複製は並列で行われる

<ul>
<li>大腸菌よりもゲノムサイズが大きいアフリカツメガエルの初期胚でも30分程度で分裂することができる</li>
<li>真核生物は幾つかの染色体に分割され，複数の異なる開始点から同時に複製が始まる</li>
</ul>
</li>
</ul>
</li>
<li>卵と胞子

<ul>
<li>細胞の成長と分裂を分離することができる</li>
<li>胞子の休眠や冬眠</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「数学ガールの誕生 理想の数学対話を求めて」読了]]></title>
    <link href="http://yagays.github.io/blog/2014/01/16/review-birth-of-math-girl/"/>
    <updated>2014-01-16T09:07:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/01/16/review-birth-of-math-girl</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4797373253" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>電車の中で女の子が「<a href="http://www.amazon.co.jp/gp/product/4320026683/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4320026683&linkCode=as2&tag=yagays-22">コンピュータの数学</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=yagays-22&l=as2&o=9&a=4320026683" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />」を読んでいるという一つの奇妙な物語のことを，当時リアルタイムで読んでいた私もよく覚えている．Webサイトに掲載されている数学の面白い文章があるというだけで，知的好奇心を満たす手軽な読み物として楽しんでいた．それが将来「数学ガール」シリーズとして，確固たる地位を確立するとは思わなかったが&#8230;．</p>

<p>本書は，「数学ガール」シリーズの著者である結城浩氏が行った2つの講演を元にしている．一つは公立はこだて未来大学での教員と学生を対象にした講演，もう一つは編集者などを対象にした勉強会で，そのどちらも数学ガールというヒット作が誕生した経緯や作品への取り組みがテーマである．例えば，そもそも著者が自分のWebサイト上で個人的に書き始めた短編がきっかけであること，元々シリーズになる予定は無くタイトルに連番を振るのをためらったこと，ゲーデルの不完全性定理を書くことを反対されたことなどなど，数学ガールの歴史を紐解きつつ，その裏舞台を紹介してくれる．それと同時に，なぜこのようなヒット作となったのか，数学という難しいとされる題材を高校生の物語に乗せて見事に描き切ったのかといった秘訣について，著者が自己分析をしている興味深い内容となっている．そういった一連のシリーズの歴史を通して，出版であったり教育に対して結城浩氏がどう捉えているのかを垣間見ることができる．</p>

<p>詳しい内容は本書を読んでいただくとして，恐らく根底に流れるスタンスは一貫して「読者のことを考える」ということだろう．では，読者とは誰か，どういった人を対象にするのか，その人が作品を向き合ったときに何を考えるのか，何を知りたいのか，どう理解していくのか，そういったことを突き詰めていった結果がこの「数学ガール」シリーズなのだという．だから，そもそも最初の読者である自分が理解していないことは書けないし，一方で数学者とは異なる視点から一般の人に向けた数学の体系を描くこともできる．そういった執筆の背景を理解すると，「数学ガール」シリーズを読み進めていくときの心地よさであったり，理解へと繋がる一瞬の感覚の理由というものが理解できる気がする．</p>

<p>著者曰く「物理ガール」や「情報ガール」は，自然科学や工学に根ざしているという理由でちょっと難しいそうだ．二匹目のドジョウは難しいかもしれないが，人に教えるという行為について本書から学べることはたくさんあるだろう．また，数学ガール自体のファンにとっても，数学ガールの漫画化であったり海外展開の話，そして最初に書いた「コンピュータの数学」にまつわる短い読み切りなどなど，十分に楽しめる一冊となっている．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「人間はいろいろな問題についてどう考えていけば良いのか」読了]]></title>
    <link href="http://yagays.github.io/blog/2014/01/12/review-mori-thinking/"/>
    <updated>2014-01-12T15:53:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/01/12/review-mori-thinking</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4106105101" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>森博嗣の思考術とでも言うべきか．あとがきには仕事術に関する本を書いてくれと頼まれたとあるが，元研究者の著者としてはその二つは同義だろう．本書は「抽象的思考」を軸に，著者が世の中のあらゆる問題に対してどう考えていくのかといったことが丁寧に解説される．とは言うものの，人の脳みその中で行われる捉えどころの無いものを，直接文字として起こすことはできない．本書においても，方法論として述べられるところはあるものの，基本的には森博嗣本人が「どのような考え方であるのか」ということが中心となる．しかしながら，それはアプローチの方法であり，問題の定義の仕方であり，問題に対して自分がどう接していくのかということに繋がる．何も突拍子もない思考の跳躍をしているわけではなく，問題を一歩引いて眺めたり，多面的に捉えたりと，そのアプローチには「枠」があり，それが抽象化である．</p>

<p>さて，本書で個人的に一番面白かったのが，著者が思考というものを「庭」に喩えている最後の章だ．抽象的思考というものを抽象的に捉えたらということを突き詰めた結果，著者は趣味のガーデニングに行き着いたようだ．ガーデニングは思いの外難しいらしい．思い描く理想の庭を人工的に作っても，植物はいずれ朽ちてしまう．どれだけ手を加えても，時間の流れには逆らえない．しかし，その摂理に虚無的になるのではなく，継続して何かし続けることで，その行為がまた新たな結果を生む．そういった論理では測れない「自然」的な要素が，著者の考える思考の本質なのだという．自分の思考を育てるという意味で，地道な努力によって自分の「庭」を作っていくほか無い．それは，人に強制されたり刷り込まれるものではなく，自発的なもの，結論が出るまでに時間を要するもの，人の一生をかけて理想に近づけていくというものであるというのが著者の思考術である．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MLAC2013 数式を使わずイメージで理解するEMアルゴリズム]]></title>
    <link href="http://yagays.github.io/blog/2013/12/15/mlac-2013-em-algorithm/"/>
    <updated>2013-12-15T19:16:00+09:00</updated>
    <id>http://yagays.github.io/blog/2013/12/15/mlac-2013-em-algorithm</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p><a href="http://qiita.com/advent-calendar/2013/machinelearning">Machine Learning Advent Calendar 2013</a>の15日目を担当する<a href="https://twitter.com/yag_ays">@yag_ays</a>です．専門はバイオインフォマティクスという計算機を使って生物学をする分野で，生モノではなく遺伝子の文字列相手に格闘している大学院生です．今回は初心者の人を対象に，なるべく数式を使わずにEMアルゴリズムについて解説してみたいと思います．</p>

<p>EMアルゴリズムは，SVMやニューラルネットワークといった華々しい機械学習の手法の一つではなく，機械学習の中で使われる尤度最大化という一部分を担当するアルゴリズムです．そのため多くの人にとってEMアルゴリズムは，それ単体を使ってみたりだとか独自に改良をしたりするような対象ではないでしょう．でも，EMアルゴリズムなんて仰々しい名前が付けられているだけあって，いざ自分の仕事に組み込む場合には中身を理解していないと「なぜEMアルゴリズムを使ったの？」であったり「それを使うと何が嬉しいの？」といった質問が来たときに困るし，とりあえず概念だけでも一通り理解しておきたいと思う人もいると思います．そこで今回は，大雑把にEMアルゴリズムを理解することを目的に，細かい定義やら数式は抜きにしてイメージで覚えられるような解説を書いてみました．まあ結局PRMLの受け売りなのですが，紙の上で見るよりかは分かりやすくしたと思うので勘弁してください．</p>

<ul>
<li><strong>この記事の対象となる人</strong>

<ul>
<li>EMアルゴリズムについて聞いたことはあるけどよく分かっていない人</li>
<li>例えば「これEMアルゴリズム使ってるけど，局所解に落ちてるんじゃない」って言われたとして，？？？ってなる人</li>
</ul>
</li>
<li><strong>この記事の対象ではない人</strong>

<ul>
<li>「パターン認識と機械学習」(PRML)下巻9章を読み通した人</li>
<li>イメージと聞いて情報幾何の話だと思った人</li>
</ul>
</li>
</ul>


<h3>EMアルゴリズムとは</h3>

<p>EMアルゴリズムは，潜在変数が存在する時の尤度関数を最大化するアルゴリズムです．機械学習の文脈では，よく混合ガウス分布（GMM）などの潜在変数を用いたモデリングの際に用いられます．PRMLで言うところの下巻9章「混合モデルとEM」ですね．また，今回のMLAC 2013では<a href="https://github.com/masakazu-ishihata/advent2013">m_ishihataさんの記事</a>でも出てきますので，何に使うのかピンと来ない人はそちらも参照してもらえればと思います．</p>

<p>ここで覚えておいて欲しいのは，<strong>尤度関数を最大化する</strong>ということです．確率的な機械学習の手法を使っていると，ときどき尤度関数というものが出てきます．特にEMアルゴリズムのような潜在変数が存在する時には，尤度関数は数式には書くことができても，実際にそれがどういう形をしていてどの値で最大になるのかといったことは全く予想ができません．尤度関数に適当に数字を入れれば値が帰ってきますが，それをパラメータすべてについて計算することは現実的には不可能です．そういった条件でどうにか上手いこと計算して効率よく最大値を求めたいといったときに，EMアルゴリズムは使われます．</p>

<h3>イメージで理解するEMアルゴリズム</h3>

<p>前置きはこのくらいにして，では実際にEMアルゴリズムが何をしているのかをスライドで見てもらいましょう．なお，これはあくまでイメージですので，実際にはデータ数に依存する高次元の空間ですし，EMアルゴリズムの計算途中で対数尤度関数がこのように図示できるわけでもありません．その点は注意してください．なお，以下の解説はPRML下巻9章の図9.14 (P.169)を参考にしています．</p>

<iframe src="http://www.slideshare.net/slideshow/embed_code/29219489" width="476" height="400" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe>


<p>さて，PRMLの図を動かしてみたという感じですが，どうだったでしょうか？途中に少し記号を書いてしまいましたが，あまり気にしないでください．EMアルゴリズムの各ステップを更新していくことで，対数尤度の山を徐々に登っていく様子が何となくつかめたと思います．初期値<script type="math/tex">\theta</script>だったパラメータも，<script type="math/tex">\theta'</script>，<script type="math/tex">\theta''</script>と更新されて，尤度関数を最大化するパラメータが求められたことがわかります．</p>

<h3>EMアルゴリズムにおける下界</h3>

<p>とは言うものの，下界って何だとかどうやって計算するんだとか色々あやふやなところがあるので，その辺を少し補足しておきましょう．下界（Lower Bound）とは，その名の通り対数尤度がここよりも小さくならないということを表しています．EMアルゴリズムでは，この下界というものを使ってだんだん底上げしていくことで対数尤度を増加させていくという感じです．Eステップでパラメータを固定したときの下界というものを求めて，Mステップで潜在変数の分布を固定したときの下界と対数尤度の値が同じになるように下界を押し上げます．あとはこれの繰り返しになるのですが，必ず下界よりも対数尤度は上にあるので，決して対数尤度が小さくはなりません．こうやってEMアルゴリズムは対数尤度を最大化していきます．</p>

<p>下界の求め方も今回は数式を使わずに説明するということで，対数尤度式からアレコレ計算すると出てくる程度に捉えておいてもらえればと思います．例えば混合ガウス分布にEMアルゴリズムを適用する場合だと，Jensenの不等式を使って数式の変形することにより下界は求めることができます．下界と対数尤度の差が実はKLダイバージェンスになっているという話もあるのですが，潜在変数の分布について話してないのでここでは割愛します．詳しくはPRMLの数式を追ってみてください．</p>

<h3>イメージで分かるEMアルゴリズムの性質</h3>

<p>ここからは，EMアルゴリズムで注意しなければいけない点を解説します．先ほど紹介したイメージを持っていれば，数式を使わずともEMアルゴリズムの持つ問題点を指摘できるはずです．</p>

<h4>各ステップを繰り返す必要がある</h4>

<p>当然ですが，EMアルゴリズムはEステップとMステップを繰り返す必要があります．EMアルゴリズムが適用できる問題ならば各ステップの計算自体は簡単ですが，パラメータや対数尤度値がある程度収束するまでは，計算し続けなければいけません．</p>

<h4>初期値に依存し，局所最適解に落ちることもある</h4>

<p>先ほど示したイメージでは，下界を引き上げていく際に二次関数のようなものの頂点と対数尤度関数を行ったり来たりしていました．ということは，きちんと勾配にしたがって最大化してくれるという保証がある一方で，それらがある程度一致したところでパラメータは更新しようがないということになります．そのため，EMアルゴリズムは初期値によっては局所最適解に落ちる可能性があります．</p>

<h3>まとめ</h3>

<p>いかがだったでしょうか？この記事で少しでもEMアルゴリズムのイメージがつかめてもらえれば幸いです．そうすれば，PRMLなどの数式の出てくる参考書を読んでも，EMアルゴリズムというものが一体何がしたいのかといったことが理解しやすくなるんじゃないかと思います．</p>

<p>少し個人的な話になりますが，私自身はこうやって模式図やイメージを実際に頭のなかで組み立てると，とても理解が捗ります．私が機械学習の勉強をするときにこういうことを意識しはじめたのは，PRML復々習レーンで第3章の線形回帰モデルの冒頭を発表したときでした．そのときには3.1.2の「最小二乗法の幾何学」という項が一体何を言っているのか全く分からず，発表の際に堂々と「分かりませんでした！」と言ったことをよく覚えています．その時に発表の際に参加者の皆さんに教えていただいたおかげで，最小二乗法の理解が一気に深まったように思えました．よくわからない数式の最小化という漠然とした状態から，数式の各項が何を表していて，何を最小化するのかということまで具体的に理解できたのはこのときでした．こういった感覚はPRMLを読むうちに何度もあり，自分の中できちんと理解に落としこむことの重要性を実感しています．今回の記事では，その一つとしてEMアルゴリズムをイメージでつかんでもらえるような紹介の仕方をしてみました．勿論のことながら，自分で自由自在に使いこなすくらい理解するにはきちんと数式を追わなければいけないですし，図式としてイメージできないことも多々あります．しかしながら，どんな難しいアルゴリズムや手法でも，やってることは絵にかけるほど単純なのだというリラックスした感覚で臨めば，意外と理解につながるものだと思います．機械学習の勉強で壁にぶち当たったときは，ぜひ図を書いたり具体的な絵にして考えなおしてみると上手くいくかもしれません．</p>

<h4>参考</h4>

<ul>
<li><a href="http://qiita.com/advent-calendar/2013/machinelearning">Machine Learning Advent Calendar 2013 - Qiita [キータ]</a></li>
</ul>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4621061224" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4621061240" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「山賊ダイアリー」1〜4巻 読了]]></title>
    <link href="http://yagays.github.io/blog/2013/12/12/review-sanzoku-diary/"/>
    <updated>2013-12-12T23:19:00+09:00</updated>
    <id>http://yagays.github.io/blog/2013/12/12/review-sanzoku-diary</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4063523918" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4063524264" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=406352454X" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4063524884" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<p>本書は，地元岡山県北部で猟師になった著者が，猟銃や罠などを使ってイノシシやシカ，鳥などの動物を狩る「リアル猟師奮闘記」だ．実際に山に入って狩猟をするのは勿論のこと，狩猟仲間やベテランとのやり取りや日々の生活なども描かれる．</p>

<p>最近めっきり漫画を読まなくなってしまったのだけれども，ネットで評判になってる本書を見てたまたま買って読んでみたら，これがなかなか良かった．絵やコマの割り方が細かくないため素直に物語や知識を追えて，なおかつ実録モノというところが，個人的に気に入った要因だと思う．変に説教臭く無いのも好感が持てる．それでいて本能的な肉への欲求であったり，家畜化されていない動物を仕留めそして食べるという行為の心理的な変化を感じ，料理に化けるときの喜びのようなものがダイレクトに伝わってくる．要所要所に挟まってくる日本の狩猟のシステムであったり，狩りの方法や先人の智慧なども非常に興味深い．知的好奇心も満たされつつ一般人の日常では味わうことのない世界を覗くことができて，個人的には満足度の高い作品だった．狩猟時期が限られていることもあって新しいネタがどんどん出てくるわけでもないようだが，次のシーズンの狩猟の成果に期待したい．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MacPortsでPyMOLをインストールする]]></title>
    <link href="http://yagays.github.io/blog/2013/12/11/pymol-macports/"/>
    <updated>2013-12-11T13:24:00+09:00</updated>
    <id>http://yagays.github.io/blog/2013/12/11/pymol-macports</id>
    <content type="html"><![CDATA[<p>分子ビューアのPyMOLをインストールしたので，そのときのメモ．今回は無料版をコンパイルするということでMacPortsからインストールしたのだが，FinkやHomebrewからもインストールすることができるようだ．</p>

<ul>
<li><a href="http://www.pymolwiki.org/index.php/MAC_Install">MAC Install - PyMOLWiki</a></li>
</ul>


<h4>MacPortsによるインストール</h4>

<p>通常のMacPortsのインストールの手順と同じで，以下のようにすればインストールすることができる．</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo port install pymol</span></code></pre></td></tr></table></div></figure>


<h4>tclのバリアントによるエラー</h4>

<p>のだけれども，自分の環境でMacPortsからそのままインストールを行うと以下のようなエラーが出た．</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo port install pymol
</span><span class='line'>---&gt;  Computing dependencies for pymol
</span><span class='line'>---&gt;  Fetching archive for pymol
</span><span class='line'>Error: org.macports.archivefetch for port pymol returned: tcl must be installed without +corefoundation.
</span><span class='line'>Please see the log file for port pymol for details:
</span><span class='line'>    /opt/local/var/macports/logs/_opt_local_var_macports_sources_rsync.macports.org_release_tarballs_ports_science_pymol/pymol/main.log
</span><span class='line'>To report a bug, follow the instructions in the guide:
</span><span class='line'>    http://guide.macports.org/#project.tickets
</span><span class='line'>Error: Processing of port pymol failed</span></code></pre></td></tr></table></div></figure>


<p>エラーログを見ると，どうやらtclのインストールの際にcorefoundationというバリアントが付いているせいでエラーが起きているようだ．MacPortsで入れたtclを見てみると，以下のようにcorefounderとthreadsのバリアントが付いていることが確認できる．</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ port installed tcl
</span><span class='line'>The following ports are currently installed:
</span><span class='line'>  tcl @8.6.1_0+corefoundation+threads (active)</span></code></pre></td></tr></table></div></figure>


<p>この問題は既に報告されているようだが，tclを再インストールせずにエラーを回避するのは今のところできない模様．ここにも書かれている通り，tclはRなどの他のソフトウェアでも使用するものなのでなるべく弄りたくは無いのだが，今回はやむを得ない．</p>

<ul>
<li><a href="http://trac.macports.org/ticket/37062">#37062 (pymol @1.5 tcl must be installed without +corefoundation) – MacPorts</a></li>
</ul>


<p>ということで，以下のようにtclを一度アンインストールして，バリアントを変えた状態でインストールしなおす．tclの依存関係にある他のプログラムも一度消さなければいけない．</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo port uninstall py27-pmw
</span><span class='line'>$ sudo port uninstall py27-tkinter
</span><span class='line'>$ sudo port uninstall tk
</span><span class='line'>$ sudo port uninstall tcl
</span><span class='line'>
</span><span class='line'>$ sudo port install tcl -corefoundation
</span><span class='line'>$ sudo port install tk -quartz
</span><span class='line'>$ sudo port install pymol</span></code></pre></td></tr></table></div></figure>


<p>アンインストールするpy27-pmw，py27-tkinter，tk，tclはそれぞれ依存関係で繋がっているので，この順番でアンインストールしないといけない．また，py27-pmwとpy27-tkinterはpymolを入れるときにdependenciesの関係で自動で入れてくれるので，アンインストールした後に明示的にインストールしなおさなくても良い．</p>

<p>これでPyMOLがインストールできるはず．</p>

<p><img src="http://dl.dropboxusercontent.com/u/142306/b/pymol.png" alt="" /></p>

<h3>余談</h3>

<p>PyMOLを動かすにはXQuartzが必要になるので，あらかじめインストールしておいたほうがいいだろう．</p>

<ul>
<li><a href="http://xquartz.macosforge.org/landing/">XQuartz</a></li>
</ul>


<h4>環境</h4>

<ul>
<li>Mac OS X 10.9 Mavericks</li>
<li>PyMOL Version 1.6.0.0</li>
</ul>


<h4>参考</h4>

<ul>
<li><a href="http://www.pymol.org/">PyMOL | www.pymol.org</a></li>
<li><a href="http://biokids.org/?PyMOL%A4%F2%BB%C8%A4%C3%A4%C6%A4%DF%A4%E8%A4%A6">PyMOLを使ってみよう - BioKids Wiki</a></li>
<li><a href="http://www.wkagawa.info/crystallography_on_mac/pymol/">PyMOL | Wataru Kagawa&#8217;s Weblog</a></li>
<li><a href="http://togotv.dbcls.jp/20090617.html">PyMOLを使ってタンパク質の構造を見る - 統合TV (togotv)(2009-06-17)</a></li>
<li><a href="http://togotv.dbcls.jp/20090707.html">PyMOLを使い倒す - 統合TV (togotv)(2009-07-07)</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「細胞の物理生物学」読書ノート：第2章その2]]></title>
    <link href="http://yagays.github.io/blog/2013/12/10/pboc-02-2/"/>
    <updated>2013-12-10T20:00:00+09:00</updated>
    <id>http://yagays.github.io/blog/2013/12/10/pboc-02-2</id>
    <content type="html"><![CDATA[<ul>
<li>読書ノートまとめ：<a href="http://yagays.github.io/blog/2013/11/30/archive-physical-biology-of-the-cell/">http://yagays.github.io/blog/2013/11/30/archive-physical-biology-of-the-cell/</a></li>
</ul>


<h4>この章のまとめ</h4>

<p>この2章では，<a href="http://yagays.github.io/blog/2013/12/06/pboc-02-1/">前回</a>のようにモデルとなる大腸菌における様々な数や性質を紹介した後に，生物を構成する構造を大きさのオーダーごとに階層に分けて，各階層ごとの特徴について述べている．単に生物の構造を列挙しているだけに見えるが，それぞれがどの大きさレベルでの話をしているのかを把握し，それらの関係性を理解することが重要となる．ある構造を形作る小さな構造の集合という視点で眺めれば，生物の持つ複雑さを単純化して理解することができる．</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4320057163" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=0815344503" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<h3>大腸菌の概要</h3>

<h4>モデル生物としての大腸菌</h4>

<p>大腸菌は以下の理由により実験的に扱いやすく，分割できる最小単位である単細胞の生物としての標準的な「ものさし」として利用が可能である．</p>

<ul>
<li>採取が容易</li>
<li>好気条件下で増える</li>
<li>実験室での培養が可能で，生育環境も変えやすい</li>
<li>変異体の作成が容易（遺伝子操作）</li>
</ul>


<h4>実際に大腸菌に含まれているタンパク質の測り方</h4>

<p>代表的な方法として，2次元ポリアクリルアミドゲル電気泳動により細胞内に入り混じったタンパク質を分離することができる．</p>

<ul>
<li>横方向：pH：電場の印加</li>
<li>縦方向：分子量：電荷を持った界面活性剤に固定させる</li>
</ul>


<h4>生物学的構造を調べる実験手法</h4>

<ul>
<li>計測方法

<ul>
<li>対象とする構造との相互作用を測る</li>
<li>対象とする構造に力を加える</li>
</ul>
</li>
</ul>


<p>具体的には，以下のような実験がある．</p>

<ul>
<li>光学顕微鏡

<ul>
<li>特定の構造上に分布した蛍光物質から出る光を計測する</li>
</ul>
</li>
<li>原子間力顕微鏡

<ul>
<li>表面を走査して構造の外形を計測する</li>
</ul>
</li>
<li>電子顕微鏡，低温電子トモグラフィ

<ul>
<li>試料に放射した電子線やX線が散乱する様子を計測することによって内部構造を再構成する</li>
</ul>
</li>
</ul>


<h4>大腸菌のスケール</h4>

<p>図表参考．これから先はズームインしていく段階とズームアウトしていく段階をそれぞれ追いつつ，それらが成り立つ上での構造を詳しく見ていく．</p>

<h3>様々な細胞とその構造</h3>

<p>まず細胞からスタートする．ひとえに細胞と言っても，その大きさや機能は様々である．先ほど扱った大腸菌以外にも，単細胞の真核生物であったり多細胞生物の機能ごとに分化した細胞などがある．</p>

<ul>
<li>原生生物</li>
<li>植物細胞</li>
<li>出芽酵母

<ul>
<li>単細胞の真核生物のモデル生物</li>
</ul>
</li>
<li>赤血球，線維芽細胞，ニューロン，網膜桿体細胞

<ul>
<li>高度に専門化した細胞</li>
</ul>
</li>
</ul>


<h3>スケールを下げて眺める</h3>

<h4>細胞小器官</h4>

<p>細胞小器官が集まって細胞を構成している．</p>

<ul>
<li>小胞体</li>
<li>ゴルジ体</li>
<li>ミトコンドリア</li>
<li>リソソーム</li>
</ul>


<p>これらに加えて，特定の機能に特化した細胞は，他の細胞にはない高度に専門化した細胞小器官を持っている場合がある．</p>

<h4>生体高分子集合体</h4>

<p>生体高分子集合体が集まって細胞小器官を構成している．</p>

<ul>
<li>タンパク質，核酸，糖，脂質などが集まった通常の複合体 

<ul>
<li>10nmスケールの生体高分子の集合として，重要な機能を持つ</li>
<li>e.g. ヌクレオソーム，核孔複合体，レプリソーム，リボソーム，プロテアソーム，ATP合成酵素</li>
</ul>
</li>
<li>特定の高分子のユニットが連なった，らせん複合体

<ul>
<li>同じ構造単位が繰り返され幾何的構造を取る</li>
<li>e.g. 微小管，細菌のべん毛，タバコモザイクウィルス，コラーゲン繊維，DNA</li>
</ul>
</li>
</ul>


<p>これらの高分子集合体が集まって，特徴的な細胞内構造を取ることもある．</p>

<ul>
<li>小胞体

<ul>
<li>小胞体膜とリボソーム</li>
</ul>
</li>
<li>飛翔筋肉

<ul>
<li>筋原線維（ミオシンフィラメントの集合）</li>
<li>ミトコンドリア</li>
</ul>
</li>
<li>上皮細胞

<ul>
<li>微繊毛</li>
</ul>
</li>
</ul>


<p>また，ウィルスは生体高分子集合体の中でも特殊な分類に入る．独立した複製という細胞としての基本機能は持たないものの，宿主に寄生して自己増殖ができるという特徴を持つ．</p>

<ul>
<li><p>キャプシドの多様性</p>

<ul>
<li>20面体のタンパク質の殻で，中にウィルスの遺伝物質が入っている</li>
</ul>
</li>
<li><p>HIV</p></li>
</ul>


<h4>生体高分子</h4>

<p>生体高分子が集まって生体高分子集合体を構成している．</p>

<ul>
<li>タンパク質

<ul>
<li>アミノ酸の配列</li>
<li>球と棒による表示，空間充填表示，リボン表示などの表現方法がある</li>
</ul>
</li>
</ul>


<h3>スケールを上げて眺める</h3>

<h4>多細胞性</h4>

<p>単体で生きることのできる細胞が集まることでコミュニケーションを行い協力する．</p>

<ul>
<li>ストロマトライトの原始的なコロニー</li>
<li>細菌のバイオフィルム</li>
<li>粘菌の移動体と子実体</li>
</ul>


<h4>多細胞生物</h4>

<p>多細胞生物は以下の3つの要素を獲得することにより，細胞の集合体としてより大きく多機能な生物個体を形成することができる．</p>

<ul>
<li>多細胞生物の細胞の大きさと複雑さの3つの要素

<ul>
<li>大きな細胞共同体を構造的に支える細胞外マトリックス

<ul>
<li>e.g. 結合組織や上皮シート</li>
</ul>
</li>
<li>同じゲノム情報を持ちつつも別の機能を演じることができるような専門化

<ul>
<li>e.g. 上皮細胞やニューロンなど</li>
</ul>
</li>
<li>細胞が互いにコミュニケーションを取るための精巧な機構

<ul>
<li>e.g. ニューロンにおけるシナプス</li>
</ul>
</li>
</ul>
</li>
</ul>


<h4>個々の多細胞生物</h4>

<p>生物個体を超えたさらに高次のレベルとして，ヒトと，ヒトの体に存在する微生物細胞群の関係も生態系として考えられる．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「細胞の物理生物学」読書ノート：第2章その1]]></title>
    <link href="http://yagays.github.io/blog/2013/12/06/pboc-02-1/"/>
    <updated>2013-12-06T00:03:00+09:00</updated>
    <id>http://yagays.github.io/blog/2013/12/06/pboc-02-1</id>
    <content type="html"><![CDATA[<ul>
<li>読書ノートまとめ：<a href="http://yagays.github.io/blog/2013/11/30/archive-physical-biology-of-the-cell/">http://yagays.github.io/blog/2013/11/30/archive-physical-biology-of-the-cell/</a></li>
</ul>


<h4>ひとこと</h4>

<p>第2章から本格的に定量的な計算が始まる．今のところは数や濃度などの数え上げが中心だが，これらは今後のベースになる部分なので，今回は少し丁寧に計算を追ってみた．実際に自分で計算してみると，有効数字の扱いやオーダーへの落とし込み方が何となくわかる．</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4320057163" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=0815344503" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<h2>第2章 何が？そして，どこに？―細胞と生物の構築プラン</h2>

<h3>大腸菌の標準</h3>

<p>本書では最少培地での細菌の状態を基本に考える．</p>

<ul>
<li>長さ：<script type="math/tex">2 \ \mathrm{\mu m}</script></li>
<li>直径：<script type="math/tex">1 \ \mathrm{\mu m}</script></li>
<li>体積：<script type="math/tex">1 \ \mathrm{\mu m ^ 3} = 1 \ \mathrm{fL}</script></li>
<li>表面積：<script type="math/tex">6 \ \mathrm{\mu m ^ 2} </script></li>
</ul>


<h3>見積もり―大腸菌のサイズを測る</h3>

<ul>
<li>大腸菌の体積：<script type="math/tex">1 \ \mathrm{fL} = 1×10 ^ {-15} \ \mathrm{L}</script></li>
<li>大腸菌の質量：<script type="math/tex">1 \ \mathrm{pg} = 1 \times 10 ^ {-12} \ \mathrm{g}</script></li>
</ul>


<h4>1細胞あたりのタンパク質の総質量</h4>

<script type="math/tex; mode=display">1 \ \mathrm{pg} \times 0.3 \times 0.5 = 0.15 \ \mathrm{pg}</script>


<h4>1細胞あたりの炭素原子の個数</h4>

<script type="math/tex; mode=display">\frac{1\times 10 ^ {-12} \ \mathrm{g} \times 0.3 \times 0.5}{12 \ \mathrm{g/mol}} \times 6 \times 10 ^ {23} \ \mathrm{molecules/mol}  = 7.5 \times 10 ^ 9 \approx 10 ^ {10}</script>


<ul>
<li>平均的なタンパク質のアミノ酸数：<script type="math/tex">300</script>個</li>
<li>一つのアミノ酸の特徴的な質量：<script type="math/tex">100 \ \mathrm{Da}</script></li>
<li><script type="math/tex">1 \ \mathrm{Da} = 1.6 \times 10 ^ {-24} \ \mathrm{g}</script></li>
</ul>


<h4>典型的なタンパク質の質量</h4>

<script type="math/tex; mode=display">300 \times 100 \ \mathrm{Da} \times 1.6 \times 10 ^ {-24} \ \mathrm{g/Da}  = 4.8 \times 10 ^ {-20} \ \mathrm{g} \approx  5 \times 10 ^ {-20} \ \mathrm{g} </script>


<h4>1細胞あたりのタンパク質の個数</h4>

<script type="math/tex; mode=display">N _ {\mathrm{ribosome}} = \frac{0.15 \times 10 ^ {-12} \  \mathrm{g}}{5 \times 10 ^ {-20} \ \mathrm{g}} = 3 \times 10 ^ {6}</script>


<h4>1細胞あたりの細胞質中のタンパク質の個数</h4>

<script type="math/tex; mode=display">3 \times 10 ^ {6} \times \frac{2}{3} = 2 \times 10 ^ {6}</script>


<h4>1細胞あたりの膜タンパク質の個数</h4>

<script type="math/tex; mode=display">3 \times 10 ^ {6} \times \frac{1}{3} = 1 \times 10 ^ {6}</script>


<h4>1細胞あたりのリボソームの個数</h4>

<script type="math/tex; mode=display">\frac{0.2 \times 0.15 \times 10 ^ {-12} \ \mathrm{g}}{2.5 \times 10 ^ {6} \ \mathrm{Da} \times \frac{1}{3}} \times \frac{1}{1.6 \times 10 ^ {-24} \ \mathrm{g/Da}} = 22,500 \approx 20,000</script>


<h4>1細胞あたりの脂質分子の個数</h4>

<script type="math/tex; mode=display">N_{\mathrm{lipid}}\approx \frac{4\times 0.5\times 6 \times 10 ^ {6} \ \mathrm{nm ^ 2}}{0.5 \ \mathrm{nm ^ 2}} = 2.4 \times 10 ^ {7} \approx 2 \times 10 ^ {7}</script>


<h4>1細胞あたりの水分子の個数</h4>

<script type="math/tex; mode=display">N_{\mathrm{H_{2}O}} \approx \frac{0.7 \times 10 ^ {-12} \ \mathrm{g}}{18 \ \mathrm{g/mol}} \times 6 \times 10 ^ {23} \ \mathrm{molecules/mol} = 2.33 \times 10 ^ {10}\approx 2 \times 10 ^ {10}</script>


<h4>1細胞あたりの無機イオンの個数</h4>

<script type="math/tex; mode=display">N_{\mathrm{ions}} \approx \frac{100 \times 10 ^ {-3} \ \mathrm{mol} \times 6 \times 10 ^ {23} \ \mathrm{molecules/mol}}{10 ^ {15} \ \mathrm{\mu m ^ {3}}} \times 1 \ \mathrm{\mu m ^ {3}} = 6 \times 10 ^ {7}</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「細胞の物理生物学」読書ノート：第1章]]></title>
    <link href="http://yagays.github.io/blog/2013/12/05/pboc-01/"/>
    <updated>2013-12-05T07:43:00+09:00</updated>
    <id>http://yagays.github.io/blog/2013/12/05/pboc-01</id>
    <content type="html"><![CDATA[<ul>
<li>読書ノートまとめ：<a href="http://yagays.github.io/blog/2013/11/30/archive-physical-biology-of-the-cell/">http://yagays.github.io/blog/2013/11/30/archive-physical-biology-of-the-cell/</a></li>
</ul>


<h4>ひとこと</h4>

<p>第1章では，本書を読み進める上で必要になる道具や考え方がいくつも登場する．生命現象の認識であったり，幾つかの要素に分解するといったことは，生物現象を物理に当てはめて理解するという型にはめるための枠作りと言える．</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4320057163" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=0815344503" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<h2>第1章 なぜ？―数を通して見た生命</h2>

<ul>
<li><p>生物学のデータの背景にあるモデルを構築し理解する</p>

<ul>
<li>モデルは問題の複雑さや詳細をある程度切り捨てる</li>
<li>現象をある程度正確に予測できるようなモデルを立てる</li>
</ul>
</li>
<li><p>定量的なモデル</p>

<ul>
<li>定量的なデータには定量的なモデルが必要になる</li>
<li>定量的なモデルは，生物学の問題について実験で検証可能な予測をする</li>
<li>ある入力が変わった時，特定の生物学的な出力変数がどのように変わるかを定量的に測定することができるならば，そのデータの解釈も定量的に行う必要がある</li>
</ul>
</li>
</ul>


<h3>3つの「事実」</h3>

<ol>
<li>自分で確かめることができること

<ul>
<li>e.g. 細胞はタンパク質を含んでいる</li>
</ul>
</li>
<li>異なる独立の実験手法によって繰り返し確かめられたこと

<ul>
<li>e.g. 細胞においてリボソームがタンパク質を合成する</li>
</ul>
</li>
<li>生物学的な観察による説得力のある説明ではあるが，証明されていないか論争中の仮説に基づいている

<ul>
<li>e.g. 細胞内のミトコンドリアは元は独立して生きていた細菌であり，真核細胞の祖先との細胞内共生によって今日に至る</li>
</ul>
</li>
</ol>


<h3>生物を作る4つの要素</h3>

<ul>
<li>高分子 Macromolecule

<ul>
<li>タンパク質 Protein</li>
<li>糖 Carbohydrate</li>
<li>脂質 Lipid</li>
<li>核酸 Nucleic acid</li>
</ul>
</li>
</ul>


<h3>理想化としてのモデル</h3>

<p>高度に複雑な生物対象から抽象と単純化によって有用な洞察を得るには，「一つ」の簡単なモデルに着目する</p>

<ul>
<li>ある特定の側面を物語る重要な性質を選ぶ</li>
<li><p>問題のどの特徴を無視することができるかを考える</p></li>
<li><p>どんな対象でも良い</p>

<ul>
<li>DNA</li>
<li>タンパク質</li>
<li>細胞膜</li>
<li>大腸菌</li>
<li>溶液</li>
</ul>
</li>
</ul>


<h3>イラストとモデル</h3>

<ul>
<li>図式化 Schematize

<ul>
<li>重要な概念を説明するモデルをイラストとして表現</li>
<li>何が重要かを，間接的あるいは直接的に表現</li>
</ul>
</li>
</ul>


<h3>定量的モデルの数理化</h3>

<ul>
<li><p>e.g. Lacリプレッサー</p>

<ul>
<li>始めに思いつく大雑把なイメージ：Lacの近くに何かくっつくとDNAループを作って遺伝子が働かなくなるらしい．あと，くっつく場所との距離によって遺伝子の強さに違いがあって，なんか距離に応じて周期的っぽい</li>
<li>そこから，このデータをきちんと定量的に測定して，定量的モデルを立てる</li>
</ul>
</li>
<li><p>e.g. バネとしての振る舞い</p>

<ul>
<li>イメージ：中心からズレるとだんだん戻る力が強くなる</li>
<li>定量的なモデル：平衡位置からずらした程度に比例した復元力<script type="math/tex">\mathrm{Energy}=\frac{1}{2}kx ^ 2 </script></li>
</ul>
</li>
<li><p>中心からの距離が小さい時に線形近似できるというメリットもある</p></li>
</ul>


<p>ただのバネの伸び縮みをモデル化しただけだけれども，バネの振る舞いに代表されるような単純な調和振動子モデルは，生物学の現象の様々なケースに適応することができる</p>

<ul>
<li>光ピンセットのトラップの中心に引っ張られる分子</li>
<li>梁の曲がり</li>
<li>DNAの曲がり</li>
<li>泳ぐ精子の鞭毛の拍動</li>
<li>細胞表面の膜のゆらぎ</li>
<li>エネルギーランドスケープ上の分子</li>
<li>時間とともに発現の程度を変える遺伝子ネットワーク</li>
</ul>


<h3>見積もりの役割</h3>

<ul>
<li>生物学的な構造と仮説に関する数の感覚を掴む

<ul>
<li>定量的な直感</li>
</ul>
</li>
</ul>


<p><strong>（「Guesstimation」と「次元解析」は第2版から追記された箇所．（PBOC 2nd P.27） ）</strong></p>

<h3>Guesstimation</h3>

<ul>
<li>見積もり・フェルミ推定

<ul>
<li>幾何平均 Geometric mean</li>
<li>下限と上限から幾何平均<script type="math/tex">\sqrt{x _ {lower} \times x _ {upper}}</script>を取る</li>
<li>e.g. だいたい10nmより小さくはならないし100nmよりは大きくならないだろうと予測される場合：<script type="math/tex"> \sqrt{10 \times 100}= 31.62278 </script>だから，だいたい約30nmくらい</li>
<li>文章中で紹介されている&#8221;Guesstimation by Weinstein and Adam&#8221;とは以下の本のことだろう．日本語訳として「サイエンス脳のためのフェルミ推定力養成ドリル」という題で出版されている</li>
</ul>
</li>
</ul>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B003TSEL9G" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4822283690" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>次元解析 Dimensional analysis</h3>

<ul>
<li>関係してくる変数の次元を上手く組み合わせて，目的の変数の次元に揃える</li>
</ul>


<p>モルフォゲン勾配の場合</p>

<ul>
<li>Length scale : <script type="math/tex"> \lambda </script>

<ul>
<li>[Length]</li>
</ul>
</li>
<li>Diffusion constant : <script type="math/tex"> D </script>

<ul>
<li>[Length]<sup>2</sup> / [Time]</li>
</ul>
</li>
<li>mean lifetime : <script type="math/tex">\tau </script>

<ul>
<li>[Time]</li>
</ul>
</li>
</ul>


<p>Diffusion constant（拡散係数）とmean lifetime（モルフォゲン分子の平均寿命）を上手く組み合わせてLength scaleの単位を表そうと思ったら，<script type="math/tex">\sqrt{D \tau} </script>になる．こうすれば，変数の性質を知らなかったとしても数式を立てることができる．</p>

<ul>
<li>注：平均寿命が分かりにくければ，モルフォゲンの時間あたりの分解率<script type="math/tex">\alpha </script>の逆数だと思えば良いだろう（<script type="math/tex">\tau = 1/\alpha </script>）

<ul>
<li>&#8220;<a href="http://dev.biologists.org/content/137/14/2253.long">Modelling the Bicoid gradient</a>&#8220;のBox3参照</li>
</ul>
</li>
<li>モルフォゲンの濃度勾配に関しては，英語版第2版の20章で詳しく述べられる</li>
</ul>


<h3>モデリングにおける4つの間違い</h3>

<ul>
<li>不適切なタイプの物理モデルを使った失敗</li>
<li>「ピックアップトラックに積み込むことのできる荷物の量は何時間か？」といった問題設定</li>
<li>システムの詳細を十分に考慮していない失敗

<ul>
<li>大腸菌の泳ぐ速度：ゆらぎを考慮していない</li>
<li>失敗というより不適切</li>
</ul>
</li>
<li>不適切な仮説を置いたモデルによる失敗

<ul>
<li>大腸菌の泳ぐ速度にブラウン運動を考慮していない</li>
</ul>
</li>
<li>実験にブレイクスルーをもたらす失敗

<ul>
<li>新しい科学的発見をするチャンス！</li>
</ul>
</li>
</ul>


<h3>Rules of Thumb</h3>

<p>物理生物学者として見積もりするならこれくらいは覚えておくべき基本的な数字（テキストの表参照）</p>

<ul>
<li>BioNumbers

<ul>
<li><a href="http://bionumbers.hms.harvard.edu/">BioNumbers - The Database of Useful Biological Numbers</a></li>
<li>今後テキストでたびたび登場するBNIDとは，BioNumber IDのこと</li>
</ul>
</li>
</ul>


<h3>まとめ</h3>

<p>物理学の定量的な思考を生物学に適用するために必要となるスキル</p>

<ul>
<li>基礎的な物理学のモデルによってシステムを記述する：モデル化するスキル</li>
<li>システムに対する認識が適切で現実的かどうかをチェックする：定量的見積もりを行うスキル</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「細胞の物理生物学」読書ノート：序文]]></title>
    <link href="http://yagays.github.io/blog/2013/12/04/pboc-00/"/>
    <updated>2013-12-04T08:56:00+09:00</updated>
    <id>http://yagays.github.io/blog/2013/12/04/pboc-00</id>
    <content type="html"><![CDATA[<ul>
<li>読書ノートまとめ：<a href="http://yagays.github.io/blog/2013/11/30/archive-physical-biology-of-the-cell/">http://yagays.github.io/blog/2013/11/30/archive-physical-biology-of-the-cell/</a></li>
</ul>


<h4>ひとこと</h4>

<p>このボルヘスの短編に本書の姿勢というものが凝縮されている．地図と科学を対応付けて考えるならば，分野の細分化が進行した現在におけるそれぞれの科学の役割というものを憂う一方で，地図に代表される抽象化の中にある本質的な役割と設計方法について再考するきっかけとなる．</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4320057163" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=0815344503" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<h2>序文</h2>

<h3>学問の厳密さについて - On Exactitude in Science</h3>

<p>日本語1版では序文冒頭，英語2版では第1章の前半で出てくる文章．これはホルヘ・ルイス・ボルヘスとアドルフォ・ビオイ＝カサーレスの書いた短編．訳注にあるように，架空の著者による架空の本の抜粋であり，二人の書いた短編自体にこの前後は存在しない．</p>

<ul>
<li><a href="http://en.wikipedia.org/wiki/On_Exactitude_in_Science">On Exactitude in Science - Wikipedia, the free encyclopedia</a></li>
<li><a href="http://www.shobunsha.co.jp/?p=860">ボルヘス怪奇譚集 | 晶文社</a></li>
</ul>


<p>書籍の形として翻訳されたものは，「ボルヘス怪奇譚集」や「汚辱の世界史」，「澁澤龍彦文学館10　迷宮の箱」などで読めるようだ．</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4794912617" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4003279263" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=448020010X" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>物理を使って生物を視る4つのステップ</h3>

<ol>
<li>生物の現象を観察する</li>
<li>オーダーの見積もりを行う</li>
<li>単純なモデルを適用する</li>
<li>モデルを洗練する</li>
</ol>


<h3>本書の全体構成</h3>

<ul>
<li>第1部：「生命とは」

<ul>
<li>主に生物の現象を扱う</li>
</ul>
</li>
<li>第2部：「平衡状態としての生命」

<ul>
<li>時間を考慮しないような定量的モデルを使ってとくことの出来る問題を扱う</li>
</ul>
</li>
<li>第3部：「非平衡状態としての生命」

<ul>
<li>時間に依存したシステムのダイナミックな振る舞いや複雑さを扱う</li>
</ul>
</li>
<li>第4部：「生命の意味」

<ul>
<li>生物システムのさまざまな情報処理について説明する</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ライフサイエンス分野のためのプレプリント・サーバ bioRxiv]]></title>
    <link href="http://yagays.github.io/blog/2013/12/02/biorxiv/"/>
    <updated>2013-12-02T16:40:00+09:00</updated>
    <id>http://yagays.github.io/blog/2013/12/02/biorxiv</id>
    <content type="html"><![CDATA[<p><a href="http://biorxiv.org/"><img src="http://dl.dropboxusercontent.com/u/142306/b/biorxiv.png" alt="" /></a></p>

<p><a href="http://biorxiv.org/">Home | bioRxiv</a></p>

<p>論文のプレプリント・サーバといえば<a href="http://arxiv.org/">arXiv</a>が有名だが，その生物学バージョンが&#8221;<a href="http://biorxiv.org/">bioRxiv</a>&#8220;（バイオアーカイブ）としてスタートしている．これまでにもarXivにおいて生物学といえばQuantitative Biology（q-bio）という分類があったが，今回作られたbioRxivはそれを補完するような形でライフサイエンス分野に絞って作られているようだ．生物学という括りの中で，以下の24分野に分かれている．また，2013年12月2日時点では59の論文が投稿されている．</p>

<ul>
<li>Biochemistry</li>
<li>Bioengineering</li>
<li>Bioinformatics</li>
<li>Biophysics</li>
<li>Cancer Biology</li>
<li>Cell Biology</li>
<li>Developmental Biology</li>
<li>Ecology</li>
<li>Evolutionary Biology</li>
<li>Genetics</li>
<li>Genomics</li>
<li>Immunology</li>
<li>Microbiology</li>
<li>Molecular Biology</li>
<li>Molecular Medicine</li>
<li>Neuroscience</li>
<li>Paleontology</li>
<li>Pathology</li>
<li>Physiology</li>
<li>Plant Biology</li>
<li>Scientific Communication</li>
<li>Synthetic Biology</li>
<li>Systems Biology</li>
<li>Zoology</li>
</ul>


<p>それぞれの論文のページにはアブストや投稿履歴，DOIなどがのarXivにも備わっている情報の他に，コメントを付けられる機能がある．こういうのは最近のオープンアクセス誌の流れだろうか．また，arXivには無いbioRxivの大きな特徴として，それぞれの論文にクリエイティブ・コモンズのライセンスが付けられているということがある．これは論文著者が投稿時に幾つかの選択肢の中から好きなライセンスを付けられるようになっており，CC-BYからno reuseまでかなり幅広く用意されているようだ．</p>

<blockquote><p>Authors retain copyright and choose from several distribution/reuse options under which to make the article available (CC-BY, CC-BY-NC, CC-BY-ND, CC-BY-NC-ND, or no reuse). By posting on bioRxiv, authors explicitly consent to text mining of their work (e.g., by search engines or researchers).</p>

<p><a href="http://biorxiv.org/about-biorxiv">http://biorxiv.org/about-biorxiv</a></p></blockquote>

<p>個人的には生物学の分野だとあまりプレプリント・サーバには馴染みがないように思えるが，これから様々な使い方が広がっていくのだろうか．なお，主要な論文誌のプレプリント・サーバ利用のポリシーは以下に詳しくまとまっている．</p>

<ul>
<li><a href="http://en.wikipedia.org/wiki/List_of_academic_journals_by_preprint_policy">List of academic journals by preprint policy - Wikipedia, the free encyclopedia</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pythonで遺伝的アルゴリズムを動かすPyevolveを試してみた]]></title>
    <link href="http://yagays.github.io/blog/2013/12/01/pyevolve-genetic-algorithm/"/>
    <updated>2013-12-01T09:00:00+09:00</updated>
    <id>http://yagays.github.io/blog/2013/12/01/pyevolve-genetic-algorithm</id>
    <content type="html"><![CDATA[<p>課題のために遺伝的アルゴリズムを使う必要があったので，Pythonで遺伝的アルゴリズムを動かすことのできるライブラリPyevolveを試してみた．</p>

<h3>始めの一歩</h3>

<p>動かし方はとてもシンプルなので，公式ドキュメントのGet Startedをざっと見たあとにExampleでどういう使い方ができるのかを個別に見ていけばいいと思う．</p>

<ul>
<li><a href="http://pyevolve.sourceforge.net/getstarted.html">Get Started - Tutorial — Pyevolve v0.5 documentation</a></li>
<li><a href="http://pyevolve.sourceforge.net/examples.html">Examples — Pyevolve v0.5 documentation</a></li>
</ul>


<p>日本語資料なら，自分が確認した限りでは以下のサイトが一番詳しい．</p>

<ul>
<li><a href="http://d.hatena.ne.jp/mFumi/20100917/1284724566">Pyevolveで学ぶ遺伝的アルゴリズム - mfumiの日記</a></li>
</ul>


<h3>Pyevolveの基本的な使い方</h3>

<h4>ゲノムインスタンスの生成</h4>

<p>ゲノムの構造はバイナリや1次元配列，2次元配列，木構造などを取ることができ，初期値が取りうる値の幅なども決めることができる．以下のコードでは，値が15個あって最小値0，最大値100というゲノムを作成している．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">genome</span> <span class="o">=</span> <span class="n">G1DList</span><span class="o">.</span><span class="n">G1DList</span><span class="p">(</span><span class="mi">15</span><span class="p">)</span>
</span><span class='line'><span class="n">genome</span><span class="o">.</span><span class="n">setParams</span><span class="p">(</span><span class="n">rangemin</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">rangemax</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h4>ゲノムの初期化，突然変異の設定</h4>

<p>次に，ゲノムインスタンスを初期化して突然変異の分布などを指定する．最初に指定したゲノムの構造に従って指定する必要があるが，パラメータはだいたい読んだ通り．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">genome</span><span class="o">.</span><span class="n">initializator</span><span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="n">Initializators</span><span class="o">.</span><span class="n">G1DListInitializatorReal</span><span class="p">)</span>
</span><span class='line'><span class="n">genome</span><span class="o">.</span><span class="n">mutator</span><span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="n">Mutators</span><span class="o">.</span><span class="n">G1DListMutatorRealGaussian</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>値が整数の場合は&#8221;G1DListInitializatorInteger&#8221;や&#8221;G1DListMutatorIntegerGaussian&#8221;が用意されている．</p>

<ul>
<li><a href="http://pyevolve.sourceforge.net/module_mutators.html">Mutators – mutation methods module — Pyevolve v0.5 documentation</a></li>
</ul>


<h4>評価関数をセット</h4>

<p>評価関数eval_funcを作って，ゲノムインスタンスに指定する．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">def</span> <span class="nf">eval_func</span><span class="p">(</span><span class="n">chromosome</span><span class="p">):</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="o">...</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">genome</span><span class="o">.</span><span class="n">evaluator</span><span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="n">eval_func</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h4>GA Engineを作成する</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">ga</span> <span class="o">=</span> <span class="n">GSimpleGA</span><span class="o">.</span><span class="n">GSimpleGA</span><span class="p">(</span><span class="n">genome</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h4>選択方式などのパラメータを指定する</h4>

<p>デフォルトでGA Engineを動かした場合，世代数や集団数は以下のようになる．</p>

<ul>
<li>100 世代</li>
<li>集団サイズ：80個体</li>
<li>ランキング選択</li>
</ul>


<p>これらを変更するには，以下のようにパラメータをセットする．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">ga</span><span class="o">.</span><span class="n">selector</span><span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="n">Selectors</span><span class="o">.</span><span class="n">GRouletteWheel</span><span class="p">)</span>
</span><span class='line'><span class="n">ga</span><span class="o">.</span><span class="n">setGenerations</span><span class="p">(</span><span class="mi">5000</span><span class="p">)</span>
</span><span class='line'><span class="n">ga</span><span class="o">.</span><span class="n">setMutationRate</span><span class="p">(</span><span class="mf">0.1</span><span class="p">)</span>
</span><span class='line'><span class="n">ga</span><span class="o">.</span><span class="n">setPopulationSize</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>選択方法は，その他にもランキング方式やトーナメント方式などが用意されている．</p>

<ul>
<li><a href="http://pyevolve.sourceforge.net/module_selectors.html">Selectors – selection methods module — Pyevolve v0.5 documentation</a></li>
</ul>


<h4>GA Engineの実行</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">ga</span><span class="o">.</span><span class="n">evolve</span><span class="p">(</span><span class="n">freq_stats</span><span class="o">=</span><span class="mi">250</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>実行中はfreq_statsで指定した世代ごとに以下のようなログが出力される．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">Gen</span><span class="o">.</span> <span class="mi">1</span> <span class="p">(</span><span class="mf">0.02</span><span class="o">%</span><span class="p">):</span> <span class="n">Max</span><span class="o">/</span><span class="n">Min</span><span class="o">/</span><span class="n">Avg</span> <span class="n">Fitness</span><span class="p">(</span><span class="n">Raw</span><span class="p">)</span> <span class="p">[</span><span class="mf">23104.07</span><span class="p">(</span><span class="mf">27490.00</span><span class="p">)</span><span class="o">/</span><span class="mf">15107.82</span><span class="p">(</span><span class="mf">10386.00</span><span class="p">)</span><span class="o">/</span><span class="mf">19253.39</span><span class="p">(</span><span class="mf">19253.39</span><span class="p">)]</span>
</span><span class='line'><span class="n">Gen</span><span class="o">.</span> <span class="mi">250</span> <span class="p">(</span><span class="mf">5.00</span><span class="o">%</span><span class="p">):</span> <span class="n">Max</span><span class="o">/</span><span class="n">Min</span><span class="o">/</span><span class="n">Avg</span> <span class="n">Fitness</span><span class="p">(</span><span class="n">Raw</span><span class="p">)</span> <span class="p">[</span><span class="mf">9486.89</span><span class="p">(</span><span class="mf">15212.00</span><span class="p">)</span><span class="o">/</span><span class="mf">6883.91</span><span class="p">(</span><span class="mf">3184.00</span><span class="p">)</span><span class="o">/</span><span class="mf">7905.74</span><span class="p">(</span><span class="mf">7905.74</span><span class="p">)]</span>
</span><span class='line'><span class="n">Gen</span><span class="o">.</span> <span class="mi">500</span> <span class="p">(</span><span class="mf">10.00</span><span class="o">%</span><span class="p">):</span> <span class="n">Max</span><span class="o">/</span><span class="n">Min</span><span class="o">/</span><span class="n">Avg</span> <span class="n">Fitness</span><span class="p">(</span><span class="n">Raw</span><span class="p">)</span> <span class="p">[</span><span class="mf">8749.57</span><span class="p">(</span><span class="mf">15233.00</span><span class="p">)</span><span class="o">/</span><span class="mf">6518.94</span><span class="p">(</span><span class="mf">3085.00</span><span class="p">)</span><span class="o">/</span><span class="mf">7291.31</span><span class="p">(</span><span class="mf">7291.31</span><span class="p">)]</span>
</span><span class='line'><span class="n">Gen</span><span class="o">.</span> <span class="mi">750</span> <span class="p">(</span><span class="mf">15.00</span><span class="o">%</span><span class="p">):</span> <span class="n">Max</span><span class="o">/</span><span class="n">Min</span><span class="o">/</span><span class="n">Avg</span> <span class="n">Fitness</span><span class="p">(</span><span class="n">Raw</span><span class="p">)</span> <span class="p">[</span><span class="mf">8259.84</span><span class="p">(</span><span class="mf">14274.00</span><span class="p">)</span><span class="o">/</span><span class="mf">6173.50</span><span class="p">(</span><span class="mf">3073.00</span><span class="p">)</span><span class="o">/</span><span class="mf">6883.20</span><span class="p">(</span><span class="mf">6883.20</span><span class="p">)]</span>
</span><span class='line'><span class="p">[</span><span class="err">…</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>




<br/>


<h3>pyevolve_graph.pyの使い方</h3>

<p>Pyevolveには，イテレーションの変化を可視化する便利なスクリプトがある．</p>

<ul>
<li><a href="http://pyevolve.sourceforge.net/graphs.html">Graphical Analysis - Plots — Pyevolve v0.5 documentation</a></li>
</ul>


<h4>1. DBAdaptersをインポートする</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">pyevolve</span> <span class="kn">import</span> <span class="n">DBAdapters</span>
</span></code></pre></td></tr></table></div></figure>


<h4>2. 以下のスクリプトを追記する</h4>

<p>挿入する場所はGSimpleGA.GSimpleGA() のすぐ後．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">ga</span> <span class="o">=</span> <span class="n">GSimpleGA</span><span class="o">.</span><span class="n">GSimpleGA</span><span class="p">(</span><span class="n">genome</span><span class="p">)</span>
</span><span class='line'><span class="n">sqlite_adapter</span> <span class="o">=</span> <span class="n">DBAdapters</span><span class="o">.</span><span class="n">DBSQLite</span><span class="p">(</span><span class="n">identify</span><span class="o">=</span><span class="s">&quot;ex1&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">ga</span><span class="o">.</span><span class="n">setDBAdapter</span><span class="p">(</span><span class="n">sqlite_adapter</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>これで，GAの実行後にpyevolve.dbというファイルが作成される．</p>

<h4>3. pyevolve_graph.pyを実行する</h4>

<p>あとはpyevolve_graph.pyを実行する．可視化するグラフのタイプなどが選べるようになっているので，その辺りのパラメータは<a href="http://pyevolve.sourceforge.net/graphs.html">マニュアル</a>を参考．</p>

<p>例えば，以下のようなグラフを出力することができる．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="err">$</span> <span class="n">pyevolve_graph</span><span class="o">.</span><span class="n">py</span> <span class="o">-</span><span class="n">i</span> <span class="n">ex1</span> <span class="o">-</span><span class="mi">3</span> <span class="o">-</span><span class="n">g</span> <span class="mi">1</span><span class="p">:</span><span class="mi">500</span> <span class="o">-</span><span class="n">o</span> <span class="n">pyevolve_graph</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dl.dropboxusercontent.com/u/142306/b/pyevolve_graph.png" alt="" /></p>

<h3>最後に：Pythonで遺伝的アルゴリズムをするなら</h3>

<p>最後に残念なお知らせだが，Pyevolveは少なくとも2年前から開発が止まっている．Pyevolve安定版0.5で公式に対応しているPythonのVersionも2.6となっている（2.7では動いた．3.x系は不明）．</p>

<ul>
<li><a href="https://github.com/perone/Pyevolve">perone/Pyevolve</a></li>
<li><a href="https://pypi.python.org/pypi/Pyevolve">Pyevolve 0.5 : Python Package Index</a></li>
</ul>


<p>どうやら現在ではDEAPというライブラリが精力的に開発されているようだ．まだオンラインの資料は少ないものの，3.x系などの対応を考えるならこちらを使うのも手だろう．</p>

<ul>
<li><a href="http://stackoverflow.com/questions/16739118/genetic-algorithms-and-multi-objectives-optimization-on-python-libraries-tools">Genetic Algorithms and multi-objectives optimization on PYTHON : libraries/tools to use? - Stack Overflow</a></li>
<li><a href="https://code.google.com/p/deap/">deap - Distributed Evolutionary Algorithms in Python - Google Project Hosting</a></li>
</ul>


<p>もし遺伝的アルゴリズムをPythonを使って自分で実装したい場合は，<a href="http://www.amazon.co.jp/gp/product/4873113644/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4873113644&linkCode=as2&tag=yagays-22">集合知プログラミング</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=yagays-22&l=as2&o=9&a=4873113644" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />11章「進化する知性」がお薦めできる．基本的なアルゴリズムに加えて，交叉や突然変異の書き方であったり様々なデータタイプに対応したりと，実装も丁寧に解説されている．</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4873113644" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>動作環境</h3>

<ul>
<li>Mac OS X 10.8.5</li>
<li>Python 2.7.6</li>
<li>Pyevolve 0.5</li>
</ul>


<h3>参考</h3>

<ul>
<li><a href="http://pyevolve.sourceforge.net/index.html">Welcome to Pyevolve documentation ! — Pyevolve v0.5 documentation</a></li>
<li><a href="http://pyevolve.sourceforge.net/0_6rc1/index.html">Welcome to Pyevolve documentation ! — Pyevolve v0.6rc1 documentation</a></li>
<li><a href="http://d.hatena.ne.jp/mFumi/20100917/1284724566">Pyevolveで学ぶ遺伝的アルゴリズム - mfumiの日記</a></li>
<li><a href="http://d.hatena.ne.jp/gepuro/20120102/1325515592">pyevolveの使い方メモ - gepuroの日記</a></li>
<li><a href="http://d.hatena.ne.jp/pashango_p/20090601/1243850103">pyevolveによる遺伝的アルゴリズム(1) - Pashango’s Blog</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「細胞の物理生物学」読書ノート：アーカイブ]]></title>
    <link href="http://yagays.github.io/blog/2013/11/30/archive-physical-biology-of-the-cell/"/>
    <updated>2013-11-30T09:20:00+09:00</updated>
    <id>http://yagays.github.io/blog/2013/11/30/archive-physical-biology-of-the-cell</id>
    <content type="html"><![CDATA[<h3>「細胞の物理生物学」&#8221;Physical Biology of the Cell&#8221;</h3>

<p>本書は，2008年11月にGarland Science社から出版された&#8221;Physical Biology of the Cell&#8221;の翻訳版である．学部または大学院における基礎コース向けに作られた本書は，細胞生物学を生物物理学の側面から再構成するという大胆な内容となっている．すなわち，細胞内の機能や性質ごとに物理学の知見を適用するというこれまでの体系とは違い，物理モデルや物理法則から生物というものを捉えたときに，細胞内の高分子の挙動や生物的な構造をどのように分類できどのように認識できるだろうかという観点から，生物物理学を構築し直すということである．本書のタイトルに&#8221;Biophysics&#8221;ではなく&#8221;Physical biology&#8221;と付けていることからも，その意図が伝わってくる．全20章1000ページちかい分量の本書の中には，バネの運動を表すような単純な調和振動子から化学的な反応速度論のモデル，流体力学や統計モデルなどの基本的な物理モデルが含まれている．また，扱う生物現象としてもDNAから酵素反応，生体膜，細胞骨格，分子モーターなど幅広くカバーしている．</p>

<p>また，本書の大きな特徴として挙げられるのが「見積もり」という概念である．定量的な物理モデルを立てた上で生物学の現象に対する定量的な議論を行うためには，オーダーの見積もりが重要になる．見積もる値は，細胞内に存在するあるタンパク質の個数であったり，平衡時に観測される化合物の濃度，大腸菌が泳ぐときの速度など様々である．それらの値は，実際に立てたモデルを検証するときに役に立つばかりでなく，目にみえない世界を想像するときの直感的な感覚としても非常に有用となる．このように，単純化した上でオーダーレベルの数字に落としこむことで，定量的な解釈の手助けとなる．本書では，こういった見積りの具体例が各所に散りばめられており，各章の最後に付属する章末問題でも多数取り扱われている．</p>

<p>なお，訳書は1版をもとに翻訳されたものだが，原書は2012年10月に第2版が出ている．第1版では全20章だった構成が第2版では全22章となっており，第2版では第3部に&#8221;Light and Life&#8221;という章が追加されたほか，第4部の1章が再構成され2章に分かれている．</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4320057163" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=0815344503" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>読書ノートまとめ</h3>

<ul>
<li>序文

<ul>
<li><a href="http://yagays.github.io/blog/2013/12/04/pboc-00/">「細胞の物理生物学」読書ノート：序文</a></li>
</ul>
</li>
<li>第1章

<ul>
<li><a href="http://yagays.github.io/blog/2013/12/05/pboc-01/">「細胞の物理生物学」読書ノート：第1章</a></li>
</ul>
</li>
<li>第2章

<ul>
<li><a href="http://yagays.github.io/blog/2013/12/06/pboc-02-1/">「細胞の物理生物学」読書ノート：第2章その1</a>

<ul>
<li>大腸菌のサイズの見積もり</li>
</ul>
</li>
<li><a href="http://yagays.github.io/blog/2013/12/10/pboc-02-2/">「細胞の物理生物学」読書ノート：第2章その2</a>

<ul>
<li>第2章の概要</li>
</ul>
</li>
</ul>
</li>
<li>第3章

<ul>
<li><a href="http://yagays.github.io/blog/2014/01/17/pboc-03">「細胞の物理生物学」読書ノート：第3章</a>

<ul>
<li>第3章の概要</li>
</ul>
</li>
</ul>
</li>
</ul>


<h3>オンラインリソース</h3>

<ul>
<li><a href="http://microsite.garlandscience.com/pboc2/">Home - Physical Biology of the Cell</a>

<ul>
<li>公式のサポートページ．図表やデータセット，コードや動画等が公開されている</li>
</ul>
</li>
<li><a href="http://www.garlandscience.com/product/isbn/0815341636">Garland Science - Book: Physical Biology of the Cell + 1</a>

<ul>
<li>Garland Scienceの第1版紹介ページ．Chp.2がサンプルでダウンロードできる．</li>
</ul>
</li>
<li><a href="http://www.garlandscience.com/product/isbn/9780815344506">Garland Science - Book: Physical Biology of the Cell + 2</a>

<ul>
<li>Garland Scienceの第2版紹介ページ．Chp.17がサンプルでダウンロードできる．</li>
</ul>
</li>
<li><a href="http://www.taguchi.bio.titech.ac.jp/paper/column/assets/pc6_bookreview_PBoC.pdf">pc6_bookreview_PBoC.pdf</a>（田口英樹氏による書評，PDF）</li>
<li><a href="http://web.sfc.keio.ac.jp/~t10078si/rindoku/rindoku.html">細胞の物理生物学 輪読ノート</a></li>
<li><p><a href="http://www.anat1.med.kyushu-u.ac.jp/reading/physical_-biology_of_the_cell/">Physical Biology of the Cell 輪読会 | 九州大学大学院医学研究院　系統解剖学分野</a></p></li>
<li><p><a href="http://bionumbers.hms.harvard.edu/">BioNumbers - The Database of Useful Biological Numbers</a></p></li>
</ul>


<h3>注意</h3>

<p>上記リンクを含むこの読書ノートは個人的なメモであって，章末問題などの解答の正確さや厳密さを保証するものではないことをご注意下さい．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac OS X Mavericks環境構築記録]]></title>
    <link href="http://yagays.github.io/blog/2013/11/15/mac-mavericks-setting-2013/"/>
    <updated>2013-11-15T17:16:00+09:00</updated>
    <id>http://yagays.github.io/blog/2013/11/15/mac-mavericks-setting-2013</id>
    <content type="html"><![CDATA[<p>新しい環境が手に入ったので，Mac OS X Maverickでクリーンインストール状態から環境構築してみた．</p>

<h2>環境</h2>

<ul>
<li>MacBook Air Mid 2011</li>
<li>Mac OS X 10.9 Maverick</li>
</ul>


<h3>システム環境設定</h3>

<h4>・Dock</h4>

<ul>
<li>Dockを自動的に隠す/表示：On</li>
</ul>


<h4>セキュリティとプライバシー</h4>

<ul>
<li>ファイアウォール：On</li>
</ul>


<h4>・Spotlight</h4>

<ul>
<li>Spotlightメニューのキーボードショートカット：Ctrl-Shift Space</li>
<li><a href="http://d.hatena.ne.jp/zariganitosh/20121024/dictionary_higher_in_spotlight_result">Spotlightで辞書検索の優先順位を設定する - ザリガニが見ていた&#8230;。</a></li>
</ul>


<h4>・省エネルギー</h4>

<ul>
<li>バッテリー・電源アダプタ

<ul>
<li>コンピュータのスリープ：しない</li>
<li>ディスプレイのスリープ：30分</li>
</ul>
</li>
</ul>


<h4>・キーボード</h4>

<ul>
<li>キーのリピート・リピート入力認識までの時間はKeyRemap4MacBookで個別に設定

<ul>
<li>Delay Until Repeat：300 ms</li>
<li>Key Repeat：33 ms</li>
</ul>
</li>
<li>キーボード:F1，F2などのすべてのキーを標準のファンクションキーとして使用：On</li>
<li>ショートカット:キーボード:次のウィンドウを操作対象にする：Ctrl-Shift Z</li>
<li>入力ソース：Google 日本語入力</li>
</ul>


<h4>・トラックパッド</h4>

<ul>
<li>ページ間をスワイプ

<ul>
<li>3本指でスワイプ</li>
</ul>
</li>
</ul>


<h4>・共有</h4>

<ul>
<li>コンピュータ名を変更</li>
</ul>


<h4>・ユーザとグループ</h4>

<ul>
<li>Apple ID：設定</li>
</ul>


<h4>・日付と時刻</h4>

<ul>
<li><p>日付と時刻</p>

<ul>
<li>日付と時刻を自動的に設定：Apple アジア</li>
</ul>
</li>
<li><p>時計</p>

<ul>
<li>秒を表示：On</li>
<li>日付を表示：On</li>
</ul>
</li>
</ul>


<h3>ファインダー</h3>

<ul>
<li>一般:新規Finderウィンドウで次を表示：$HOME</li>
<li>詳細:すべてのファイル名拡張子を表示：On</li>
<li>詳細:拡張子を変更刷る前に警告を表示：Off</li>
<li>詳細:確実にゴミ箱を空にする：On</li>
<li>詳細:検索実行時：現在のフォルダ内を検索</li>
</ul>


<p>ホームディレクトリのフォルダを英語化</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd /System/Library/CoreServices/SystemFolderLocalizations/ja.lproj
</span><span class='line'>$ sudo mv SystemFolderLocalizations.strings SystemFolderLocalizations.strings.bak
</span><span class='line'>$ sudo cp ../en.lproj/SystemFolderLocalizations.strings .</span></code></pre></td></tr></table></div></figure>


<h3>辞書</h3>

<ul>
<li>Oxford Dicionary of English：On</li>
<li>Oxford Thesaurus of English：On</li>
<li>LSD for Dictionary（ライフサイエンス辞書）（<a href="http://lsd.pharm.kyoto-u.ac.jp/ja/index.html">現在は公開中止</a>）</li>
</ul>


<h3>フォント</h3>

<ul>
<li>Ricty

<ul>
<li>Inconsolata，Migu 1Mを事前にインストールしておく</li>
</ul>
</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo port install fontforge
</span><span class='line'>$ git clone https://github.com/yascentur/Ricty.git 
</span><span class='line'>$ cd Ricty
</span><span class='line'>$ sh ricty_generator.sh auto</span></code></pre></td></tr></table></div></figure>


<h3>ターミナル</h3>

<ul>
<li>フォント：Ricty Regular 14 pt.</li>
<li><p>テキストをアンチエイリアス処理</p></li>
<li><p>シェルの終了時：シェルが正常に終了した場合は閉じる</p></li>
</ul>


<h3>アプリケーション</h3>

<ul>
<li>1password</li>
<li>AppCleaner</li>
<li>ClamXav</li>
<li>Cytoscape</li>
<li>DaisyDisk</li>
<li>Dropbox

<ul>
<li>モノクロのメニューバーアイコンを使用</li>
</ul>
</li>
<li>Evernote</li>
<li>Fantastical

<ul>
<li>iCal.appで先にGoogleアカウントを登録しておく</li>
<li>Preference:Keyboard shortcut：Ctrl-Shift D</li>
</ul>
</li>
<li>Google Chrome</li>
<li>Google 日本語入力

<ul>
<li>一般:句読点．，</li>
<li>一般:￥キーで入力する文字：バックスラッシュ</li>
<li>入力補助:半角・全角:アルファベット:変換前文字列：半角</li>
</ul>
</li>
<li>Kobito</li>
<li>Keynote</li>
<li>KeyRemap4MacBook

<ul>
<li>Fn to Eject (Ctrl-Shift-Ejectでディスプレイを消すキーボードショートカットを使うため)</li>
</ul>
</li>
<li>LanguageSwitcher</li>
<li>LaTeXiT</li>
<li>Marked</li>
<li>nvALT</li>
<li>Pages</li>
<li>ReadKit</li>
<li>ScanSnap Manager</li>
<li>Sparrow

<ul>
<li>Format:Prefer Plain Text：On</li>
<li>Preference:General:Play sound when receiving/sending mail:Off</li>
<li>Preference:Advanced:Use Gmail shortcuts:On</li>
<li>Preference:Advanced:Delete key moves to trash:On</li>
<li>Preference:Advanced:Hide pictures:On</li>
<li>Preference:Advanced:Hide selection bar in Inbox:Off</li>
</ul>
</li>
<li>Twitter</li>
<li>Xcode</li>
<li><p>夜フクロウ</p></li>
<li><p>MenuMeters</p></li>
</ul>


<h3>MacPorts</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo port selfupdate
</span><span class='line'>$ sudo port install clojure coreutils emacs git-core imagemagick lftp nkf python27 python34 screen sshfs tig wget zsh</span></code></pre></td></tr></table></div></figure>


<h3>MacTex</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo tlmgr update --self --all</span></code></pre></td></tr></table></div></figure>


<h3>参考：過去の環境構築メモ</h3>

<ul>
<li><a href="http://d.hatena.ne.jp/yag_ays/20091130/1259564460">MacOSX環境構築メモ(随時更新) - Mad Dryfarm Wolves</a></li>
</ul>


<p>よ，4年前と全然変わってねぇ&#8230;．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[メモ：脳神経科学の基礎の基礎]]></title>
    <link href="http://yagays.github.io/blog/2013/10/31/neuroscience/"/>
    <updated>2013-10-31T06:21:00+09:00</updated>
    <id>http://yagays.github.io/blog/2013/10/31/neuroscience</id>
    <content type="html"><![CDATA[<p>少し脳神経科学の基礎を勉強する必要があったので，神経とはなんぞやというところから，電位としてニューロンが情報を伝える仕組み，あとは視覚に関しての情報処理的なところをおおまかに勉強している．深く入り込む予定はないので，関連する話を聞いたら何となく分かる程度に基礎を押さえるつもり…．きちんとまとめる必要もないので，個人的に押さえとく部分だけを復習がてら以下に列挙している．</p>

<h4>神経細胞 neuron</h4>

<ul>
<li>軸索 axon</li>
<li>樹状突起 dendrite</li>
<li>棘突起 spine</li>
<li>シナプス synapse

<ul>
<li>シナプス小胞 synaptic vesicle</li>
</ul>
</li>
<li>髄鞘 myelin sheath

<ul>
<li>ランビエー紋輪 node of Ranvier</li>
<li>シュワン細胞 Schwann cells</li>
</ul>
</li>
</ul>


<h4>グリア細胞 glial cell</h4>

<ul>
<li>マクログリア macroglia

<ul>
<li>アストロサイト astrocyte, -glia</li>
<li>オリゴデンドロサイト oligodendrocyte, -glia</li>
</ul>
</li>
<li>マイクログリア microglia</li>
</ul>


<h4>活動電位 action potential</h4>

<ul>
<li>静止膜電位 resting membrene potential</li>
<li>スパイク spike</li>
<li>オーバーシュート overshoot</li>
<li>アンダーシュートundershoot</li>
<li>過分極 hyperpolarization</li>
<li>不応期 refractory period</li>
<li>閾値 threshold</li>
</ul>


<h4>イオンチャンネル</h4>

<ul>
<li>電位依存性カリウムチャネル voltage-gated potassium channel</li>
<li>電位依存性ナトリウムチャネル voltage-gated sodium channel</li>
<li>漏洩チャネル leak channels</li>
</ul>


<h2>視覚野 Visual Cortex</h2>

<h3>第一次視覚野 Primary visual cortex</h3>

<p>(Striate cortex, V1)</p>

<ul>
<li>ハイパーコラム hypercolumn

<ul>
<li>方位円柱 orientation column</li>
<li>眼球優位円柱 ocular dominance column</li>
<li>色円柱 blob</li>
</ul>
</li>
</ul>


<p>網膜から外側膝状体へと中継された情報は，V1においても局在性を持つ</p>

<ul>
<li>トポグラフィックマッピング topographic mapping</li>
<li>自己組織化 self organization</li>
</ul>


<h3>高次視覚野 higher visual cortex</h3>

<ul>
<li><p>背側皮質視覚路 dorsal stream</p>

<ul>
<li>MT野 middle temporal lobe</li>
<li>MST野 middle super temporal lobe</li>
<li>運動の知覚</li>
</ul>
</li>
<li><p>腹側皮質視覚路 Ventral stream</p>

<ul>
<li>IT野 inferior temporal lobe</li>
<li>対象物の認識</li>
</ul>
</li>
</ul>


<h4>参考</h4>

<p>まず入門として「<a href="http://www.amazon.co.jp/gp/product/4758122016/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4758122016&linkCode=as2&tag=yagays-22">もっとよくわかる! 脳神経科学〜やっぱり脳はスゴイのだ!  (実験医学別冊 もっとよくわかる! シリーズ)</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=yagays-22&l=as2&o=9&a=4758122016" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />」を読んでいるのだけれども，かなり分かりやすくまとまっているようで良い．脳神経科学全般を基礎から網羅している形で，かなりとっつきやすい印象．今は必要な箇所だけを抜粋して読んでいるのだけれども，時間に余裕ができたら他の箇所も読んでみたい．視覚を含めた五感の仕組みであったり，感情や言語などの高次脳機能の仕組み，脳に関わる神経性の病気などの項など，色々面白そうなトピックが並んでいる．</p>

<p>脳神経科学全般を</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4758122016" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<ul>
<li><a href="http://www.med.teikyo-u.ac.jp/~ortho/med/ana/ana110.htm">第十章　一次視覚野と高次中枢</a></li>
<li><a href="http://www.cis.twcu.ac.jp/~asakawa/MathBio2010/lesson12/">視覚情報処理</a></li>
<li><a href="http://homepage.psy.utexas.edu/homepage/faculty/pillow/courses/perception09/slides/Lec05_V1.pdf">Lec05_V1.pdf</a> (pdf)</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[matplotlibで混合ガウス分布の確率密度関数をプロットする]]></title>
    <link href="http://yagays.github.io/blog/2013/10/20/gmm-matplotlib/"/>
    <updated>2013-10-20T11:22:00+09:00</updated>
    <id>http://yagays.github.io/blog/2013/10/20/gmm-matplotlib</id>
    <content type="html"><![CDATA[<p>PythonとNumpy/Scipyの練習．前回は<a href="http://yagays.github.io/blog/2013/10/18/gmm-em-numpy/">Numpyを使って混合ガウス分布のEMアルゴリズムを実装</a>で混合ガウス分布について取り扱ったので，今回は混合ガウス分布についての数式をおさらいしつつ，確率密度関数をプロットしようと思う．</p>

<h3>混合ガウス分布の概要</h3>

<p>混合ガウス分布は，複数のガウス分布の線形結合で表すことができる．</p>

<p><img src="http://chart.apis.google.com/chart?cht=tx&amp;chl=p%28%5Cbold%7Bx%7D%29%3D%5Csum_%7Bk%3D1%7D%5E%7BK%7D%5Cpi_k%5Cmathcal%7BN%7D%28%5Cbold%7Bx%7D%7C%5Cbold%7B%5Cmu%7D_k%2C%5Cbold%7B%5CSigma%7D_k%29+" alt="p(\bold{x})=\sum_{k=1}^{K}\pi_k\mathcal{N}(\bold{x}|\bold{\mu}_k,\bold{\Sigma}_k) " /></p>

<p>ここで，<img src="http://chart.apis.google.com/chart?cht=tx&amp;chl=%5Cpi_k" alt="\pi_k" />を混合係数，<img src="http://chart.apis.google.com/chart?cht=tx&amp;chl=%5Cmathcal%7BN%7D%28%5Cbold%7Bx%7D%7C%5Cbold%7B%5Cmu%7D_k%2C%5Cbold%7B%5CSigma%7D_k%29" alt="\mathcal{N}(\bold{x}|\bold{\mu}_k,\bold{\Sigma}_k)" />を混合要素と呼ぶ．混合系数は確率の条件<img src="http://chart.apis.google.com/chart?cht=tx&amp;chl=%5Csum_%7Bk%3D1%7D%5E%7BK%7D%5Cpi_k+%3D+1+" alt="\sum_{k=1}^{K}\pi_k = 1 " />および<img src="http://chart.apis.google.com/chart?cht=tx&amp;chl=0+%5Cle+%5Cpi_k+%3C+1+" alt="0 \le \pi_k &lt; 1 " />を満たす．</p>

<p>また，混合要素<img src="http://chart.apis.google.com/chart?cht=tx&amp;chl=%5Cpi_k+%3D+p%28k%29" alt="\pi_k = p(k)" />を<img src="http://chart.apis.google.com/chart?cht=tx&amp;chl=k" alt="k" />番目の混合要素が選ばれる事前確率とし，<img src="http://chart.apis.google.com/chart?cht=tx&amp;chl=%5Cmathcal%7BN%7D%28%5Cbold%7Bx%7D%7C%5Cbold%7B%5Cmu%7D_k%2C%5Cbold%7B%5CSigma%7D_k%29+" alt="\mathcal{N}(\bold{x}|\bold{\mu}_k,\bold{\Sigma}_k) " />を<img src="http://chart.apis.google.com/chart?cht=tx&amp;chl=k" alt="k" />が与えられた時の<img src="http://chart.apis.google.com/chart?cht=tx&amp;chl=x+" alt="x " />の条件付き密度とすると，<img src="http://chart.apis.google.com/chart?cht=tx&amp;chl=x+" alt="x " />の周辺分布は</p>

<p><img src="http://chart.apis.google.com/chart?cht=tx&amp;chl=p%28%5Cbold%7Bx%7D%29%3D%5Csum_%7Bk%3D1%7D%5E%7BK%7Dp%28k%29p%28%5Cbold%7Bx%7D%7Ck%29+" alt="p(\bold{x})=\sum_{k=1}^{K}p(k)p(\bold{x}|k) " /></p>

<p>で表すことができる．この<img src="http://chart.apis.google.com/chart?cht=tx&amp;chl=k+" alt="k " />の選択が，EMを用いたGMMでの隠れ変数に対応している．</p>

<h4>一次元の混合ガウス分布</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">numpy</span> <span class="kn">as</span> <span class="nn">np</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="kn">as</span> <span class="nn">plt</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">matplotlib.mlab</span> <span class="kn">as</span> <span class="nn">mlab</span>
</span><span class='line'>
</span><span class='line'><span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">linspace</span><span class="p">(</span><span class="o">-</span><span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span><span class="mi">200</span><span class="p">)</span>
</span><span class='line'><span class="n">pi_k</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([</span><span class="mf">0.3</span><span class="p">,</span><span class="mf">0.7</span><span class="p">])</span>
</span><span class='line'><span class="n">norm1</span> <span class="o">=</span> <span class="n">mlab</span><span class="o">.</span><span class="n">normpdf</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="n">norm2</span> <span class="o">=</span> <span class="n">mlab</span><span class="o">.</span><span class="n">normpdf</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">pi_k</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="n">norm1</span><span class="p">,</span><span class="n">color</span><span class="o">=</span><span class="s">&quot;blue&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">pi_k</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="n">norm2</span><span class="p">,</span><span class="n">color</span><span class="o">=</span><span class="s">&quot;blue&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">pi_k</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="n">norm1</span><span class="o">+</span><span class="n">pi_k</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="n">norm2</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dl.dropboxusercontent.com/u/142306/b/gmm_1.png" alt="gmm_1.png" /></p>

<p>今回は正規分布の確率密度関数にmatplotlibのmlab.normpdfを使ったが，scipy.statsのnorm.pdfを使うこともできる．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">numpy</span> <span class="kn">as</span> <span class="nn">np</span>
</span><span class='line'><span class="n">rom</span> <span class="n">scipy</span> <span class="kn">import</span> <span class="nn">stats</span>
</span><span class='line'><span class="n">norm1</span> <span class="o">=</span> <span class="n">stats</span><span class="o">.</span><span class="n">norm</span><span class="o">.</span><span class="n">pdf</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">loc</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span> <span class="n">scale</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="n">norm2</span> <span class="o">=</span> <span class="n">stats</span><span class="o">.</span><span class="n">norm</span><span class="o">.</span><span class="n">pdf</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">loc</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">scale</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>二次元の混合ガウス分布</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">numpy</span> <span class="kn">as</span> <span class="nn">np</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="kn">as</span> <span class="nn">plt</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">matplotlib.mlab</span> <span class="kn">as</span> <span class="nn">mlab</span>
</span><span class='line'>
</span><span class='line'><span class="n">pi_k</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([</span><span class="mf">0.3</span><span class="p">,</span><span class="mf">0.7</span><span class="p">])</span>
</span><span class='line'><span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">linspace</span><span class="p">(</span><span class="o">-</span><span class="mf">3.0</span><span class="p">,</span> <span class="mf">3.0</span><span class="p">,</span><span class="mi">200</span><span class="p">)</span>
</span><span class='line'><span class="n">y</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">linspace</span><span class="p">(</span><span class="o">-</span><span class="mf">2.0</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span><span class="mi">200</span><span class="p">)</span>
</span><span class='line'><span class="n">X</span><span class="p">,</span> <span class="n">Y</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">meshgrid</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
</span><span class='line'><span class="n">Z1</span> <span class="o">=</span> <span class="n">mlab</span><span class="o">.</span><span class="n">bivariate_normal</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">Y</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="n">Z2</span> <span class="o">=</span> <span class="n">mlab</span><span class="o">.</span><span class="n">bivariate_normal</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">Y</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="n">Z</span> <span class="o">=</span> <span class="n">pi</span><span class="o">/</span><span class="n">k</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="n">Z1</span> <span class="o">+</span> <span class="n">pi_k</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="n">Z2</span>
</span><span class='line'>
</span><span class='line'><span class="n">CS</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">contour</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">Y</span><span class="p">,</span> <span class="n">Z</span><span class="p">)</span>
</span><span class='line'><span class="n">plt</span><span class="o">.</span><span class="n">clabel</span><span class="p">(</span><span class="n">CS</span><span class="p">,</span> <span class="n">inline</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'><span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dl.dropboxusercontent.com/u/142306/b/gmm_2.png" alt="gmm_2.png" /></p>

<h4>参考</h4>

<ul>
<li><a href="http://d.hatena.ne.jp/y_n_c/20091122/1258904025">matplotlibで等高線やら何やらのプロット - たこ焼き食べた.net</a></li>
<li><a href="http://w.livedoor.jp/met-python/d/matplotlib/plot">matplotlib/plot - memoring - Seesaa Wiki（ウィキ）</a></li>
<li><a href="http://d.hatena.ne.jp/teramonagi/20120930/1348982608">レプリカ交換モンテカルロ法（パラレル・テンパリング）による混合ガウス分布に従う乱数の生成 - My Life as a Mock Quant</a></li>
<li><a href="http://oneau.wordpress.com/2011/02/28/simple-statistics-with-scipy/">Simple statistics with SciPy | Comfort at 1 AU</a></li>
<li><a href="http://matplotlib.org/examples/pylab_examples/contour_demo.html">pylab_examples example code: contour_demo.py — Matplotlib 1.3.1 documentation</a></li>
<li><a href="http://matplotlib.org/api/mlab_api.html">mlab — Matplotlib 1.3.1 documentation</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「RとRubyによるデータ解析入門」読了]]></title>
    <link href="http://yagays.github.io/blog/2013/10/19/review-exploring-everyday-things/"/>
    <updated>2013-10-19T14:47:00+09:00</updated>
    <id>http://yagays.github.io/blog/2013/10/19/review-exploring-everyday-things</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4873116155" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>プログラミング言語RとRubyを使って，日常に隠れた様々なデータを掘り起こし，シミュレーションや仮説検定といった方法を用いて解析しようという本書．基本的にはRubyで生データの取得や処理を行い，Rで統計処理や可視化する流れになっている．日本語訳ではデータ解析という少しお固いタイトルだけれども，原題は「Exploring Everyday Things With R and Ruby」であり，扱う内容は身近にある些細なことが多い．例えば，オフィスのトイレが従業員数に対して凄い少ないんだけど本当にこれだけでいいの？といった疑問とか，日頃よく使っているメールを解析してどんな傾向があるか探ってみようといったデータマイニング的なことから，はたまた心臓の鼓動を解析するといった自分ではやろうと思い付かないことまで，対象とする内容は実に多様だ．このラインナップを見て「最近流行りのデータ解析ってもっと凄いことするもんだと思ってた」と思うかもしれないが，本書を開いてみれば，それは実に的を外した意見であることがわかる．データというものは，インターネットのアクセスログやPOSの購買記録だけではない．身近にあるすべてのことはデータであり，記録し収集することで形となり，解析し可視化することで見えてくる事実というものがある．そういった発見をする喜びというものを，本書は教えてくれる．科学は研究者や技術者だけのものではなく，誰もが感じることのできるものである．日常で疑問に思ったことから仮説を立て，データを集めたりシミュレーションをしたりして解き明かすという方法を，本書では実例とともに学ぶことができる．</p>

<p>本書を読むと，とにかく以下の2つのことが大事なのだと実感する．それは</p>

<ul>
<li><strong>ふと疑問に思ったことを自分なりに確かめようとする</strong></li>
<li><strong>とにかくデータを貯める</strong></li>
</ul>


<p>ということだ．思い浮かんだ疑問をそのままにせず，直感的や一見合理的な理由をしっかりと確かめる術を持つということの大切さを改めて意識した．それにはシミュレーションや統計解析が非常に有効である．そして，それを実現するには後にも先にもデータが必要であるということ，日頃から意識して記録するという能動的な行為から，自動的に記録してくれるようなシステムを作りデータを貯めこむという受動的な行為まで，何らかの形で残しておけば後々使う機会があるかもしれないということだ．データが全て残せなければ，数とか量とか何らかの統計値でも良い．電子データなら物理的場所を取らないしいくらでも貯めこむことができる．そういった一手先のデータ収集をしておくことで，よりデータ解析が面白くなる．</p>

<p>最後に実例を一つ．Siriのバックボーンとなっている<a href="http://www.wolframalpha.com/">WolframAlpha</a>などの開発者で有名なStephen Wolfram氏も，本書のアプローチに似たことをBlogで紹介している．</p>

<ul>
<li><a href="http://blog.stephenwolfram.com/2012/03/the-personal-analytics-of-my-life/">The Personal Analytics of My Life—Stephen Wolfram Blog</a></li>
</ul>


<p>かなり長期にわたるデータを細かく分析しており，グラフを見て想像を巡らすだけでも非常に面白い．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Numpyを使って混合ガウス分布のEMアルゴリズムを実装]]></title>
    <link href="http://yagays.github.io/blog/2013/10/18/gmm-em-numpy/"/>
    <updated>2013-10-18T13:21:00+09:00</updated>
    <id>http://yagays.github.io/blog/2013/10/18/gmm-em-numpy</id>
    <content type="html"><![CDATA[<p>Pythonの練習ということで，Numpyを使って混合ガウス分布のEMアルゴリズムによる最尤推定を実装してみた．そもそもPythonを書いた経験があまり無いうえに，全く知らないNumpyを使って行列演算や確率計算をしようということで，手探りでかなり苦戦してしまったが，何とか形にはなったと思う．ということで，次の勉強に活かすためにもここでコードを振り返ってみる．</p>

<p><strong>注意：以下のコードはテストデータでしか確かめてないので多分どこかバグってる．あと確率値に対数を取ってないので，値が限りなく小さくなってゼロ除算になることがある．</strong></p>

<script src="https://gist.github.com/yagays/7036127.js"></script>


<h3>実装</h3>

<h4>とっかかり</h4>

<ul>
<li>まずscipyあたりで多変量正規分布が無いか探す

<ul>
<li>普通の正規分布scipy.stats.normはあるが多変量は無いっぽい</li>
<li>自分で関数を書く</li>
</ul>
</li>
<li>逆行列とか転置とか書き方が複数あって混乱する

<ul>
<li>今回はとりあえず動いたらいいので適当に使う</li>
<li>np.matrixとnp.arrayが混ざってるの良くないっぽい</li>
</ul>
</li>
</ul>


<h4>EMアルゴリズムの作り始め</h4>

<ul>
<li>Numpyの行列の表し方を一通り見る

<ul>
<li>Rっぽい</li>
<li>0 originか1 originかで混乱する</li>
</ul>
</li>
<li>更新するパラメータは基本的に入れ物となる変数を作っておいてそれに代入していく

<ul>
<li>最初はappendでリストに突っ込もうかと考えたけど，ndarrayとかになる場合もあるので面倒でやめた</li>
</ul>
</li>
<li>Numpyの簡潔な書き方がわからない

<ul>
<li>Rのapplyみたいに列指向で計算する方法がわからない</li>
<li>最初はリスト内包使ったりmap,zipつかったりしたけど，行列計算ぽく書けばそれなりに動くことに気付く</li>
<li>それでもだめならfor文で直感的に計算する</li>
</ul>
</li>
</ul>


<h4>終わりかけ</h4>

<ul>
<li>共分散行列の更新で意図した結果にならずにだいぶ悩む

<ul>
<li>とりあえず人のを真似て書いてみる</li>
</ul>
</li>
<li>対数尤度の収束規準をどうするかで悩む

<ul>
<li>今回は適当に更新したときの対数尤度の差を見るようにした</li>
<li>収束度合いの検出を改善するか，単調増加する対数尤度をプロットして適当なところで切るみたいなことをしたほうがいいかも</li>
</ul>
</li>
</ul>


<h4>一通り書き終えて</h4>

<ul>
<li>まずはNumpyのスタイルを一通り身につけないといけない

<ul>
<li>Numpyの流儀を学ぶ</li>
<li>パッケージや方法が混在しているので，書き方を統一することが必要</li>
</ul>
</li>
<li>実装の途中で数式の添字とかで混乱した

<ul>
<li>EMアルゴリズムの資料としてPRMLともう一つ別のスライドを参考にしたのが原因</li>
<li>実装前にしっかりと頭のなかを整理しとくことが必要</li>
</ul>
</li>
<li>全体的に対数尤度で計算する

<ul>
<li>いわゆるlogsumexpでアンダフローに対処する</li>
</ul>
</li>
</ul>


<h4>参考</h4>

<ul>
<li><a href="http://d.hatena.ne.jp/n_shuyo/20100304/em_algorithm">EM アルゴリズム実装(勉強用) - Mi manca qualche giovedi`?</a></li>
<li><a href="http://d.hatena.ne.jp/nishiohirokazu/20111109/1320829189">EMアルゴリズム答え合わせ - 西尾泰和のはてなダイアリー</a></li>
<li><a href="http://d.hatena.ne.jp/teramonagi/20120909/1347194703">EMアルゴリズムによる混合分布のパラメーター推定の解析計算＆実装例 from 「Rによるモンテカルロ法入門」 - My Life as a Mock Quant</a></li>
<li><a href="http://convexbrain.sourceforge.jp/cgi-bin/wifky.pl?p=EM%A5%A2%A5%EB%A5%B4%A5%EA%A5%BA%A5%E0">Intelligence Architecture けんきうノート - EMアルゴリズム</a></li>
</ul>


<h4>Numpy/Scipy資料まとめ</h4>

<p><strong>英語</strong></p>

<ul>
<li><a href="http://wiki.scipy.org/Cookbook">Cookbook -</a></li>
<li><a href="http://www.python-course.eu/numpy.php">Python Advanced: Introduction into NumPy</a></li>
<li><a href="http://mentat.za.net/numpy/numpy_advanced_slides/">NumPy MedKit</a></li>
<li><a href="http://pages.physics.cornell.edu/~myers/teaching/ComputationalMethods/python/arrays.html">scipy array tip sheet</a></li>
<li><a href="http://www.kevinsheppard.com/wiki/Python_for_Econometrics">Python for Econometrics - Kevin Sheppard</a></li>
</ul>


<p><strong>日本語</strong></p>

<ul>
<li><a href="http://ibisforest.org/index.php?python%2Fnumpy#ic069832">python/numpy - 機械学習の「朱鷺の杜Wiki」</a></li>
<li><a href="http://daemon.ice.uec.ac.jp/~shouno/2012.Programming/index.html">2012 年度プログラミング言語演習 Python — 2012.ProgramingLanguage 0.1 documentation</a></li>
<li><a href="http://www.slideshare.net/shuyo/numpy-9704562">数式をnumpyに落としこむコツ</a></li>
<li><a href="http://rest-term.com/archives/2999/">Pythonの数値計算ライブラリ NumPy入門 « Rest Term</a></li>
<li><a href="http://qiita.com/wellflat/items/284ecc4116208d155e01">Pythonの数値計算ライブラリ NumPy入門 - Qiita [キータ]</a></li>
<li><a href="http://www.slideshare.net/shima__shima/python-13349162">機械学習のPythonとの出会い（１）：単純ベイズ基礎編</a></li>
<li><a href="http://sucrose.hatenablog.com/entry/2013/05/25/133021">pythonの機械学習ライブラリscikit-learnの紹介 - 唯物是真 @Scaled_Wurm</a></li>
</ul>


<p><strong>書籍</strong></p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=1449305466" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=1449319793" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「バイオ研究者が生き抜くための十二の智慧」読了]]></title>
    <link href="http://yagays.github.io/blog/2013/10/13/review-lab-management-12-technique/"/>
    <updated>2013-10-13T10:04:00+09:00</updated>
    <id>http://yagays.github.io/blog/2013/10/13/review-lab-management-12-technique</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4780908701" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>本書は，バイオ研究者のためのラボマネージメントのノウハウ集である．主に研究室を運営するPIやその下の教員クラスを対象にしており，実験室での試薬サンプルや実験データ管理，実験ノートの書き方から始まり，論文の投稿や査読，ラボ全体のミーティングやジャーナルクラブの運営，プレリリースなどの研究の情報発信など，研究者の研究以外の活動に関する「雑用」を上手く処理するテクニックが紹介される．たいていの研究者は，これらの細かい事務作業は放り出してただひたすらに自分の研究をしていたいと思うはずだ．しかし，これら「雑用」をしなければ，研究室という組織は機能しない．一見すると研究という仕事をしていないかのように取られがちなこれらの作業は，研究者として生きる上での義務となっている．他の研究者とコミュニケーションを取り，自分の成果を世界に発信することも，自分の研究と同じくらい大事なことだ．これらの「雑用」と呼ぶには相応しくない大事な仕事について，本書では様々な研究者が培ってきたテクニックを十二の智慧として紹介している．</p>

<p>内容は上記の通り幅広く取り扱っているが，個々に割かれているページ数はあまり多くない．新鮮なアイデアを探すのには持ってこいな資料だが，ノウハウ集であって指南書ではないので，読んで即実行して成果が得られるわけではないだろう．自分一人でできるものは簡単だが，他人との共同作業やラボ全体に関するものはなかなか導入が難しいという実情もある．既にある研究室の文化とのすり合わせもあるだろうし，本書を読んでない相手に新しいやり方の意義を伝えて使い方を学んでもらうのはなかなか大変だ．マネージメントの特効薬ではないということをある程度覚悟して読み進めることをお薦めする．ただし，食わず嫌いは良くない．上を説得するのは面倒だから，行動力が無いからと言っては始まらない．何事もまず一度試してみると周囲から何かしら反応があるはずだから，それを元に現実的な方法に修正していくというのが理想だろう．</p>

<p>それにしても，私も常々感じることだが，こういった研究室の運営や文化はなかなか外に出てこない．特に実験系のラボはその色合いが強い．それは，研究室という研究内容が違えば所属する人間も全く違うようなうユニークな環境のせいかもしれないし，人材の流動が少ないせいかもしれない．そもそも，それを知りたいという人が少ないからかもしれない．最近ではメディアでの紹介やブログなどのネット媒体によって情報を発信するトコロも増えてきたが，未だに研究室の実情は独自に醸成されてきた文化を守り抜いていくという閉鎖的な環境にあると思われる．それを良いと思うか悪いと思うかは置いておいて，自分の世界を一歩引いた視点で見ること，そして外の世界を見ることはきっと何かの役に立つ．研究なり研究以外の仕事をもっと上手くやれる方法はあるはずだし，誰か知っているし誰かやっているはずだ．そんな情報をもっと共有したりできる環境があればと思う．それは本書のような本の形でなくても良い．口コミでも学会のセッションでも何かしら広めていける方法はあるはずだ．個人的には，できればインターネットに形として残るブログなどに書いてほしいが，まあやり方はいくらでもあるだろう．</p>

<br/>


<p>ラボのマネージメントに関して，今回紹介した本書には書かれてなかった点を補足するならば，以下の2冊がお薦めだ．「<a href="http://www.amazon.co.jp/gp/product/4895924742/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4895924742&linkCode=as2&tag=yagays-22">ラボ・ダイナミクス―理系人間のためのコミュニケーションスキル</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=yagays-22&l=as2&o=9&a=4895924742" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />」は，主にラボ内の人間関係に関する実例が豊富に載っている．セミナーで怒鳴り散らすような相手にどう対処するか，ラボの規則を守ってくれない同僚にどう接するかなど，やっかいな問題の対処法が多数紹介されている．また，学生の指導や教育という観点からは「<a href="http://www.amazon.co.jp/gp/product/4472403625/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4472403625&linkCode=as2&tag=yagays-22">ベストプロフェッサー (高等教育シリーズ)</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=yagays-22&l=as2&o=9&a=4472403625" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />」がお薦めできる．</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4895924742" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4472403625" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[メタボロミクスの包括的なレビュー「The Proceedings of Metabolomics」]]></title>
    <link href="http://yagays.github.io/blog/2013/10/05/hmt-metabolomics/"/>
    <updated>2013-10-05T09:43:00+09:00</updated>
    <id>http://yagays.github.io/blog/2013/10/05/hmt-metabolomics</id>
    <content type="html"><![CDATA[<p><a href="http://humanmetabolome.com/rd/proceedings" target="_blank"><img src="http://dl.dropboxusercontent.com/u/142306/b/metabolome.png" align="right"></a></p>

<p>慶応義塾大学発のバイオベンチャー<a href="http://ja.wikipedia.org/wiki/%E3%83%92%E3%83%A5%E3%83%BC%E3%83%9E%E3%83%B3%E3%83%BB%E3%83%A1%E3%82%BF%E3%83%9C%E3%83%AD%E3%83%BC%E3%83%A0%E3%83%BB%E3%83%86%E3%82%AF%E3%83%8E%E3%83%AD%E3%82%B8%E3%83%BC%E3%82%BA">Human Metabolome Technologies</a>社が，メタボロミクスについての実験手法や研究事例などをまとめた包括的なレビューを無料で公開している．</p>

<p><a href="http://humanmetabolome.com/rd/proceedings">The Proceedings of Metabolomics | Human Metabolome Technologies</a></p>

<blockquote><p>目次</p>

<p>第一章 三位一体</p>

<p>第二章 メタボロミクスの概要</p>

<p>第三章 メタボロミクスで用いられる分析手法</p>

<p>第四章 多変量解析を用いたメタボロームデータ解析</p>

<p>第五章 データベース</p>

<p>第六章 メタボロームデータに影響を与える諸要因</p>

<p>第七章 メタボロミクスの応用と実用</p>

<p>第八章 HMTでのメタボロミクス手順</p>

<p>第九章 生体試料</p>

<p>第十章 ケーススタディ</p>

<p>(<a href="http://humanmetabolome.com/rd/proceedings#2">http://humanmetabolome.com/rd/proceedings#2</a>)</p></blockquote>

<p>上記の目次を見てもらえれば分かる通り，このレビューではメタボロミクスという分野全体に関して，その歴史やオミクス(-omics)における位置づけを明確にしつつ，実際の実験手法や解析手法，そして様々な分野への適応事例をまとめ上げたものになっている．冒頭の第一章でまず語られる「三位一体」とは，分析化学・コンピュータサイエンス・生物学のことを指し，これらが互いに支えあってメタボロミクスという分野が成り立っていることが述べられる．その3つの側面それぞれについて，分析化学では化合物の測定技術，コンピュータサイエンスではデータ解析技術，生物学ではメタボローム解析の意義や適応例といったように，それぞれメタボロミクスに必要な技術や知識が紹介される．</p>

<p>私自身はメタボロミクスについてほとんど知識がない状態でこのレビューを読んだのだが，専門外の自分にとってもメタボロミクスの分野全体を俯瞰し，それぞれの内容について理解を深めることができたと思う．参考文献もかなり充実しており，関係ありそうな論文を幾つかピックアップしてそれぞれ読み進めているところだ．</p>

<p>もしメタボロミクスに興味があったり研究に関係しそうな人は，ぜひこのレビューを一読することをオススメする．また，同社のウェブサイトでは<a href="http://humanmetabolome.com/rd/researchlist">研究領域別論文リスト</a>といった論文のサーベイを公開しているほかに，「<a href="http://humanmetabolome.com/09/10672">メタボロミクスの論文を読もう</a>」といったセミナーも日本各地で開催しているようなので，気になる人はチェックしてみてはどうだろうか．</p>

<h4>参考</h4>

<ul>
<li><a href="http://humanmetabolome.com/">メタボローム受託解析　メタボロミクス | Human Metabolome Technologies</a></li>
<li><a href="http://ja.wikipedia.org/wiki/%E3%83%92%E3%83%A5%E3%83%BC%E3%83%9E%E3%83%B3%E3%83%BB%E3%83%A1%E3%82%BF%E3%83%9C%E3%83%AD%E3%83%BC%E3%83%A0%E3%83%BB%E3%83%86%E3%82%AF%E3%83%8E%E3%83%AD%E3%82%B8%E3%83%BC%E3%82%BA">ヒューマン・メタボローム・テクノロジーズ - Wikipedia</a></li>
<li><a href="http://humanmetabolome.com/metablog/">メタブローグ</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
