<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Wolfeyes Bioinformatics beta]]></title>
  <link href="http://yagays.github.com/atom.xml" rel="self"/>
  <link href="http://yagays.github.com/"/>
  <updated>2012-11-13T23:27:39+09:00</updated>
  <id>http://yagays.github.com/</id>
  <author>
    <name><![CDATA[yag_ays]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[「佐藤可士和の超整理術」読了]]></title>
    <link href="http://yagays.github.com/blog/2012/11/13/review-ultimate-method-for-reaching-the-essentials/"/>
    <updated>2012-11-13T23:05:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/11/13/review-ultimate-method-for-reaching-the-essentials</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4532165946" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>デザイナーである佐藤可士和の仕事術を，「整理」というキーワードを軸にまとめあげた1冊．整理といっても，ただ単純に部屋や机の上の小綺麗に整理するということだけではない．そういった空間の整理方法を，情報や思考といった考え方にも当てはめることで，仕事における問題解決や効率化を目指すという形となっている．この話の流れからすると，部屋の整理術を無理矢理当てはめているんだろうと感じるかもしれないが，佐藤可士和の考える整理というものは，実は空間・情報・思考が互いに深く関係したものであることが読み進めるうちに判明してくる．机の整理をするには情報の整理が必要であり，情報の整理をするには思考の整理をする必要があるといったように，それぞれのレイヤーで何をすべきか，そしてどういった整理法がポイントになってくるかが，佐藤可士和の代表的な仕事を例に挙げながら詳しく語られる．</p>

<p>本書の内容は，デザイナーや整理という単語から連想するイメージとは全く違ったものになっている．それは自分の性格や審美眼のような右脳的な能力に頼るのではなく，突き詰めて合理的に考えて細かな部分にもきちっと論理的な解釈を加えるという左脳的な能力を重視している点にある．奇抜なアイデアや突拍子もない行動の裏にある，徹底的に言語化された理論武装があることを知ると，佐藤可士和のデザインがなぜ広告の消費者である私たちに驚きや深い印象を与えたり，デザイナーが意図したイメージをそのままに伝えることができるのかが分かるだろう．デザインの制作過程で語られる試行錯誤の跡であったり情報の整理方法は，最終的に出来上がったものと見比べながら解釈することができて，非常に興味深いものになっている．</p>

<p>最近では工業デザインやUI/UXが注目されるようになり，外側の形を製品の機能とは別に考えるのではなく設計に組み込んでしまうというデザイン思考という総合的な言葉も出てきているが，本書はまさにその流れを整理という言葉で言い換えているだけで，主張することはほとんど変わらない．実際の手法に関してはそれぞれのスタイルで異なっているが，デザインと機能を両立して製品なりロゴなりを作り上げるという点では同じアプローチだと言える．</p>

<p>少し前の本だと思って軽い気持ちで読み始めたが，中身を開けてみると意外としっかりして現在のデザイン思考と比べても遜色ない内容となっていて驚いた．整理本という括りがもったいないと思えるほど，プロダクトデザインの教科書としても良書だと思う．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「チーズはどこへ消えた?」読了]]></title>
    <link href="http://yagays.github.com/blog/2012/11/12/review-who-moved-my-cheese/"/>
    <updated>2012-11-12T16:40:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/11/12/review-who-moved-my-cheese</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=459403019X" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>10年近く前に大ヒットとなった，自己啓発ブームのさきがけのような1冊．2匹のネズミと2人と小人がチーズを探すという寓話を通して，成功を追求することや変化を恐れずに行動を起こすことの重要性が語られる．</p>

<p>本書は寓話を使った切り口でありながら，回りくどい方法で読者に主張したいことを伝えるのではなく，冒頭の文章でまずはじめに私たち自身の単純さと複雑さの象徴が寓話に登場するネズミと小人であることが語られる．そして，元クラスメートだった数人が大人になって久しぶりに会って食事しているというシチュエーションのもとで，そのうちの一人がこの寓話の話をし始める．実際にネズミと小人の寓話が語られた後に，話を聞いた他の参加者が，その寓話をどう読み解くかを議論したり感想を述べたりするという構成となっている．</p>

<p>寓話の内容はとても簡単だ．ネズミと小人はそれぞれチーズを探して迷路をさまよう毎日を過ごしている．チーズはどこにあるかわからない．ひとたび大きなチーズが見つかればしばらくは食いつなぐことができるのだが，それも時間が経つとともに食べてなくなってしまうし，その場所にまたチーズが置かれるかどうかもわからない．そうした環境のなか，ネズミは何も考えずにチーズを探すことに専念し，環境の変化に敏感で常に新しい行動を起こすことに抵抗がない．一方で，小人の方は物事を複雑に考えがちで，単にチーズが無くなることに筋の通らない理屈を結び付けたがったり，今までの成功に囚われて生活を変えることができない．その両者が，それまで同じような生活をしていた中で，ある場所で好みのチーズを発見するところから物語は始まる．そして，その好みのチーズを見つけた後に，ネズミと小人それぞれのチーズ探しに対する態度はがらりと変わってしまうことで話は進んでいく．</p>

<p>古本屋で見つけたので，買って読んでみたという感じ．この本を今更読むのはどうなのと思うけれども，まあ話が陳腐になってるといったわけでもないので，気になる人は読んでみるといいかもしれない．はまる人にとっては教訓を得られるだろうし，はまらない人でも教養程度にはなるだろう．物語が終わった後の解釈の部分も含めて上手くまとまっているし，何よりページ数が少ないので空いた時間にでも読みきれる程度のものだ．自己啓発の本としては，長々と意味不明な理論展開されて読後感が悪いのもあるけれども，この本に関しては物語をどう捉えるにしろ，こんな素晴らしい本を読めてよかったとか意味なかったけどこれくらいの時間の浪費なら別に…といったように，キッパリ割り切れるところがいいのかもしれない．個人的には好きな類の本ではある．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「Rによるモンテカルロ法入門」読書ノート：5章 モンテカルロ最適化 確率的勾配法]]></title>
    <link href="http://yagays.github.com/blog/2012/11/11/imcmr-5-4/"/>
    <updated>2012-11-11T06:17:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/11/11/imcmr-5-4</id>
    <content type="html"><![CDATA[<ul>
<li>読書ノート アーカイブ：<a href="http://yagays.github.com/blog/2012/10/20/archive-introducing-monte-carlo-methods-with-r/">http://yagays.github.com/blog/2012/10/20/archive-introducing-monte-carlo-methods-with-r/</a></li>
</ul>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4621065270" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<h3>内容：確率的勾配法(Stochastic Gradient Methods)で関数の最大値を求める</h3>

<p>目的関数からの直接的なシミュレーションが難しい場合，関数の表面をローカルになぞって最大値を探索するという手法が使える．探索に用いる系列は以下のように表す事ができる．</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Ctheta_%7Bj%2B1%7D+%3D+%5Ctheta_j+%2B++%5Cepsilon_j+></p>

<p>これは現在のステップに摂動項<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cepsilon_j+>を加えて次のステップとすることを表している．つまりこれはマルコフ連鎖となるのだが，今回はそれほどマルコフ性は重要にはならない．</p>

<p>概念的に目的関数の分布を山の斜面と考えるならば，現在の位置からちょっと動いて…を繰り返して山を登っていくような動きをする．ただし，単純に傾斜の上の方に登っていくのではなく，どちらかに進むかはランダムなので，たまに斜面を下ったりもする．その試行を繰り返していくことで，山の頂上を目指すような方法となっている．</p>

<h4>有限差分法</h4>

<p>有限差分法では，関数の勾配は</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cnabla+h%28%5Ctheta_j%29+%5Capprox+%5Cfrac%7Bh%28%5Ctheta_j%2B%5Cbeta_j%5Czeta_j%29-h%28%5Ctheta_j-%5Cbeta_j%5Czeta_j%29%7D%7B2%5Cbeta_j%7D%5Czeta_j+%3D+%5Cfrac%7B%5CDelta+h%28%5Ctheta_j%2C%5Cbeta_j%5Czeta_j%29%7D%7B2%5Cbeta_j%7D%5Czeta_j+></p>

<p>とし，摂動項<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cepsilon_j+>を組み込んだ系列の更新は以のようになる．</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Ctheta_%7Bj%2B1%7D+%3D+%5Ctheta_j+%2B++%5Cfrac%7B%5Calpha_j%7D%7B2%5Cbeta_j%7D%5CDelta+h%28%5Ctheta_j%2C%5Cbeta_j%5Czeta_j%29%5Czeta_j+></p>

<h3>例 5.7</h3>

<p><a href="http://yagays.github.com/blog/2012/11/06/imcmr-5-3/">例5.6</a>の続き．有限差分法を用いて以下の式を最小化することを目的とする．</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=h%28x%2Cy%29%3D%28x%5Csin%2820y%29%2By%5Csin%2820x%29%29%5E2%5Ccosh%28%5Csin%2810x%29x%29%2B+%28x%5Ccos%2810y%29-y%5Csin%2810x%29%29%5E2%5Ccosh%28%5Ccos%2820y%29y%29+></p>

<p>今回は最大化ではなく最小化することが目的なので，この関数をマイナスにする必要がある．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>h <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>x<span class="p">){</span>
</span><span class='line'>  <span class="o">-</span><span class="p">(</span>x<span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="o">*</span>sin<span class="p">(</span><span class="m">20</span><span class="o">*</span>x<span class="p">[</span><span class="m">2</span><span class="p">])</span> <span class="o">+</span> x<span class="p">[</span><span class="m">2</span><span class="p">]</span><span class="o">*</span>sin<span class="p">(</span><span class="m">20</span><span class="o">*</span>x<span class="p">[</span><span class="m">1</span><span class="p">]))</span><span class="o">^</span><span class="m">2</span> <span class="o">*</span> cosh<span class="p">(</span>sin<span class="p">(</span><span class="m">10</span><span class="o">*</span>x<span class="p">[</span><span class="m">1</span><span class="p">])</span><span class="o">*</span>x<span class="p">[</span><span class="m">1</span><span class="p">])</span> <span class="o">-</span>
</span><span class='line'>    <span class="p">(</span>x<span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="o">*</span>cos<span class="p">(</span><span class="m">10</span><span class="o">*</span>x<span class="p">[</span><span class="m">2</span><span class="p">])</span> <span class="o">-</span> x<span class="p">[</span><span class="m">2</span><span class="p">]</span><span class="o">*</span>sin<span class="p">(</span><span class="m">10</span><span class="o">*</span>x<span class="p">[</span><span class="m">1</span><span class="p">]))</span><span class="o">^</span><span class="m">2</span> <span class="o">*</span> cosh<span class="p">(</span>cos<span class="p">(</span><span class="m">20</span><span class="o">*</span>x<span class="p">[</span><span class="m">2</span><span class="p">])</span><span class="o">*</span>x<span class="p">[</span><span class="m">2</span><span class="p">])</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>アルゴリズム</h4>

<ul>
<li>勾配の値が10<sup>-5</sup> になるまで以下を繰り返す

<ol>
<li><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Czeta_j+>を生成する</li>
<li><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Ctheta_%7Bj%7D+>を使って勾配<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cfrac%7B%5Calpha_j%7D%7B2%5Cbeta_j%7D%5CDelta+h%28%5Ctheta_j%2C%5Cbeta_j%5Czeta_j%29%5Czeta_j+>を生成する</li>
<li><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Ctheta_%7Bj%7D%2B%5Cepsilon_j+>を<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Ctheta_%7Bj%2B1%7D+>とする</li>
<li><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Calpha_j+>と<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cbeta_j+>を更新する</li>
</ol>
</li>
</ul>


<p>なお，実際のソースコードでは勾配の値が発散しないように，scaleが1以上になった場合には内部でループをして値を再計算するようにしている．</p>

<br />




<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4274068307" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<h4><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Czeta_j+>の生成方法と有限差分法における役割</h4>

<p>さて，ここで有限差分法のポイントとなる<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Czeta_j+>に関して，実際にどうやって値を生成するのか，そしてこの値がどういう意味を持っているかについて考えてみる．</p>

<p>まずは<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Czeta_j+>の生成方法について．本文中では<strong>「<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Czeta_j+>は単位球<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5C%7C+%5Czeta_j+%5C%7C+%3D+1+>上に一様に分布しています」</strong>とあるだけで，コードの方を参照してみてもzeta / sqrt(t(zeta) %*% zeta)としか書かれていない．ではこれは一体何をしているのかというと，一言で言うと「球面上の一様分布から乱数を生成する」，つまり今回の場合は単位円の円周の上からある一点を取ってきて<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Czeta_j+>の値にするということをしている．</p>

<p>このような球面上の一様分布に関しては「<a href="http://www.amazon.co.jp/gp/product/4274068307/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4274068307&linkCode=as2&tag=yagays-22">Ｒによる計算機統計学</a><img src="http://www.assoc-amazon.jp/e/ir?t=yagays-22&l=as2&o=9&a=4274068307" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />」のP.96に詳しく書かれており，この本ではD次元の球面上の一様乱数を生成する方法についてrunif.sphere()関数を定義している．今回の場合はxとyの2次元について考えているので，「<a href="http://www.amazon.co.jp/gp/product/4274068307/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4274068307&linkCode=as2&tag=yagays-22">Ｒによる計算機統計学</a><img src="http://www.assoc-amazon.jp/e/ir?t=yagays-22&l=as2&o=9&a=4274068307" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />」に倣ってrunif.sphere(1,2)とすれば，<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Czeta_j+>と同様の値が得られる．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1"># Ｒによる計算機統計学 P.87より</span>
</span><span class='line'><span class="c1"># http://personal.bgsu.edu/~mrizzo/SCR/SCRch3.R</span>
</span><span class='line'>runif.sphere <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>n<span class="p">,</span> d<span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1"># return a random sample uniformly distributed</span>
</span><span class='line'>    <span class="c1"># on the unit sphere in R ^d</span>
</span><span class='line'>    M <span class="o">&lt;-</span> matrix<span class="p">(</span>rnorm<span class="p">(</span>n<span class="o">*</span>d<span class="p">),</span> nrow <span class="o">=</span> n<span class="p">,</span> ncol <span class="o">=</span> d<span class="p">)</span>
</span><span class='line'>    L <span class="o">&lt;-</span> apply<span class="p">(</span>M<span class="p">,</span> MARGIN <span class="o">=</span> <span class="m">1</span><span class="p">,</span>
</span><span class='line'>               FUN <span class="o">=</span> <span class="kr">function</span><span class="p">(</span>x<span class="p">){</span>sqrt<span class="p">(</span>sum<span class="p">(</span>x<span class="o">*</span>x<span class="p">))})</span>
</span><span class='line'>    D <span class="o">&lt;-</span> diag<span class="p">(</span><span class="m">1</span> <span class="o">/</span> L<span class="p">)</span>
</span><span class='line'>    U <span class="o">&lt;-</span> D <span class="o">%*%</span> M
</span><span class='line'>    U
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>次に，有限差分法における<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Czeta_j+>の役割について考えてみる．</p>

<p>そもそも，確率的勾配法はローカルに関数の表面をなぞるように探索して，値の大きいポイントを探す確率的なアプローチだった．概念的には，<a href="http://yagays.github.com/blog/2012/11/06/imcmr-5-3/">前回3Dプロットをした</a>ような山みたいになっている関数の上をあちこち動いて頂上を探し出すということだが，あちこち動きまわるためには，歩く「方向」と「距離」を考えなければならない．今回の有限差分法における勾配は<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cepsilon_j+%3D+%5Cfrac%7B%5Calpha_j%7D%7B2%5Cbeta_j%7D%5CDelta+h%28%5Ctheta_j%2C%5Cbeta_j%5Czeta_j%29%5Czeta_j+>で表されていたが，その「方向」が<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Czeta_j+>，「距離」が<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cfrac%7B%5Calpha_j%7D%7B2%5Cbeta_j%7D%5CDelta+h%28%5Ctheta_j%2C%5Cbeta_j%5Czeta_j%29+>に対応している．</p>

<p><img src="http://dl.dropbox.com/u/142306/b/imcmr/chp5_5-7_3.png" alt="" /></p>

<p>では実際に<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Czeta_j+>と勾配<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cepsilon_j+>を図示して，「方向」と「距離」の意味を確かめてみよう．以下の図は，<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Czeta_j+>の取りうる単位円と，赤い矢印<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Czeta_j+>，黒い矢印<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cepsilon_j+>を示した図になっている（<img src=http://chart.apis.google.com/chart?cht=tx&chl=j%3D1+>）．この図を見ると，赤い矢印で方向が示され，黒い矢印でどれくらいの距離を進むかが見て取れる．<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Czeta_j+>は乱数で生成された値なので，本書の「そのつど方向をランダムに選択する」という勾配の説明の通り，単位円の円周上からどこか一点を選択して進む方向を決めている．</p>

<p>といったように，この有限差分法では関数の山の傾斜を考えて進む方向を決めるのではなく，何も考えずに動いてみるといったアプローチとなっている．ただし，距離に関しては別で，関数を使って傾斜を見つつ調整しているので，その点は注意．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>plot<span class="p">(</span>runif.sphere<span class="p">(</span><span class="m">1000</span><span class="p">,</span><span class="m">2</span><span class="p">),</span> xlim<span class="o">=</span>c<span class="p">(</span><span class="m">-2</span><span class="p">,</span><span class="m">2</span><span class="p">),</span> ylim<span class="o">=</span>c<span class="p">(</span><span class="m">-2</span><span class="p">,</span><span class="m">2</span><span class="p">),</span> cex<span class="o">=</span><span class="m">0.1</span><span class="p">)</span>
</span><span class='line'>arrows<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">0</span><span class="p">,</span>grad<span class="p">[</span><span class="m">1</span><span class="p">],</span>grad<span class="p">[</span><span class="m">2</span><span class="p">],</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">)</span>             <span class="c1"># 黒の矢印が勾配</span>
</span><span class='line'>arrows<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">0</span><span class="p">,</span>zeta<span class="p">[</span><span class="m">1</span><span class="p">],</span>zeta<span class="p">[</span><span class="m">2</span><span class="p">],</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">,</span> col<span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">)</span>  <span class="c1"># 赤の矢印がゼータ</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dl.dropbox.com/u/142306/b/imcmr/chp5_5-7_2.png" alt="" /></p>

<h4>今回実験を行う4つのシナリオ</h4>

<p>この有限差分法において，<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Calpha_j+>と<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cbeta_j+>の系列の更新式は任意に設定できる．今回は4つのシナリオを用意して実験を行った．それぞれのシナリオの更新式は以下の通り．</p>

<ul>
<li>シナリオ1：<img src=http://chart.apis.google.com/chart?cht=tx&chl=1%2F%5Clog%28j%2B1%29+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=1%2F%5Clog%28j%2B1%29%5E%7B0.1%7D+></li>
<li>シナリオ2：<img src=http://chart.apis.google.com/chart?cht=tx&chl=1%2F100%5Clog%28j%2B1%29+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=1%2F%5Clog%28j%2B1%29%5E%7B0.1%7D+></li>
<li>シナリオ3：<img src=http://chart.apis.google.com/chart?cht=tx&chl=1%2F%28j%2B1%29+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=1%2F%28j%2B1%29%5E%7B0.5%7D+></li>
<li>シナリオ4：<img src=http://chart.apis.google.com/chart?cht=tx&chl=1%2F%28j%2B1%29+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=1%2F%28j%2B1%29%5E%7B0.1%7D+></li>
</ul>


<p>(※シナリオ1と2に関しては後述の「本問題の疑問点」を参考)</p>

<h4>例 5.7のソースコード</h4>

<p>前置きがだいぶ長くなってしまったが，本題のソースコードおよび4つのシナリオにおける確率的勾配法の探索過程を示した図は以下のようになる．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>h <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>x<span class="p">){</span>
</span><span class='line'>  <span class="o">-</span><span class="p">(</span>x<span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="o">*</span>sin<span class="p">(</span><span class="m">20</span><span class="o">*</span>x<span class="p">[</span><span class="m">2</span><span class="p">])</span> <span class="o">+</span> x<span class="p">[</span><span class="m">2</span><span class="p">]</span><span class="o">*</span>sin<span class="p">(</span><span class="m">20</span><span class="o">*</span>x<span class="p">[</span><span class="m">1</span><span class="p">]))</span><span class="o">^</span><span class="m">2</span> <span class="o">*</span> cosh<span class="p">(</span>sin<span class="p">(</span><span class="m">10</span><span class="o">*</span>x<span class="p">[</span><span class="m">1</span><span class="p">])</span><span class="o">*</span>x<span class="p">[</span><span class="m">1</span><span class="p">])</span> <span class="o">-</span>
</span><span class='line'>    <span class="p">(</span>x<span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="o">*</span>cos<span class="p">(</span><span class="m">10</span><span class="o">*</span>x<span class="p">[</span><span class="m">2</span><span class="p">])</span> <span class="o">-</span> x<span class="p">[</span><span class="m">2</span><span class="p">]</span><span class="o">*</span>sin<span class="p">(</span><span class="m">10</span><span class="o">*</span>x<span class="p">[</span><span class="m">1</span><span class="p">]))</span><span class="o">^</span><span class="m">2</span> <span class="o">*</span> cosh<span class="p">(</span>cos<span class="p">(</span><span class="m">20</span><span class="o">*</span>x<span class="p">[</span><span class="m">2</span><span class="p">])</span><span class="o">*</span>x<span class="p">[</span><span class="m">2</span><span class="p">])</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>start <span class="o">&lt;-</span> c<span class="p">(</span><span class="m">0.65</span><span class="p">,</span> <span class="m">0.8</span><span class="p">)</span>
</span><span class='line'>theta <span class="o">&lt;-</span> matrix<span class="p">(</span>start<span class="p">,</span> ncol<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'>dif <span class="o">&lt;-</span> <span class="m">1</span>
</span><span class='line'>iter <span class="o">&lt;-</span> <span class="m">1</span>
</span><span class='line'>alpha <span class="o">&lt;-</span> <span class="m">1</span>
</span><span class='line'>beta <span class="o">&lt;-</span> <span class="m">1</span>
</span><span class='line'>
</span><span class='line'><span class="kr">while</span><span class="p">(</span>dif <span class="o">&gt;</span> <span class="m">10</span><span class="o">^</span><span class="m">-5</span><span class="p">){</span>
</span><span class='line'>  zeta <span class="o">&lt;-</span> rnorm<span class="p">(</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'>  zeta <span class="o">&lt;-</span> zeta <span class="o">/</span> sqrt<span class="p">(</span>t<span class="p">(</span>zeta<span class="p">)</span> <span class="o">%*%</span> zeta<span class="p">)</span>
</span><span class='line'>  grad <span class="o">&lt;-</span> alpha<span class="p">[</span>iter<span class="p">]</span><span class="o">*</span>zeta <span class="o">*</span> <span class="p">(</span>h<span class="p">(</span>theta<span class="p">[</span>iter<span class="p">,]</span><span class="o">+</span>beta<span class="p">[</span>iter<span class="p">]</span><span class="o">*</span>zeta<span class="p">)</span> <span class="o">-</span>
</span><span class='line'>    h<span class="p">(</span>theta<span class="p">[</span>iter<span class="p">,]</span><span class="o">-</span>beta<span class="p">[</span>iter<span class="p">]</span><span class="o">*</span>zeta<span class="p">))</span> <span class="o">/</span> <span class="m">2</span><span class="o">*</span>beta<span class="p">[</span>iter<span class="p">]</span>
</span><span class='line'>  scale <span class="o">&lt;-</span> sqrt<span class="p">(</span>t<span class="p">(</span>grad<span class="p">)</span> <span class="o">%*%</span> grad<span class="p">)</span>
</span><span class='line'>  <span class="kr">while</span><span class="p">(</span>scale <span class="o">&gt;</span> <span class="m">1</span><span class="p">){</span>
</span><span class='line'>    zeta <span class="o">&lt;-</span> rnorm<span class="p">(</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'>    zeta <span class="o">&lt;-</span> zeta <span class="o">/</span> sqrt<span class="p">(</span>t<span class="p">(</span>zeta<span class="p">)</span> <span class="o">%*%</span> zeta<span class="p">)</span>
</span><span class='line'>    grad <span class="o">&lt;-</span> alpha<span class="p">[</span>iter<span class="p">]</span><span class="o">*</span>zeta <span class="o">*</span> <span class="p">(</span>h<span class="p">(</span>theta<span class="p">[</span>iter<span class="p">,]</span><span class="o">+</span>beta<span class="p">[</span>iter<span class="p">]</span><span class="o">*</span>zeta<span class="p">)</span> <span class="o">-</span>
</span><span class='line'>      h<span class="p">(</span>theta<span class="p">[</span>iter<span class="p">,]</span><span class="o">-</span>beta<span class="p">[</span>iter<span class="p">]</span><span class="o">*</span>zeta<span class="p">))</span> <span class="o">/</span> <span class="m">2</span><span class="o">*</span>beta<span class="p">[</span>iter<span class="p">]</span>
</span><span class='line'>    scale <span class="o">&lt;-</span> sqrt<span class="p">(</span>t<span class="p">(</span>grad<span class="p">)</span> <span class="o">%*%</span> grad<span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  theta <span class="o">&lt;-</span> rbind<span class="p">(</span>theta<span class="p">,</span> theta<span class="p">[</span>iter<span class="p">,]</span><span class="o">+</span>grad<span class="p">)</span>
</span><span class='line'>  dif <span class="o">&lt;-</span> scale
</span><span class='line'>  iter <span class="o">&lt;-</span> iter <span class="o">+</span> <span class="m">1</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># scenario1</span>
</span><span class='line'>  alpha <span class="o">&lt;-</span> cbind<span class="p">(</span>alpha<span class="p">,</span> <span class="m">1</span><span class="o">/</span>log<span class="p">(</span>iter<span class="o">+</span><span class="m">1</span><span class="p">))</span>
</span><span class='line'>  beta <span class="o">&lt;-</span> cbind<span class="p">(</span>beta<span class="p">,</span> <span class="m">1</span><span class="o">/</span><span class="p">(</span>log<span class="p">(</span>iter<span class="o">+</span><span class="m">1</span><span class="p">))</span><span class="o">^</span><span class="p">(</span><span class="m">0.1</span><span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>hcur <span class="o">&lt;-</span> h<span class="p">(</span>start<span class="p">)</span>
</span><span class='line'>hval <span class="o">&lt;-</span> h<span class="p">(</span>start<span class="p">)</span>
</span><span class='line'>x <span class="o">&lt;-</span> seq<span class="p">(</span><span class="m">-1</span><span class="p">,</span><span class="m">1</span><span class="p">,</span>le<span class="o">=</span><span class="m">435</span><span class="p">)</span>
</span><span class='line'>y <span class="o">&lt;-</span> seq<span class="p">(</span><span class="m">-1</span><span class="p">,</span><span class="m">1</span><span class="p">,</span>le<span class="o">=</span><span class="m">435</span><span class="p">)</span>
</span><span class='line'>z <span class="o">&lt;-</span> matrix<span class="p">(</span><span class="m">0</span><span class="p">,</span> nrow<span class="o">=</span><span class="m">435</span><span class="p">,</span> ncol<span class="o">=</span><span class="m">435</span><span class="p">)</span>
</span><span class='line'><span class="kr">for</span> <span class="p">(</span>i in <span class="m">1</span>:<span class="m">435</span><span class="p">){</span>
</span><span class='line'>  <span class="kr">for</span> <span class="p">(</span>j in <span class="m">1</span>:<span class="m">435</span><span class="p">){</span>
</span><span class='line'>    z<span class="p">[</span>i<span class="p">,</span>j<span class="p">]</span> <span class="o">&lt;-</span> h<span class="p">(</span>c<span class="p">(</span>x<span class="p">[</span>i<span class="p">],</span> y<span class="p">[</span>j<span class="p">]))</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>image<span class="p">(</span>x<span class="p">,</span> y<span class="p">,</span> z<span class="p">,</span> col<span class="o">=</span>terrain.colors<span class="p">(</span><span class="m">150</span><span class="p">))</span>
</span><span class='line'>lines<span class="p">(</span>theta<span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'>points<span class="p">(</span>theta<span class="p">[</span><span class="m">1</span><span class="p">,</span><span class="m">1</span><span class="p">],</span> theta<span class="p">[</span><span class="m">1</span><span class="p">,</span><span class="m">2</span><span class="p">],</span> col<span class="o">=</span><span class="s">&quot;gold&quot;</span><span class="p">,</span> pch<span class="o">=</span><span class="m">19</span><span class="p">)</span>
</span><span class='line'>title<span class="p">(</span>main<span class="o">=</span><span class="s">&quot;scenario 1&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>シナリオ2,3,4の場合は，whileループの最後の<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Calpha_j+>と<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cbeta_j+>の更新式を以下の通りにする．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1"># scenario2</span>
</span><span class='line'>  alpha <span class="o">&lt;-</span> cbind<span class="p">(</span>alpha<span class="p">,</span> <span class="m">1</span><span class="o">/</span><span class="p">(</span><span class="m">100</span><span class="o">*</span>log<span class="p">(</span>iter<span class="o">+</span><span class="m">1</span><span class="p">)))</span>
</span><span class='line'>  beta <span class="o">&lt;-</span> cbind<span class="p">(</span>beta<span class="p">,</span> <span class="m">1</span><span class="o">/</span><span class="p">(</span>log<span class="p">(</span>iter<span class="o">+</span><span class="m">1</span><span class="p">))</span><span class="o">^</span><span class="p">(</span><span class="m">0.1</span><span class="p">))</span>
</span><span class='line'><span class="c1"># scenario3</span>
</span><span class='line'>  alpha <span class="o">&lt;-</span> cbind<span class="p">(</span>alpha<span class="p">,</span> <span class="m">1</span><span class="o">/</span><span class="p">(</span>iter<span class="o">+</span><span class="m">1</span><span class="p">))</span>
</span><span class='line'>  beta <span class="o">&lt;-</span> cbind<span class="p">(</span>beta<span class="p">,</span> <span class="m">1</span><span class="o">/</span>sqrt<span class="p">(</span>iter<span class="o">+</span><span class="m">1</span><span class="p">))</span>
</span><span class='line'><span class="c1"># scenario4</span>
</span><span class='line'>  alpha <span class="o">&lt;-</span> cbind<span class="p">(</span>alpha<span class="p">,</span> <span class="m">1</span><span class="o">/</span><span class="p">(</span>iter<span class="o">+</span><span class="m">1</span><span class="p">))</span>
</span><span class='line'>  beta <span class="o">&lt;-</span> cbind<span class="p">(</span>beta<span class="p">,</span> <span class="m">1</span><span class="o">/</span><span class="p">(</span>iter<span class="o">+</span><span class="m">1</span><span class="p">)</span><span class="o">^</span><span class="p">(</span><span class="m">0.1</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dl.dropbox.com/u/142306/b/imcmr/chp5_5-7_1.png" alt="" /></p>

<p>上の図の解釈だが，この4つのシナリオの場合において</p>

<ul>
<li>シナリオ1では，動きまわる距離が大きすぎて（<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Calpha_j+>が収束するのに時間がかかって）なかなかアルゴリズムが停止しない</li>
<li>シナリオ2では，動きまわる距離が小さすぎて（<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Calpha_j+>がすぐ収束してしまって）ローカルミニマムにはまっている</li>
<li>シナリオ3では，動きまわる距離はシナリオ2より改善しているが，最大値を見つけられていない</li>
<li>シナリオ4では，上手い具合に最大値を見つけることができている</li>
</ul>


<p>ことが分かる．</p>

<p>なお，この解釈は本書（P.156）に書かれているものとは多少異なっているということを注意していただきたい．それに関しては次の疑問点のところで述べる．</p>

<h3>本問題の疑問点</h3>

<p>さて，この問題を素直に解いてもP.157の図5.7のようにはいかない．色々と試してみた結果，どうやら<strong>本書におけるシナリオ1と2の<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cbeta_j+>において，分母にかかっている0.1乗の表記がおかしい気がする．</strong>この0.1乗がlogの中の括弧にかかっていると考えて0.1*log()としてコードを組むと，値が発散しすぎてなかなか収束しなくなる．ということで，ここでは以下のように式を解釈して問題を解いた．正直なところ，これが正しいのかよくわかっていない．</p>

<ul>
<li>シナリオ1と2の<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cbeta_j+>：<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cfrac%7B1%7D%7B%5Clog%28j%2B1%29%5E%7B0.1%7D%7D+>→<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cfrac%7B1%7D%7B%28%5Clog%28j%2B1%29%29%5E%7B0.1%7D%7D+></li>
</ul>


<p>これにともなって，シナリオの図示や解釈にも少し違いが出てきている．そのため，今回は本書の解説（P.156）からは少し外れることになったが，自分がスクリプトを回して得た結果を解釈に用いた．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「山中伸弥先生に、人生とiPS細胞について聞いてみた」読了]]></title>
    <link href="http://yagays.github.com/blog/2012/11/10/review-ips-yamanaka/"/>
    <updated>2012-11-10T20:32:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/11/10/review-ips-yamanaka</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4062180162" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>このタイミングで読まなければ意味が無いと思って購入した1冊．この分野には馴染みがありiPS細胞に関して大体のところは把握していたのだが，それでも色々と面白い部分があり，自分の理解を再確認する意味でもなかなかに読み応えがある内容だった．</p>

<p>本書は2012年のノーベル生理学・医学賞を受賞された京都大学の山中伸弥教授の研究遍歴などについて書かれた自伝的作品である．前半部では主に，山中先生が研究を目指されたきっかけであったり学生時代や研究時代の様々な逸話を通して，その研究観であったり興味の移り変わりが語られる．そして，グラッドストーン研究所への留学や奈良先端科学技術大学院大学の助教授就任，京都大学への再生医科学研究所への転属といった研究の道を歩まれる中で，ノーベル賞受賞へと導いたiPS細胞の研究の話へとつながっていく．また，後半には対談形式で現在の研究に関する話も収められている．</p>

<p>題材としては研究人生であったりiPS細胞であったりと専門性があり難しい内容でありながら，語り口は非常に軽く，欄外の注釈や写真も充実しているなど，中学生・高校生から一般の人にとっても問題なく読める書き方をされている．例えばiPS細胞の遺伝子と転写因子の関係を本としおりに喩えて説明されているなど，その生物学的な特徴や細胞をリプログラミングする仕組みのみならず，研究する動機となったES細胞の倫理的側面や今後の医療への応用の展望などもあわせて紹介されている．</p>

<p>ノーベル賞受賞を受けて出版というだけあって，ニュースだけの情報に物足なさを感じる人向けの気軽に読める1冊となっている．iPS細胞というトピックに関して，現状としては取り敢えず今は本書を読んでおけば問題ないんじゃないだろうか．ただし，これから問題になるであろう倫理問題や研究を促進するための法的整備などの詳しい話はあまり触れられていないので，そっちが読みたい人はむしろ少し前のES細胞周りの文献を当たった方が良さそうな気がする．個人的な要望としては，もう少し世間が落ち着いてiPS細胞に対する評価がまとまった頃に，今度はもっと詳しい内容で研究競争などの専門的な話を盛り込んだ本を出していただきたいところ．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「データ解析のための統計モデリング入門」読書ノート 7章 無限混合分布の生成過程をアニメーションにした]]></title>
    <link href="http://yagays.github.com/blog/2012/11/09/glm-mcmc-chp7-2/"/>
    <updated>2012-11-09T00:25:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/11/09/glm-mcmc-chp7-2</id>
    <content type="html"><![CDATA[<ul>
<li>まとめ：<a href="http://yagays.github.com/blog/2012/10/14/review-glm-mcmc/">「データ解析のための統計モデリング入門」読書ノート</a></li>
<li>前回：<a href="http://yagays.github.com/blog/2012/11/02/glm-mcmc-chp7/">「データ解析のための統計モデリング入門」読書ノート 7章 GLMMとGLMを比較する</a></li>
</ul>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=400006973X" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<h3>一言で言うと</h3>

<p>「データ解析のための統計モデリング入門」P.157 図7.8とP.158 図7.9の分布を混ぜる過程をアニメーションにした．無限混合分布に関して手元の資料であまり情報が無かったことがあり，検算のためにと計算したときに作ったものだが，意外とうまく作れたんじゃないかと思う．</p>

<h3>GLMMの最尤推定と積分</h3>

<p>個体差<img src=http://chart.apis.google.com/chart?cht=tx&chl=r_i+>を考慮に入れた今回のGLMMでは，尤度<img src=http://chart.apis.google.com/chart?cht=tx&chl=L_i+>を以下の式のように積分をして<img src=http://chart.apis.google.com/chart?cht=tx&chl=r_i+>を消す．</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=L_i+%3D+%5Cint_%7B-%5Cinfty%7D%5E%7B%5Cinfty%7Dp%28y_i%7C%5Cbeta_1%2C%5Cbeta_2%2Cr_i%29p%28r_i%7Cs%29dr_i+></p>

<p>これはすなわち，<img src=http://chart.apis.google.com/chart?cht=tx&chl=p%28y_i%7C%5Cbeta_1%2C%5Cbeta_2%2Cr_i%29>と<img src=http://chart.apis.google.com/chart?cht=tx&chl=p%28r_i%7Cs%29+>を混ぜあわせた無限混合分布となっている．</p>

<h3>アニメーション作成過程</h3>

<p>今回は，P.157 図7.8とP.158 図7.9の2つの図をアニメーションとして表現してみた．それぞれの実験のパラメータは以下の通り．</p>

<ul>
<li><p>二項分布と正規分布</p>

<ul>
<li><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cbeta+%3D+0+></li>
<li><img src=http://chart.apis.google.com/chart?cht=tx&chl=q+%3D+%5Cfrac%7B1%7D%7B1%2B%5Cexp%28-%28%5Cbeta+%2B+r%29%29%7D+></li>
</ul>
</li>
<li><p>ポアソン分布と正規分布</p>

<ul>
<li><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cbeta+%3D+0.5+></li>
<li><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Clambda+%3D+%5Cexp%28%5Cbeta+%2B+r%29+></li>
</ul>
</li>
</ul>


<p>ただし，無限混合分布に関しては，きちんと積分をして値を求めているわけではなく，rを細かく分割してそれぞれ計算した後に足しあわせているだけなので，あくまでも模式図ということで．</p>

<h3>結果</h3>

<p>gifアニメーションは少し容量が大きいので，以下のリンク先で公開している．</p>

<ul>
<li><a href="http://dl.dropbox.com/u/142306/b/glm_mcmc_7_1.gif">図7.8のアニメーション（二項分布と正規分布の無限混合分布）</a></li>
<li><a href="http://dl.dropbox.com/u/142306/b/glm_mcmc_7_2.gif">図7.9のアニメーション（ポアソン分布と正規分布の無限混合分布）</a></li>
</ul>


<p>以下のプロットは，その中から1枚だけ抜き出した例となっている．左の図は二項分布/ポアソン分布の変化，中央の図は正規分布と<img src=http://chart.apis.google.com/chart?cht=tx&chl=r+>の値，右の図は混合分布の変化を示している．rを小さい値から大きい値にかけて変化させていったときの，二項分布/ポアソン分布の変化と混合分布の形の変化がわかる．</p>

<p><img src="http://dl.dropbox.com/u/142306/b/glm_mcmc_7_1.png" alt="" /></p>

<p>以下ソースコード．</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>library<span class="p">(</span>animation<span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 図 7.8</span>
</span><span class='line'>infinitemix <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(){</span>
</span><span class='line'>  par<span class="p">(</span>mfrow<span class="o">=</span>c<span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">3</span><span class="p">))</span>
</span><span class='line'>  q <span class="o">&lt;-</span> numeric<span class="p">(</span><span class="m">1</span><span class="p">)</span>
</span><span class='line'>  <span class="kr">for</span><span class="p">(</span>r in seq<span class="p">(</span><span class="m">-5</span><span class="p">,</span> <span class="m">5</span><span class="p">,</span> length<span class="o">=</span><span class="m">100</span><span class="p">)){</span>
</span><span class='line'>    b <span class="o">&lt;-</span> dbinom<span class="p">(</span><span class="m">0</span>:<span class="m">8</span><span class="p">,</span> <span class="m">8</span><span class="p">,</span> <span class="p">(</span><span class="m">1</span><span class="o">/</span><span class="p">(</span><span class="m">1</span><span class="o">+</span>exp<span class="p">(</span><span class="o">-</span>r<span class="p">))))</span>
</span><span class='line'>    n <span class="o">&lt;-</span> dnorm<span class="p">(</span>r<span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">3</span><span class="p">)</span>
</span><span class='line'>    q <span class="o">&lt;-</span> q <span class="o">+</span> b <span class="o">*</span> n
</span><span class='line'>
</span><span class='line'>    plot<span class="p">(</span><span class="m">0</span>:<span class="m">8</span><span class="p">,</span> b<span class="p">,</span> type<span class="o">=</span><span class="s">&quot;b&quot;</span><span class="p">,</span> ylim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">1</span><span class="p">),</span> xlab<span class="o">=</span><span class="s">&quot;y&quot;</span><span class="p">,</span> main<span class="o">=</span><span class="s">&quot;Binom&quot;</span><span class="p">)</span>
</span><span class='line'>    curve<span class="p">(</span>dnorm<span class="p">(</span>x<span class="p">),</span> from<span class="o">=</span><span class="m">-5</span><span class="p">,</span> to<span class="o">=</span><span class="m">5</span><span class="p">,</span> xlab<span class="o">=</span><span class="s">&quot;r&quot;</span><span class="p">,</span> main<span class="o">=</span><span class="s">&quot;Normal&quot;</span><span class="p">)</span>
</span><span class='line'>    points<span class="p">(</span>r<span class="p">,</span> dnorm<span class="p">(</span>r<span class="p">),</span> cex<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'>    segments<span class="p">(</span>r<span class="p">,</span> <span class="m">0</span><span class="p">,</span> r<span class="p">,</span> dnorm<span class="p">(</span>r<span class="p">),</span> lty<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'>    plot<span class="p">(</span><span class="m">0</span>:<span class="m">8</span><span class="p">,</span> q<span class="p">,</span> type<span class="o">=</span><span class="s">&quot;b&quot;</span><span class="p">,</span> ylim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">2</span><span class="p">),</span> xlab<span class="o">=</span><span class="s">&quot;y&quot;</span><span class="p">,</span>main<span class="o">=</span><span class="s">&quot;Infinite mixture&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>saveMovie<span class="p">(</span>infinitemix<span class="p">(),</span> interval<span class="o">=</span><span class="m">0.1</span><span class="p">,</span> moviename<span class="o">=</span><span class="s">&quot;&quot;</span><span class="p">,</span>
</span><span class='line'>          movietype<span class="o">=</span><span class="s">&quot;gif&quot;</span><span class="p">,</span> outdir<span class="o">=</span>getwd<span class="p">())</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 図 7.9</span>
</span><span class='line'>infinitemixpois <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(){</span>
</span><span class='line'>  par<span class="p">(</span>mfrow<span class="o">=</span>c<span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">3</span><span class="p">))</span>
</span><span class='line'>  q <span class="o">&lt;-</span> numeric<span class="p">(</span><span class="m">1</span><span class="p">)</span>
</span><span class='line'>  <span class="kr">for</span><span class="p">(</span>r in seq<span class="p">(</span><span class="m">-3</span><span class="p">,</span> <span class="m">3</span><span class="p">,</span> length<span class="o">=</span><span class="m">100</span><span class="p">)){</span>
</span><span class='line'>    b <span class="o">&lt;-</span> dpois<span class="p">(</span><span class="m">0</span>:<span class="m">10</span><span class="p">,</span> exp<span class="p">(</span><span class="m">0.5</span><span class="o">+</span>r<span class="p">))</span>
</span><span class='line'>    n <span class="o">&lt;-</span> dnorm<span class="p">(</span>r<span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">)</span>
</span><span class='line'>    q <span class="o">&lt;-</span> q <span class="o">+</span> b <span class="o">*</span> n
</span><span class='line'>
</span><span class='line'>    plot<span class="p">(</span><span class="m">0</span>:<span class="m">10</span><span class="p">,</span> b<span class="p">,</span> type<span class="o">=</span><span class="s">&quot;b&quot;</span><span class="p">,</span> ylim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">1</span><span class="p">),</span> xlab<span class="o">=</span><span class="s">&quot;y&quot;</span><span class="p">,</span> main<span class="o">=</span><span class="s">&quot;Poisson&quot;</span><span class="p">)</span>
</span><span class='line'>    curve<span class="p">(</span>dnorm<span class="p">(</span>x<span class="p">),</span> from<span class="o">=</span><span class="m">-4</span><span class="p">,</span> to<span class="o">=</span><span class="m">4</span><span class="p">,</span> xlab<span class="o">=</span><span class="s">&quot;r&quot;</span><span class="p">,</span> main<span class="o">=</span><span class="s">&quot;Normal&quot;</span><span class="p">)</span>
</span><span class='line'>    points<span class="p">(</span>r<span class="p">,</span> dnorm<span class="p">(</span>r<span class="p">),</span> cex<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'>    segments<span class="p">(</span>r<span class="p">,</span> <span class="m">0</span><span class="p">,</span> r<span class="p">,</span> dnorm<span class="p">(</span>r<span class="p">),</span> lty<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'>    plot<span class="p">(</span><span class="m">0</span>:<span class="m">10</span><span class="p">,</span> q<span class="p">,</span> type<span class="o">=</span><span class="s">&quot;b&quot;</span><span class="p">,</span> ylim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">5</span><span class="p">),</span> xlab<span class="o">=</span><span class="s">&quot;y&quot;</span><span class="p">,</span> main<span class="o">=</span><span class="s">&quot;Infinite mixture&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>saveMovie<span class="p">(</span>infinitemixpois<span class="p">(),</span> interval<span class="o">=</span><span class="m">0.1</span><span class="p">,</span> moviename<span class="o">=</span><span class="s">&quot;infinitemixpois&quot;</span><span class="p">,</span>
</span><span class='line'>          movietype<span class="o">=</span><span class="s">&quot;gif&quot;</span><span class="p">,</span> outdir<span class="o">=</span>getwd<span class="p">())</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jekyll/Octopressのフッターにクリエイティブ・コモンズ・ライセンスを書き加える]]></title>
    <link href="http://yagays.github.com/blog/2012/11/08/creative-commons-jekyll-octopress-footer/"/>
    <updated>2012-11-08T06:35:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/11/08/creative-commons-jekyll-octopress-footer</id>
    <content type="html"><![CDATA[<p>このBlogも書き始めてから半年ほど経ち投稿した記事も増えてきたので，前々からやろうと思っていたクリエイティブ・コモンズのライセンスを付けることにした．ライセンスはもう既に貼り終えていて，個別記事すべてをカバーできる場所に配置するように，ページ一番下のフッターに記述している．</p>

<p>今回は，クリエイティブ・コモンズの公式ウェブサイトからテンプレートを作成し，それをJekyll/Octopress用に少し変更した上でfooter.htmlを書き換えるという一連の作業を，メモとしてまとめてみた．</p>

<h3>テンプレートを作成する</h3>

<p>クリエイティブ・コモンズのライセンスを表明するには，<a href="http://creativecommons.org/">公式ウェブサイト</a>からライセンス付与の書式を作成してウェブページに貼り付ける方法が一番簡単である．まずは以下のページにアクセスして，ライセンスの種類とその他の情報を付加したHTMLコードを作成する．</p>

<ul>
<li><a href="http://creativecommons.org/choose/">http://creativecommons.org/choose/</a></li>
</ul>


<p><img src="http://dl.dropbox.com/u/142306/b/cc_1.png" alt="http://creativecommons.org/choose/のスクリーンショット" /></p>

<p>(<a href="http://creativecommons.org/choose/">http://creativecommons.org/choose/</a>のスクリーンショット)</p>

<p>HTLMコードの作成で必ず行わなければ行けないは，左上のボックスにあるライセンスの選択の部分だ．ここの選択肢によって，BY・NC・SA・NDのライセンス選択が行われる．「License Jurisdiction」に関しては，CC-Lisence3.0から「国際」と呼ばれるUnported版を選択できるようになっているようだ．必要がなければ特に変更しなくても問題ないと想われる．</p>

<p>また，左下のボックスには，HTMLコードに付加する情報を入力できるようになっている．貼り付けるウェブサイトのタイトルや著者情報を入力すると，それらの情報がHTMLコードの文面の中にRDFのタグとともにメタデータとして組み込まれる．これらは必須項目ではないが，今回はウェブサイトのタイトルと著者名を入力しておいて，あとで書き換えることにする．</p>

<p>以上の情報を選択/入力して出来上がったHTMLコードが，右下のボックスに表示される．ボックス上側のプレビューで表示されるライセンスのアイコンとテキストに問題がなければ，ボックス下側に表示されるHTMLコードをコピーして，自分のウェブサイトのどこかのに貼り付ければ完了となる．</p>

<h3>ブログのタイトルと作成者の名前をJekyll/Octopress風に書き換える</h3>

<p>さて，今回は上で作成したテンプレートを少し書き換えて，Jekyll/Octopressの設定を利用したHTMLコードにする．書き換えるといっても最終的にウェブページに表示されるテキストは全く変化しないが，テンプレート内に決め打ちで書かれているウェブサイトのタイトルと著者名を，Jekyll/Octopressの_config.ymlに登録されている情報を使って置換するようにする．</p>

<p>具体的な書き方としては，以下のようにfooter.htmlに書き込むと，</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{{ site.title }} by {{ site.author }}
</span></code></pre></td></tr></table></div></figure>


<p>実際にウェブページに表示されるテキストは</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>Wolfeyes Bioinformatics beta by yag_ays
</span></code></pre></td></tr></table></div></figure>


<p>このように_config.ymlに登録したウェブサイトのタイトルと著者名に変換される．</p>

<h3>フッターを書き換える</h3>

<p>このような表記を使って，source/_includes/custom/footer.htmlを以下のコードに書き換える．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;hr&gt;</span>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span><span class='line'>  <span class="nt">&lt;a</span> <span class="na">rel=</span><span class="s">&quot;license&quot;</span> <span class="na">href=</span><span class="s">&quot;http://creativecommons.org/licenses/by/3.0/&quot;</span><span class="nt">&gt;&lt;img</span> <span class="na">alt=</span><span class="s">&quot;Creative Commons License&quot;</span> <span class="na">style=</span><span class="s">&quot;border-width:0&quot;</span> <span class="na">src=</span><span class="s">&quot;http://i.creativecommons.org/l/by/3.0/88x31.png&quot;</span> <span class="nt">/&gt;&lt;/a&gt;</span>
</span><span class='line'>  <span class="nt">&lt;br</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;span</span> <span class="na">xmlns:dct=</span><span class="s">&quot;http://purl.org/dc/terms/&quot;</span> <span class="na">property=</span><span class="s">&quot;dct:title&quot;</span><span class="nt">&gt;</span>{{ site.title }}<span class="nt">&lt;/span&gt;</span> by <span class="nt">&lt;span</span> <span class="na">xmlns:cc=</span><span class="s">&quot;http://creativecommons.org/ns#&quot;</span> <span class="na">property=</span><span class="s">&quot;cc:attributionName&quot;</span><span class="nt">&gt;</span>{{ site.author }}<span class="nt">&lt;/span&gt;</span> is licensed under a <span class="nt">&lt;a</span> <span class="na">rel=</span><span class="s">&quot;license&quot;</span> <span class="na">href=</span><span class="s">&quot;http://creativecommons.org/licenses/by/3.0/&quot;</span><span class="nt">&gt;</span>Creative Commons Attribution 3.0 Unported License<span class="nt">&lt;/a&gt;</span>.
</span><span class='line'>  <span class="nt">&lt;br</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;credit&quot;</span><span class="nt">&gt;</span>Powered by <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://octopress.org&quot;</span><span class="nt">&gt;</span>Octopress<span class="nt">&lt;/a&gt;&lt;/span&gt;</span>
</span><span class='line'><span class="nt">&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>すると，ウェブページの一番下のフッターの部分に，このようにクリエイティブ・コモンズのラインセンスを付けることができる（下のスクリーンショットの枠は別）．ウェブサイトのタイトルや著者名も正しく変換されていることがわかる．</p>

<p><img src="http://dl.dropbox.com/u/142306/b/cc_2.png" alt="" /></p>

<h3>まとめ</h3>

<p>といった感じで，このサイトをCC BYにしてライセンスを表記してみた．作品の利用条件は「表示/BY」のみなので，このサイトのクレジットさえ表示すれば，このサイトのコンテンツを改変して発表したり営利目的で利用できるようになっている．</p>

<p>あと，これは書き手の問題だが，これまで書いてきたテキストの中から文書を引用しているものに関しては，その中にCCのSAが含まれていれば個別にクリエイティブ・コモンズ・ライセンスを継承する必要がある．今回自分のウェブサイトにクリエイティブ・コモンズ・ライセンスを付与するにあたり，各リンク先を見てCCのSAがあるかどうかを確認したが，特に見当たらなかった．というわけでこれまでの記事に関しては問題は無いが，これから記事を書く際にはその辺りを注意しつつ書く必要がある．そういう意味では，クリエイティブ・コモンズ・ライセンスを表記することで，ウェブサイトには特に変化はないものの，記事を書く側の人間の意識はだいぶ変わるものだと感じた．</p>

<h4>参考</h4>

<ul>
<li><a href="http://www.baldanders.info/spiegel/log2/000425.shtml">Creative Commons Lisence 3.0 日本版ドラフト &#8211; Baldanders.info</a></li>
<li><a href="http://tokkono.cute.coocan.jp/blog/slow/index.php/programming/making-blog-with-jekyll/">WordPressよりjekyllで本格的ブログを作りたくなる、かもしれないまとめ | ゆっくりと…</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「TN君の伝記」読了]]></title>
    <link href="http://yagays.github.com/blog/2012/11/07/review-tn-biography/"/>
    <updated>2012-11-07T13:28:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/11/07/review-tn-biography</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4834018849" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>TN君の本当の名前は，とうとう本書の中には出てこなかった．しかし，TN君が生きた19世紀後半という時代，世の中の大きな流れ，政治や生活などの急激な変化，そしてTN君が何を思い何を考え，何をしてきたかについて，彼の名前よりも重要な何かがこの本の中で描かれている．</p>

<p>本書は，19世紀後半に生き，ルソーの思想をいち早く日本に広め，自由民権運動の活動家として活躍した思想家である中江兆民の伝記的小説である．彼が生まれそして亡くなるまでの約50年間の人生と，その時代を取り巻く世相や事件を扱った1冊だ．本書は福音館書店から出版される児童文学の中の1冊であり，本には「小学校上級以上」という読者の目安が書かれている．読みやすいように本文の漢字の大半にはフリガナがふられているが，だからといって子供向けの安易な置き換えがごまかしのようなものが含まれているわけではない．近代史についてほとんど知らないような子供が読んでもわかるように，時代背景から当時の日本の階級制度，人々の生活に至るまで，とても分かりやすく丁寧に紹介しながらTN君の人生が描かれる．</p>

<p>本当であれば，本書の内容，つまりTN君の人生や思想に関して自分の意見や感想を書きたいところなのだけれども，僕は哲学や政治そして近代史に関して何か書けるだけの知識が殆どないので，代わりに別のことを書こうと思う．</p>

<p>僕は本書を読み終えて，このTN君の人生にある人のことを思い浮かべた．それは，数年前に亡くなった音楽の指揮者の先生のことなのだが，その先生の性格や人柄，そして人生までもが，本書で描かれるTN君そのもののように思えてならなかった．もちろんその先生の人生を僕が実際に見てきたわけではないし何か書籍として残っているわけでもない．ほとんどすべてのことは先生自身や周りの人たちから伝え聞いたことばかりなのだが，もしかしたらTN君と同じように確固たる志をもって人生を歩まれてきたのかなと，どうしてもTN君とその先生のことを重ねてしまう．その先生は，戦争が始まる少し前に生まれ，戦後の混乱のさなか音楽を勉強され音楽家になられたという話だ．そして今でも名前が残る有名な指揮者に師事され，その後指揮者として活躍される．一時は音大の先生にならないかと誘われるほどではあったものの，大学に入って教壇に立つよりかは楽団の指揮者として若者に指導したいということで，その誘いを断りそれから様々な楽団を立ち上げ音楽活動を積極的におこなってきたという．そして，その先生の晩年に僕は生徒として関わりを持つことになった．先生からは音楽から人生の教訓に至るまで様々なことを教えてもらったと同時に，先生との関わりの中でもっと自分にできることがあったのではないかと今でも当時のことを思い返しては考えることがある．結局は5年ほどの本当に短い付き合いとなってしまったが，僕の中での先生はまさに本書のTN君そのものだった．</p>

<p>本書を読んだ後は，少しばかり先生のことを色々と思い出し感慨にふけってしまった．これもおそらく本書におけるTN君の人間としての描き方が見事であったからであり，歴史上の偉人としてではなく，人間的な部分までを含めた一人の人間を見事に描ききったという点で，本書は非常に優れた伝記的小説であると言える．読み始める前の僕は明治維新などの近代史に全く興味がなく，各所で絶賛されていたがために本書を手にとって読み始めたのだが，読んでいるうちにすっかり引きこまれてしまった．歴史や登場人物の知識が無くとも問題なく読めるという意味でも，一般向けに洗練された読み応えのある本だった．</p>

<h4>影響を受けた書評</h4>

<ul>
<li><a href="http://cruel.org/cut/cut199506.html">CUT 1995.06 Book Review</a> （これは「<a href="http://www.amazon.co.jp/gp/product/4794964153/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4794964153&linkCode=as2&tag=yagays-22">新教養主義宣言</a><img src="http://www.assoc-amazon.jp/e/ir?t=yagays-22&l=as2&o=9&a=4794964153" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />」にもコメント付きで掲載されている）</li>
<li><a href="http://brevis.exblog.jp/19032748/">書評：　「TN君の伝記」　なだ・いなだ : タイム・コンサルタントの日誌から</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「Rによるモンテカルロ法入門」読書ノート：5章 モンテカルロ最適化 確率的探索 その2]]></title>
    <link href="http://yagays.github.com/blog/2012/11/06/imcmr-5-3/"/>
    <updated>2012-11-06T11:25:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/11/06/imcmr-5-3</id>
    <content type="html"><![CDATA[<ul>
<li>読書ノート アーカイブ：<a href="http://yagays.github.com/blog/2012/10/20/archive-introducing-monte-carlo-methods-with-r/">http://yagays.github.com/blog/2012/10/20/archive-introducing-monte-carlo-methods-with-r/</a></li>
</ul>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4621065270" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<h3>例 5.4 数値的最適化法と確率的探索を比較する</h3>

<p><a href="http://yagays.github.com/blog/2012/10/30/imcmr-5-1/">例5.1</a>の続き．前回は数値的最適化法によって<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Ctheta+>の値を推定したが，今回は確率的探索による推定を行なって，両者の手法の比較を行う．問題としては，以下の対数尤度を最大化する．</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Clog+l%28%5Ctheta%7C+x_1%2C%5Cldots%2Cx_n%29+%3D+%5Csum_%7Bi%3D1%7D%5E%7Bn%7D+%5Clog+%5Cfrac%7B1%7D%7B1%2B%28x_i-%5Ctheta%29%5E2%7D+></p>

<p>この式は<img src=http://chart.apis.google.com/chart?cht=tx&chl=n+%5Crightarrow+%5Cinfty+>において<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Ctheta%5E%2A+%3D0+>になる．すなわちこれから求める推定値の答えは0ということになる．</p>

<h4>ソースコード</h4>

<p>以下のソースコードにおける変数の対応は以下のようになっている．</p>

<ul>
<li>数値的最適化法

<ul>
<li>trul：推定値</li>
<li>truv：対数尤度</li>
</ul>
</li>
<li>確率的探索

<ul>
<li>loc：推定値</li>
<li>maxv：対数尤度</li>
</ul>
</li>
</ul>


<p>なお，mcsmパッケージに付随するデモスクリプトでは，数値的最適化法における乱数を正規乱数としていたり対数尤度の関数が微妙に違っているが，今回は例5.1の解法と同様のコーシー乱数と対数尤度の式を用いている．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>ref <span class="o">&lt;-</span> rcauchy<span class="p">(</span><span class="m">5001</span><span class="p">)</span>
</span><span class='line'>f <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>y<span class="p">){</span><span class="o">-</span>sum<span class="p">(</span>log<span class="p">(</span><span class="m">1</span><span class="o">+</span><span class="p">(</span>x<span class="o">-</span>y<span class="p">)</span><span class="o">^</span><span class="m">2</span><span class="p">))}</span>
</span><span class='line'>
</span><span class='line'>maxv <span class="o">&lt;-</span> <span class="kc">NULL</span>
</span><span class='line'>loc <span class="o">&lt;-</span> <span class="kc">NULL</span>
</span><span class='line'>truv <span class="o">&lt;-</span> <span class="kc">NULL</span>
</span><span class='line'>trul <span class="o">&lt;-</span> <span class="kc">NULL</span>
</span><span class='line'>
</span><span class='line'><span class="kr">for</span> <span class="p">(</span>i in <span class="m">10</span>:length<span class="p">(</span>ref<span class="p">)){</span>
</span><span class='line'>  <span class="c1"># 数値的最適化</span>
</span><span class='line'>  x <span class="o">&lt;-</span> ref<span class="p">[</span><span class="m">1</span>:i<span class="p">]</span>
</span><span class='line'>  tru <span class="o">&lt;-</span> optimize<span class="p">(</span>f<span class="p">,</span>c<span class="p">(</span><span class="m">-5</span><span class="p">,</span><span class="m">5</span><span class="p">),</span>maximum<span class="o">=</span><span class="k-Variable">T</span><span class="p">)</span>
</span><span class='line'>  trul <span class="o">&lt;-</span> c<span class="p">(</span>trul<span class="p">,</span> tru<span class="p">$</span>max<span class="p">)</span>
</span><span class='line'>  truv <span class="o">&lt;-</span> c<span class="p">(</span>truv<span class="p">,</span> tru<span class="p">$</span>ob<span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 確率的探索</span>
</span><span class='line'>  prop <span class="o">&lt;-</span> runif<span class="p">(</span><span class="m">10</span><span class="o">^</span><span class="m">3</span><span class="p">,</span><span class="m">-5</span><span class="p">,</span><span class="m">5</span><span class="p">)</span>
</span><span class='line'>  vale <span class="o">&lt;-</span> apply<span class="p">(</span>as.matrix<span class="p">(</span>prop<span class="p">),</span><span class="m">1</span><span class="p">,</span>f<span class="p">)</span>
</span><span class='line'>  loc <span class="o">&lt;-</span> c<span class="p">(</span>loc<span class="p">,</span> prop<span class="p">[</span>order<span class="p">(</span><span class="o">-</span>vale<span class="p">)[</span><span class="m">1</span><span class="p">]])</span>
</span><span class='line'>  maxv <span class="o">&lt;-</span> c<span class="p">(</span>maxv<span class="p">,</span> max<span class="p">(</span>vale<span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>par<span class="p">(</span>mar<span class="o">=</span>c<span class="p">(</span><span class="m">4</span><span class="p">,</span><span class="m">4</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">1</span><span class="p">),</span> mfrow<span class="o">=</span>c<span class="p">(</span><span class="m">2</span><span class="p">,</span><span class="m">1</span><span class="p">))</span>
</span><span class='line'>plot<span class="p">(</span>trul<span class="p">,</span> loc<span class="p">,</span> cex<span class="o">=</span><span class="m">.5</span><span class="p">,</span> pch<span class="o">=</span><span class="m">19</span><span class="p">,</span> xlab<span class="o">=</span>expression<span class="p">(</span>theta<span class="o">^</span><span class="m">0</span><span class="p">),</span> ylab<span class="o">=</span>expression<span class="p">(</span>hat<span class="p">(</span>theta<span class="p">)))</span>
</span><span class='line'>abline<span class="p">(</span>a<span class="o">=</span><span class="m">0</span><span class="p">,</span> b<span class="o">=</span><span class="m">1</span><span class="p">,</span> col<span class="o">=</span><span class="s">&quot;grey&quot;</span><span class="p">)</span>
</span><span class='line'>plot<span class="p">(</span><span class="m">10</span>:length<span class="p">(</span>ref<span class="p">),</span> <span class="p">(</span>truv<span class="o">-</span>maxv<span class="p">)</span><span class="o">/</span>abs<span class="p">(</span>truv<span class="p">),</span> type<span class="o">=</span><span class="s">&quot;l&quot;</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">,</span> xlab<span class="o">=</span><span class="s">&quot;Sample size&quot;</span><span class="p">,</span> ylab<span class="o">=</span><span class="s">&quot;Relative error&quot;</span><span class="p">,</span> ylim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">0.02</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>まず，上のプロットは，数値的最適化法による推定値を横軸に，確率的探索による推定値を縦軸に取った図となっている．真の値が<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Ctheta%5E%2A+%3D0+>なので，当然ながら両者ともに推定値は(0,0)付近に集まっている．また，推定値が外れる場合では，どちらかの値が大きくなればもう片方も大きくなるといった具合に，そのパターンはグレーの線で示した<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Ctheta%5E0+%3D+%5Chat%7B%5Ctheta%7D+>の線分の上に乗るような形となる．</p>

<p>次に，下のプロットは，横軸にサンプルサイズを取り，縦軸に推定値における対数尤度の差を取った図となっている．今回は相対的誤差なので，(数値的最適化法-確率的探索)/(数値的最適化法)といった形で値を求めている．相対的誤差が大きいということは，数値的最適化法と確率的探索それぞれ求めた対数尤度に差がある，すなわち<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Ctheta+>に差があるということで，上のプロットにおけるグレーの線分から離れれば離れるほど相対的誤差も大きくなるということになる．なお，図示しているサンプルサイズは<img src=http://chart.apis.google.com/chart?cht=tx&chl=n%3D10+>から<img src=http://chart.apis.google.com/chart?cht=tx&chl=n%3D5001+>までの値となっており，これは両者の手法がどちらも一定サイズのサンプルサイズを必要とするからである（つまり1から10までは図示していない）．</p>

<p><img src="http://dl.dropbox.com/u/142306/b/imcmr/chp5_5-4.png" alt="" /></p>

<h3>例 5.6 グローバルミニマムのまわりにローカルミニマムが配置されている関数を可視化する</h3>

<p>以下の関数の最小化を検討する．</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=h%28x%2Cy%29%3D%28x%5Csin%2820y%29%2By%5Csin%2820x%29%29%5E2%5Ccosh%28%5Csin%2810x%29x%29%2B+%28x%5Ccos%2810y%29-y%5Csin%2810x%29%29%5E2%5Ccosh%28%5Ccos%2820y%29y%29+></p>

<p>今回は可視化するだけだが，この後の例5.7などで度々登場する関数となる．3Dプロットを描写すると，(0,0)に最小値があり，その周りには山あり谷ありとローカルミニマムがたくさん配置されている関数だとわかる．この図を上から見ると，P.157のプロットのようになる．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>h <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>x<span class="p">,</span>y<span class="p">){</span>
</span><span class='line'>  <span class="p">(</span>x<span class="o">*</span>sin<span class="p">(</span><span class="m">20</span><span class="o">*</span>y<span class="p">)</span> <span class="o">+</span> y<span class="o">*</span>sin<span class="p">(</span><span class="m">20</span><span class="o">*</span>x<span class="p">))</span><span class="o">^</span><span class="m">2</span> <span class="o">*</span> cosh<span class="p">(</span>sin<span class="p">(</span><span class="m">10</span><span class="o">*</span>x<span class="p">)</span><span class="o">*</span>x<span class="p">)</span> <span class="o">+</span>
</span><span class='line'>    <span class="p">(</span>x<span class="o">*</span>cos<span class="p">(</span><span class="m">10</span><span class="o">*</span>y<span class="p">)</span> <span class="o">-</span> y<span class="o">*</span>sin<span class="p">(</span><span class="m">10</span><span class="o">*</span>x<span class="p">))</span><span class="o">^</span><span class="m">2</span> <span class="o">*</span> cosh<span class="p">(</span>cos<span class="p">(</span><span class="m">20</span><span class="o">*</span>y<span class="p">)</span><span class="o">*</span>y<span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>x <span class="o">&lt;-</span> seq<span class="p">(</span><span class="m">-3</span><span class="p">,</span> <span class="m">3</span><span class="p">,</span> le<span class="o">=</span><span class="m">435</span><span class="p">)</span>
</span><span class='line'>y <span class="o">&lt;-</span> seq<span class="p">(</span><span class="m">-3</span><span class="p">,</span> <span class="m">3</span><span class="p">,</span> le<span class="o">=</span><span class="m">435</span><span class="p">)</span>
</span><span class='line'>z <span class="o">&lt;-</span> outer<span class="p">(</span>x<span class="p">,</span> y<span class="p">,</span> h<span class="p">)</span>
</span><span class='line'>par<span class="p">(</span>bg<span class="o">=</span><span class="s">&quot;wheat&quot;</span><span class="p">,</span> mar<span class="o">=</span>c<span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">1</span><span class="p">))</span>
</span><span class='line'>persp<span class="p">(</span>x<span class="p">,</span> y<span class="p">,</span> z<span class="p">,</span> theta<span class="o">=</span><span class="m">155</span><span class="p">,</span> phi<span class="o">=</span><span class="m">30</span><span class="p">,</span> col<span class="o">=</span><span class="s">&quot;green4&quot;</span><span class="p">,</span>
</span><span class='line'>      ltheta<span class="o">=</span><span class="m">-120</span><span class="p">,</span> shade<span class="o">=</span><span class="m">0.75</span><span class="p">,</span> border<span class="o">=</span><span class="kc">NA</span><span class="p">,</span> box<span class="o">=</span><span class="kc">FALSE</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dl.dropbox.com/u/142306/b/imcmr/chp5_5-6.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「カンフーマック ―猛獣を飼いならす310の技」読了]]></title>
    <link href="http://yagays.github.com/blog/2012/11/05/review-mac-kung-fu/"/>
    <updated>2012-11-05T07:03:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/11/05/review-mac-kung-fu</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4873115825" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<h3>基本的な使い方からTerminalを駆使した設定変更まで，MacのGUIにおけるテクニックを網羅した手引書</h3>

<p>本書はいわゆる「入門書」と呼ばれるOSの使い方や各種ツールの便利な機能を紹介した本なのだが，その中でも特にショートカットや隠れた機能に絞ってマニアックな使い方を紹介するという，いかにもO&#8217;Reillyが好きそうな内容となっている．この本に登場するTipsの数は300を超え，スクリーンショットはほどほどに，紙面にはびっちりと文字が並ぶ．Tipsの対象はプレビューからSafari，Mail，Spotlight，Mission Controlなどの基本的なアプリケーションや機能に加えて，メモリの増設方法であったりOSやHDDが不調の時の対処法まで，あらゆる使い方に幅広く対応できるようなラインナップになっている．そのため，頭からざっと読んで新しいショートカットを覚えるもよし，何かしたいと思った時に逆引き辞典として使っても良しと，多彩な使い方ができる1冊だ．</p>

<p>取り敢えず私もひと通り眺めようと思ってポストイットを持って最初から最後までひと通り流し読みしたのだが，気付けばポストイットが本の上部にびっしり貼り付けられるという感じで，今まで知らなかったテクニックが非常に多かった．特に，Optionキーを組み合わさせたショートカットはかなりマニアックなものが揃っており，テキストの矩形選択やFinderの新規フォルダ作成など，この本を読まなければずっと知らなかったであろうテクニックばかりだった．また，Terminalを使って1行で設定変更が出来るTipsもかなり掲載されており，普段はインターネットで時々目にするようなHackが纏まっているのも有用だった．</p>

<p>ちなみに，O&#8217;Reillyで出版されているMacに関連した本では「<a href="http://www.amazon.co.jp/gp/product/4873112745/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4873112745&linkCode=as2&tag=yagays-22">入門 Unix for Mac OS X 第4版</a><img src="http://www.assoc-amazon.jp/e/ir?t=yagays-22&l=as2&o=9&a=4873112745" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />」というこれまたマニアックな本があるのだが，こちらはタイトルにもあるようにMacのUNIX的な使い方を紹介する本だ．こちらはこちらでUNIXコマンドの基本的な使い方に始まり，Mac OS X特有のコマンドが紹介されていたりと，なかなかユニークで面白い本になっている．本書とは方向性が全然違う本だが，Macをより一層便利に使いたいという点では共通しているだろう．内容が少し古くなっているのが難点だけれども，基本的なところは変わっていないので，特に問題ないと思われる．</p>

<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4873112745" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[学会・勉強会のUstream配信＆録画環境 on MacOSX]]></title>
    <link href="http://yagays.github.com/blog/2012/11/04/ustream-setting-on-macosx/"/>
    <updated>2012-11-04T18:43:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/11/04/ustream-setting-on-macosx</id>
    <content type="html"><![CDATA[<p>「ダダ漏れ」というバズワードを聞かなくなって久しいですが，それでも勉強会などのプレゼンテーションにおいてネット配信や録画の公開などの需要は高まっており，もはやあって当然という感じもあります．また，最近では学会などの基調講演なども録画してYouTubeで後日公開という話もよく耳にするようになりました．しかし，いざUstreamなどで配信を行おうと思っても，そもそもどうすればいいかわからない，手持ちの環境ではマトモに配信ができない，もっとクオリティを上げたい，といったように，技術的な知識を要求されたり高価な機器に依存する部分があるなど，色々なレベルで難しいところがあります．</p>

<p>そこで今回は，ある程度マシな配信&amp;録画環境を作ろうということで，僕が以前勉強会で配信を担当したときに構築した環境についてまとめてみました．今回の目標としては，</p>

<h3>コンセプト：ちょっとお金を掛けて比較的マシな配信/録画環境を作ろう</h3>

<p>という感じで，高価な機器でいきなりプロ並の配信を目指すのではなく，ちょっとお金と労力をかけることである程度マトモな配信環境を目指そうじゃないかといったスタンスになっています．ただし，この記事を書いた人間は映像/音声関係に全く素人であり，もっと良い環境構築法やテクニックなどあるとは思うので，より詳細に知りたい場合には専門家などが公開している情報を参考にしてもらえればと思います．</p>

<h4>この記事はこんな人向け</h4>

<ul>
<li>今までMacBookのFaceTimeカメラを講演者に向けてUstしてたけど，もうちょっとマシな配信がしたい</li>
<li>とりあえず音を何とかしたい</li>
<li>配信しつつ録画もしときたい．Ustの録画しょぼい</li>
</ul>


<h4>他にはこんな使い方も</h4>

<ul>
<li>ニコニコ生放送でも配信したい

<ul>
<li>ニコ生でもUstreamと同様のセッティングで配信ができます</li>
</ul>
</li>
<li>Skypeの会話をそのままUstに流したい or Ustで喋ってる裏でPCに入ってる音楽を流したい

<ul>
<li>USBオーディオ機器によってはMacBookの音を拾って流せます</li>
</ul>
</li>
</ul>


<br />


<h3>用意する機材（ハードウェア編）</h3>

<p>MacBookを中心にして，そこから音声を取ってくる部分と映像を取ってくる部分を外部のハードウェアで行う．それぞれ高画質/高音質を目指すとキリがないが，スタンダードモデルくらいのものを買えば大体は事が足りる．</p>

<ul>
<li><p><strong>MacBook</strong></p>

<ul>
<li>配信用/録画用として1台個別に用意する</li>
<li>配信と録画をしている間はCPU使用率が高くなるので，熱が出る＆ファンが回りっぱなしになる</li>
</ul>
</li>
<li><p><strong>USBオーディオ機器</strong></p>

<ul>
<li>マイクとMacBookを繋げる機器</li>
<li>ハードウェアから音量調整やミュートができるので便利</li>
<li>マイクからの音声を会場のスピーカーに流すこともできる（ハウリング注意）</li>
</ul>
</li>
<li><p><strong>マイク</strong></p>

<ul>
<li>いわゆるカラオケにあるような奴</li>
<li>ICレコーダーに付けるような小さいマイクは駄目</li>
<li>基本は講演者の近くに置くか持ってもらう．集音性の高い専用のマイクを使う手もある</li>
<li>マイクを講演者近くの壇上に置いておく場合には，マイクスタンドは必須</li>
</ul>
</li>
<li><p><strong>USBカメラまたはデジカメ</strong></p>

<ul>
<li>要はMacBookに繋いで映像を入力できればよい</li>
<li>三脚が付けられるタイプだと場所を選ばず安定して配置できるので良い</li>
<li>外部接続のカメラ無ければ最悪MacBookのFaceTimeカメラでも良いが，中継している間はMacBookで調整などの操作ができないので注意</li>
</ul>
</li>
<li><p><strong>各種ケーブルと変換アダプター</strong></p>

<ul>
<li>マイクやイヤホンの端子をUSBオーディオ機器の差し込み口に合わせないといけない

<ul>
<li>イヤホンだと6.3mmと3.5mm</li>
<li>マイクだと6.3mmとXLR</li>
</ul>
</li>
<li>この辺は変換アダプターが売られているので，それを購入すれば良い</li>
<li><p>向きとかややこしい部分があるので，分からなかったら家電量販店の売り場の人に訊く</p></li>
<li><p>講演者がいる壇上と中継する位置が遠い場合は，マイクのケーブルを延長する必要がある</p></li>
</ul>
</li>
</ul>


<h4>以下あれば嬉しいもの</h4>

<ul>
<li>イーモバイルなどのネット回線

<ul>
<li>会場にネットが無い場合は，中継用に1つ占有できる回線があると良い</li>
</ul>
</li>
<li>Ustream確認用のPC端末

<ul>
<li>中継/録画している機器とは別に，実際に流れているUstreamの画像や音声を確認できるPCがあると状況を把握しやすい</li>
</ul>
</li>
</ul>


<h4>自分の場合の構成</h4>

<ul>
<li>MacBook Early2008（いわゆる白MacBook）</li>
<li>USBオーディオ機器：ROLAND TRI-CAPTURE UA-33</li>
<li>マイク：SONY F-V420</li>
<li>USBカメラ：Logicool HD Webcam C615</li>
<li>卓上に置けるマイクスタンド</li>
<li>その他各種ケーブル・アダプター類</li>
</ul>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B004MP8AGA" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B005LFFE7I" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00009VT6P" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B001O1116G" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B006HLUJPC" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>




<br />


<h3>MacBookにFlash Media Live Encoderをインストールする (ソフトウェア編)</h3>

<ul>
<li>Flash Media Live Encoder

<ul>
<li>このソフトウェアだけで配信と録画を同時に行う</li>
<li>無料（要アカウント作成）</li>
<li><a href="http://www.adobe.com/jp/products/flash-media-encoder.html">http://www.adobe.com/jp/products/flash-media-encoder.html</a></li>
<li>画面全景：</li>
</ul>
</li>
</ul>


<p><img src="http://dl.dropbox.com/u/142306/b/ustream_4.png" alt="" /></p>

<h4>設定</h4>

<ul>
<li>VideoとAudioのデバイス設定だけは絶対に配信前に確認すること</li>
<li>せっかく専用の機材を買ったのに，じつは音声はMacBookのスピーカーで録音してましたということになりかねないので注意</li>
<li>Videoに外部接続カメラ，AudioにUSBオーディオ機器の名前が選択されていることを確認する</li>
</ul>


<p><img src="http://dl.dropbox.com/u/142306/b/ustream_1.png" alt="" /></p>

<ul>
<li>映像や音声の設定は，要求されるクオリティや配信のネットワーク環境に合わせてチューニングする</li>
</ul>


<h4>配信</h4>

<ul>
<li>Ustreamで配信する場合は，配信用のプロファイルをUstreamのウェブサイトから入手する</li>
<li>Ustreamのウェブサイトのダッシュボードから「番組設定」→「(番組名)」→「リモート」にある「Flash Media Encoder XML ファイル」をダウンロードする</li>
</ul>


<p><img src="http://dl.dropbox.com/u/142306/b/ustream_3.png" alt="" /></p>

<ul>
<li>Flash Media Live Encoderのメニューバー「File」→「Open Profile」から，先ほどダウンロードしたXMLファイルを読み込む</li>
</ul>


<p><img src="http://dl.dropbox.com/u/142306/b/ustream_2.jpg" alt="" /></p>

<ul>
<li>上のように画面右の「Stream to Flash Media Server」にFMS URLとStreamが表示されればOK</li>
<li>あとは画面下のスタートを押せば，配信が開始される</li>
</ul>


<h4>録画</h4>

<ul>
<li>配信を録画するには，画面右下の「Save to File」にチェックを入れて保存する設定にしておく</li>
</ul>


<br />


<h3>要するに</h3>

<p>MacBook＋各種機材＋FlashMediaLiveEncoderで何とかなる！！！</p>

<h3>という感じで，まとめ</h3>

<p>だいぶ大雑把に環境構築についてまとめてみたが，実際には配信環境なり会場の様子なりシチュエーションによって必要な機材や技術が左右されるだろう．最初は何がなんだか分からず取っ付きにくい部分があるが，一度実際に勉強して機材を組んで配信してみると，何が必要でどこが重要なのかといったことが見えてくると思う．もし配信などに興味がある場合は，あれこれやりたいことは沢山あるとは思うが，まずはそこそこの機材からスタートしてだんだん慣れていくという感じが一番いいんじゃないだろうか．要点だけ掴めばあとは部分部分を改良していくだけなので，比較的スムーズに上達すると思う．</p>

<h3>ちなみに：このまとめ記事ではできないこと</h3>

<ul>
<li>技術も知識もないけど手っ取り早くお金で解決したい

<ul>
<li>CEREVOのLiveSHellなどの専用機器を買って下さい</li>
</ul>
</li>
<li>講演者のPCから映像をダイレクトに取ってきて配信に流す

<ul>
<li>TwinPactみたいな機器を買って下さい（ちょっと高い）</li>
</ul>
</li>
</ul>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B0065G4GH6" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B005XDFD4M" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B0000YTMVE" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h4>参考</h4>

<ul>
<li><a href="http://mascalade.blog89.fc2.com/blog-entry-296.html">http://mascalade.blog89.fc2.com/blog-entry-296.html</a></li>
<li><a href="http://vad.seesaa.net/article/149852007.html">http://vad.seesaa.net/article/149852007.html</a></li>
<li><a href="http://d.hatena.ne.jp/i_ogi/20080326/1206516540">http://d.hatena.ne.jp/i_ogi/20080326/1206516540</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「データ解析のための統計モデリング入門」読書ノート 7章 GLMMとGLMを比較する]]></title>
    <link href="http://yagays.github.com/blog/2012/11/02/glm-mcmc-chp7/"/>
    <updated>2012-11-02T06:54:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/11/02/glm-mcmc-chp7</id>
    <content type="html"><![CDATA[<ul>
<li>前回：「データ解析のための統計モデリング入門」読書ノート：<a href="http://yagays.github.com/blog/2012/10/14/review-glm-mcmc/">http://yagays.github.com/blog/2012/10/14/review-glm-mcmc/</a></li>
</ul>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=400006973X" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>前回の読書ノートでは全体の流れを簡単に追ったが，今回は「データ解析のための統計モデリング入門」7章の一般化線形混合モデルのシミュレーションを動かしてみた．</p>

<h3>7章の概要</h3>

<p>6章までは，ある植物100個体から得られた生存種子数と葉数のデータから，その関係性をモデル化しGLMで推定してきた．7章では，個体差を取り入れたモデルを作成し，生存種子数の過分散にうまくあてはまるようなパラメータを推定する．ただし，個体差を表すパラメータを個体ごとに割り当てて最尤推定するのではなく，個体差がある分布に従うと仮定した上で，その分布のパラメータを推定する．</p>

<p>大雑把な目標としては，葉の数だけが生存種子数に効いているわけではないんだから，それぞれの個体で観測されていない/できないデータというのを考えようというもの．ただし，個体ごとに何らかの値を振って生存種子数を上手く表すことのできるモデルを組んだとしても予測には使えないので，じゃあ個体差自体を扱えるように分布を仮定してそこからランダムに値が選ばれるとする．そうすると，個体ごとにパラメータを持たせるんじゃなくて，個体のばらつきという一つのパラメータで表すことができるので，より現実的なモデルとなると同時に簡単にパラメータの推定ができるようになる．</p>

<h3>問題設定</h3>

<p>ここでは，ロジスティック回帰におけるGLMMを考える．種子生存数が二項分布</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cmathrm%7BBin%7D%28y_i%7C%5Cbeta_1%2C%5Cbeta_2%2Cs%29+%3D+%7B%7BN%7D%5Cchoose%7By_i%7D%7D+q_%7Bi%7D%5E%7By_i%7D%281-q_i%29%5E%7BN-y_i%7D+></p>

<p>に従うとした上で，そのパラメータ<img src=http://chart.apis.google.com/chart?cht=tx&chl=q_i+>を</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cmathrm%7Blogit%7D%28q_i%29+%3D+%5Cbeta_1+%2B+%5Cbeta_2+x_i+%2B+r_i+></p>

<p>とおく．ここで，個体差<img src=http://chart.apis.google.com/chart?cht=tx&chl=r_i+>は</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=r_i+%5Csim+%5Cmathcal%7BN%7D%280%2Cs%29+></p>

<p>平均0，標準誤差sの正規分布に従うとする．</p>

<h3>実験</h3>

<p>今回の実験は，なぜ応答変数が過分散の場合にGLMでは駄目でGLMMで推定すべきかを確かめるために，本書に記載されているGLMおよびGLMMの実験を1000回行なって，そのときの切片<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cbeta_1+>と傾き<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cbeta_2+>の分布を見ることにする．目標は<a href="http://eprints.lib.hokudai.ac.jp/dspace/bitstream/2115/26401/1/%E6%97%A5%E6%9C%AC%E7%94%9F%E6%85%8B%E5%AD%A656-2.pdf">「「個体差」の統計モデリング」</a>(pdf)の図11をプロットすること．</p>

<p>各実験は，葉数が2〜6枚の個体を20個体ずつ合計100個体のデータが得られたという条件で，それぞれの生存種子数をパラメータ<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cbeta_1+%3D+-4+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cbeta_2+%3D+1+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=r_i+%5Csim+%5Cmathcal%7BN%7D%280%2C3%29+>の二項乱数から生成した．このように生成したデータを用いて，GLMMとGLMを実行した．</p>

<p>この実験を1000回繰り返し，その時の<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cbeta_1+>と<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cbeta_2+>の分布をプロットしたのが以下の図となっている．左図が切片<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cbeta_1+>の分布，右図が傾き<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cbeta_2+>の分布で，それぞれ黒の線がGLMが推定した値の分布，赤の線がGLMMが推定した値の分布となっている．また，GLMとGLMMの推定値の平均を縦の点線で表している．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>library<span class="p">(</span>glmmML<span class="p">)</span>
</span><span class='line'>
</span><span class='line'>logistic <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>z<span class="p">){</span> <span class="m">1</span><span class="o">/</span><span class="p">(</span><span class="m">1</span><span class="o">+</span>exp<span class="p">(</span><span class="o">-</span>z<span class="p">))}</span>
</span><span class='line'>Niter <span class="o">&lt;-</span> <span class="m">1000</span>
</span><span class='line'>sigma <span class="o">&lt;-</span> <span class="m">3</span>
</span><span class='line'>glm_b <span class="o">&lt;-</span> matrix<span class="p">(</span><span class="m">0</span><span class="p">,</span> nrow<span class="o">=</span>Niter<span class="p">,</span> ncol<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'>glmm_b <span class="o">&lt;-</span> matrix<span class="p">(</span><span class="m">0</span><span class="p">,</span> nrow<span class="o">=</span>Niter<span class="p">,</span> ncol<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kr">for</span><span class="p">(</span>i in <span class="m">1</span>:Niter<span class="p">){</span>
</span><span class='line'>  N <span class="o">&lt;-</span> rep<span class="p">(</span><span class="m">8</span><span class="p">,</span><span class="m">100</span><span class="p">)</span>
</span><span class='line'>  x <span class="o">&lt;-</span> rep<span class="p">(</span><span class="m">2</span>:<span class="m">6</span><span class="p">,</span>each<span class="o">=</span><span class="m">20</span><span class="p">)</span>
</span><span class='line'>  re <span class="o">&lt;-</span> rnorm<span class="p">(</span><span class="m">100</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> sigma<span class="p">)</span>
</span><span class='line'>  y <span class="o">&lt;-</span> rbinom<span class="p">(</span><span class="m">100</span><span class="p">,</span> <span class="m">8</span><span class="p">,</span> prob<span class="o">=</span>logistic<span class="p">(</span><span class="m">-4</span><span class="o">+</span>x<span class="o">+</span>re<span class="p">))</span>
</span><span class='line'>  id <span class="o">&lt;-</span> <span class="m">1</span>:<span class="m">100</span>
</span><span class='line'>  d <span class="o">&lt;-</span> data.frame<span class="p">(</span>N<span class="p">,</span>x<span class="p">,</span>y<span class="p">,</span>id<span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  glm_b<span class="p">[</span>i<span class="p">,]</span> <span class="o">&lt;-</span> glm<span class="p">(</span>cbind<span class="p">(</span>y<span class="p">,</span>N<span class="o">-</span>y<span class="p">)</span> ~ x<span class="p">,</span> data<span class="o">=</span>d<span class="p">,</span> family<span class="o">=</span>binomial<span class="p">)$</span>coefficients
</span><span class='line'>  glmm_b<span class="p">[</span>i<span class="p">,]</span> <span class="o">&lt;-</span> glmmML<span class="p">(</span>cbind<span class="p">(</span>y<span class="p">,</span>N<span class="o">-</span>y<span class="p">)</span> ~ x<span class="p">,</span> data<span class="o">=</span>d<span class="p">,</span> family<span class="o">=</span>binomial<span class="p">,</span> cluster<span class="o">=</span>id<span class="p">)$</span>coefficients
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>par<span class="p">(</span>mfrow<span class="o">=</span>c<span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">2</span><span class="p">))</span>
</span><span class='line'>plot<span class="p">(</span>density<span class="p">(</span>glm_b<span class="p">[,</span><span class="m">1</span><span class="p">]),</span> xlim<span class="o">=</span>c<span class="p">(</span><span class="m">-8</span><span class="p">,</span><span class="m">0</span><span class="p">),</span> ylim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">0.8</span><span class="p">),</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">,</span> main<span class="o">=</span><span class="s">&quot;Estimate of beta_1&quot;</span><span class="p">,</span> xlab<span class="o">=</span><span class="s">&quot;&quot;</span><span class="p">)</span>
</span><span class='line'>par<span class="p">(</span>new<span class="o">=</span><span class="k-Variable">T</span><span class="p">)</span>
</span><span class='line'>plot<span class="p">(</span>density<span class="p">(</span>glmm_b<span class="p">[,</span><span class="m">1</span><span class="p">]),</span> xlim<span class="o">=</span>c<span class="p">(</span><span class="m">-8</span><span class="p">,</span><span class="m">0</span><span class="p">),</span> ylim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">0.8</span><span class="p">),</span> col<span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">,</span> main<span class="o">=</span><span class="s">&quot;Estimate of beta_1&quot;</span><span class="p">,</span> xlab<span class="o">=</span><span class="s">&quot;&quot;</span><span class="p">)</span>
</span><span class='line'>abline<span class="p">(</span>v<span class="o">=</span>mean<span class="p">(</span>glm_b<span class="p">[,</span><span class="m">1</span><span class="p">]),</span> lty<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'>abline<span class="p">(</span>v<span class="o">=</span>mean<span class="p">(</span>glmm_b<span class="p">[,</span><span class="m">1</span><span class="p">]),</span> lty<span class="o">=</span><span class="m">2</span><span class="p">,</span> col<span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>plot<span class="p">(</span>density<span class="p">(</span>glm_b<span class="p">[,</span><span class="m">2</span><span class="p">]),</span> xlim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">2</span><span class="p">),</span> ylim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">3</span><span class="p">),</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">,</span> main<span class="o">=</span><span class="s">&quot;Estimate of beta_2&quot;</span><span class="p">,</span> xlab<span class="o">=</span><span class="s">&quot;&quot;</span><span class="p">)</span>
</span><span class='line'>par<span class="p">(</span>new<span class="o">=</span><span class="k-Variable">T</span><span class="p">)</span>
</span><span class='line'>plot<span class="p">(</span>density<span class="p">(</span>glmm_b<span class="p">[,</span><span class="m">2</span><span class="p">]),</span> xlim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">2</span><span class="p">),</span> ylim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">3</span><span class="p">),</span> col<span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">,</span> main<span class="o">=</span><span class="s">&quot;Estimate of beta_2&quot;</span><span class="p">,</span> xlab<span class="o">=</span><span class="s">&quot;&quot;</span><span class="p">)</span>
</span><span class='line'>abline<span class="p">(</span>v<span class="o">=</span>mean<span class="p">(</span>glm_b<span class="p">[,</span><span class="m">2</span><span class="p">]),</span> lty<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'>abline<span class="p">(</span>v<span class="o">=</span>mean<span class="p">(</span>glmm_b<span class="p">[,</span><span class="m">2</span><span class="p">]),</span> lty<span class="o">=</span><span class="m">2</span><span class="p">,</span> col<span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">)</span>
</span><span class='line'>legend<span class="p">(</span><span class="m">1.1</span><span class="p">,</span> <span class="m">3.0</span><span class="p">,</span> c<span class="p">(</span><span class="s">&quot;glm&quot;</span><span class="p">,</span><span class="s">&quot;glmmML&quot;</span><span class="p">),</span> col<span class="o">=</span>c<span class="p">(</span><span class="m">1</span>:<span class="m">2</span><span class="p">),</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dl.dropbox.com/u/142306/b/glm_mcmc_7.png" alt="" /></p>

<p>さて，この図の解釈だが，今回データセット作成に用いた実験条件は<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cbeta_1+%3D+-4+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cbeta_2+%3D+1+>だったので，GLMMにおいて切片・傾きどちらもある程度正しい推定ができていることがわかる．逆にGLMでは，切片は過大推定，傾きは過小推定されている．また，推定値のばらつきである分布の山の裾の拡がりを見てみると，GLMMでは大きく，GLMでは小さくなっている．これはいわゆるバイアス・バリアンスのトレードオフによるものだと思われる．</p>

<h4>参考</h4>

<ul>
<li><a href="http://hosho.ees.hokudai.ac.jp/~kubo/ce/IwanamiBook.html">生態学データ解析 - 本/データ解析のための統計モデリング入門</a></li>
<li><a href="http://eprints.lib.hokudai.ac.jp/dspace/bitstream/2115/49477/7/kubostat2008f.pdf">http://eprints.lib.hokudai.ac.jp/dspace/bitstream/2115/49477/7/kubostat2008f.pdf</a></li>
<li><a href="http://eprints.lib.hokudai.ac.jp/dspace/bitstream/2115/26401/1/%E6%97%A5%E6%9C%AC%E7%94%9F%E6%85%8B%E5%AD%A656-2.pdf">http://eprints.lib.hokudai.ac.jp/dspace/bitstream/2115/26401/1/%E6%97%A5%E6%9C%AC%E7%94%9F%E6%85%8B%E5%AD%A656-2.pdf</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「Rによるモンテカルロ法入門」読書ノート：5章 モンテカルロ最適化 確率的探索]]></title>
    <link href="http://yagays.github.com/blog/2012/11/01/imcmr-5-2/"/>
    <updated>2012-11-01T02:18:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/11/01/imcmr-5-2</id>
    <content type="html"><![CDATA[<ul>
<li>読書ノート アーカイブ：<a href="http://yagays.github.com/blog/2012/10/20/archive-introducing-monte-carlo-methods-with-r/">http://yagays.github.com/blog/2012/10/20/archive-introducing-monte-carlo-methods-with-r/</a></li>
</ul>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4621065270" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<h3>例 5.3 確率的探索を使って，一様分布からのシミュレーションにより関数の最大値を求める</h3>

<p><a href="http://yagays.github.com/blog/2012/10/25/imcmr-3-1/">例 3.3</a>で積分を考えた関数<img src=http://chart.apis.google.com/chart?cht=tx&chl=h%28x%29+%3D+%5B%5Ccos%2850x%29+%2B+%5Csin%2820x%29+%5D%5E2+>について，今度はその最大値について考える．</p>

<p>今回の実験は1000回シミュレーションを行う．それぞれのシミュレーションには，まず一様乱数<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cmathcal%7BU%7D_%7B%5B0%2C1%5D%7D+%3D+u_1%2C+%5Cldots+%2C+u_m+>を1000個作成し，それぞれに関数を掛けた値の中から最大値<img src=http://chart.apis.google.com/chart?cht=tx&chl=h_%7Bm%7D%5E%7B%2A%7D+%3D+%5Cmax%28h%28u_1%29%2C+%5Cldots+%2Ch%28u_m%29%29+>を求める．</p>

<p>確率的探索といっても，今回の場合にやっていることは結局のところ定義域内で乱数を発生させて関数の値が大きいところを探しているだけとなる．今回は一様乱数で定義域内をまんべんなく探すという方法を取っているが，この後の確率的探索の例では「密度」を考えて，関数の値が大きい領域でのシミュレーションの確率を高くし，その他の関数の値の小さい領域での確率を小さくするという方法が取られる．</p>

<h4>今回のシミュレーションの仕組み</h4>

<p>今回のコードは少しややこしいので，まずは試しにシミュレーションを1回だけ行なってみよう．今回は推定値がどのように更新されていくかを見るために，単純にmax()関数を使うのではなく，cummax()関数を使用している．これにより，ベクトルの前から順に値を見ていって，最大値を更新していく様子を見ることができる．以下の図の黒の線が推定値<img src=http://chart.apis.google.com/chart?cht=tx&chl=h_%7Bm%7D%5E%7B%2A%7D+>，赤の線がoptimize()関数で求めた定義域内における関数<img src=http://chart.apis.google.com/chart?cht=tx&chl=h%28x%29+>の最大値を示している．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>h <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>x<span class="p">){(</span>cos<span class="p">(</span><span class="m">50</span><span class="o">*</span>x<span class="p">)</span> <span class="o">+</span> sin<span class="p">(</span><span class="m">20</span><span class="o">*</span>x<span class="p">))</span><span class="o">^</span><span class="m">2</span><span class="p">}</span>
</span><span class='line'>plot<span class="p">(</span>cummax<span class="p">(</span>h<span class="p">(</span>runif<span class="p">(</span><span class="m">10</span><span class="o">^</span><span class="m">3</span><span class="p">))),</span>type<span class="o">=</span><span class="s">&quot;l&quot;</span><span class="p">)</span>
</span><span class='line'>abline<span class="p">(</span>h<span class="o">=</span>optimize<span class="p">(</span>h<span class="p">,</span>int<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">1</span><span class="p">),</span> maximum<span class="o">=</span><span class="k-Variable">T</span><span class="p">)$</span>ob<span class="p">,</span>col<span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dl.dropbox.com/u/142306/b/imcmr/chp5_5-3_3.png" alt="" /></p>

<h4>実際に例5.3のシミュレーションを行う</h4>

<p>では実際に1000回のシミュレーションを行なって，推定値がどのように更新されていくのか，そしてその値がどれほどバラけるのかを見ていく．</p>

<p>以下の図が今回の結果となっている．まず，本書に載っている左図ではなく，右の赤い線が重なった図から説明する．この図は1000回シミュレーションした中から10回だけ抜き出してプロットしたものとなっている．これを見ると，最初のうちは0に近いような値から始まっていたりと値が安定しないものの，200回もすると実際の値と殆ど変わらないような推定値になり落ち着いているのがわかる．このように，値がきちんと実際の値に近づくかどうかを見るために，各イテレーションごとの最小値を求めてプロットしたのが左図となっている．灰色の部分は，イテレーションごとの推定値の幅を示しており，これを見ると，800回程度実験すれば一応どのシミュレーションでも実際の値と推定値がほぼ同じになることが分かる．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>h <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>x<span class="p">){(</span>cos<span class="p">(</span><span class="m">50</span><span class="o">*</span>x<span class="p">)</span> <span class="o">+</span> sin<span class="p">(</span><span class="m">20</span><span class="o">*</span>x<span class="p">))</span><span class="o">^</span><span class="m">2</span><span class="p">}</span>
</span><span class='line'>rangom <span class="o">&lt;-</span> h<span class="p">(</span>matrix<span class="p">(</span>runif<span class="p">(</span><span class="m">10</span><span class="o">^</span><span class="m">6</span><span class="p">),</span> ncol<span class="o">=</span><span class="m">10</span><span class="o">^</span><span class="m">3</span><span class="p">))</span>
</span><span class='line'>monitor <span class="o">&lt;-</span> t<span class="p">(</span>apply<span class="p">(</span>rangom<span class="p">,</span> <span class="m">1</span><span class="p">,</span> cummax<span class="p">))</span>
</span><span class='line'>
</span><span class='line'>par<span class="p">(</span>mfrow<span class="o">=</span>c<span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">2</span><span class="p">))</span>
</span><span class='line'>plot<span class="p">(</span>monitor<span class="p">[</span><span class="m">1</span><span class="p">,],</span> type<span class="o">=</span><span class="s">&quot;l&quot;</span><span class="p">,</span> col<span class="o">=</span><span class="s">&quot;white&quot;</span><span class="p">,</span> ylim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span> optimize<span class="p">(</span>h<span class="p">,</span>int<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">1</span><span class="p">),</span> maximum<span class="o">=</span><span class="k-Variable">T</span><span class="p">)$</span>ob<span class="p">),</span>
</span><span class='line'>     xlab<span class="o">=</span><span class="s">&quot;Iterations&quot;</span><span class="p">,</span> ylab<span class="o">=</span><span class="s">&quot;h(theta)&quot;</span><span class="p">)</span> <span class="c1"># 描写する領域をplotしているだけ</span>
</span><span class='line'>par<span class="p">(</span>new<span class="o">=</span><span class="k-Variable">T</span><span class="p">)</span>
</span><span class='line'>polygon<span class="p">(</span>c<span class="p">(</span><span class="m">1</span>:<span class="m">10</span><span class="o">^</span><span class="m">3</span><span class="p">,</span> <span class="m">10</span><span class="o">^</span><span class="m">3</span>:<span class="m">1</span><span class="p">),</span> c<span class="p">(</span>apply<span class="p">(</span>monitor<span class="p">,</span><span class="m">2</span><span class="p">,</span>max<span class="p">),</span> rev<span class="p">(</span>apply<span class="p">(</span>monitor<span class="p">,</span> <span class="m">2</span><span class="p">,</span> min<span class="p">))),</span> col<span class="o">=</span><span class="s">&quot;gray&quot;</span><span class="p">)</span>
</span><span class='line'>abline<span class="p">(</span>h<span class="o">=</span>optimize<span class="p">(</span>h<span class="p">,</span> int<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">1</span><span class="p">),</span> maximum<span class="o">=</span><span class="k-Variable">T</span><span class="p">)$</span>ob<span class="p">)</span>
</span><span class='line'>
</span><span class='line'>plot<span class="p">(</span>monitor<span class="p">[</span><span class="m">1</span><span class="p">,],</span>type<span class="o">=</span><span class="s">&quot;l&quot;</span><span class="p">,</span>col<span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">,</span> ylim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span>optimize<span class="p">(</span>h<span class="p">,</span> int<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">1</span><span class="p">),</span> maximum<span class="o">=</span><span class="k-Variable">T</span><span class="p">)$</span>ob<span class="p">),</span>
</span><span class='line'>     xlab<span class="o">=</span><span class="s">&quot;Iterations&quot;</span><span class="p">,</span> ylab<span class="o">=</span><span class="s">&quot;h(theta)&quot;</span><span class="p">)</span>
</span><span class='line'><span class="kr">for</span><span class="p">(</span>i in <span class="m">2</span>:<span class="m">10</span><span class="p">){</span>
</span><span class='line'>  lines<span class="p">(</span>monitor<span class="p">[</span>i<span class="p">,],</span>col<span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dl.dropbox.com/u/142306/b/imcmr/chp5_5-3_1.png" alt="" /></p>

<h3>練習問題 5.3 一様分布を用いたシミュレーションのパフォーマンスを向上させるために使用する定義域における制約を可視化する</h3>

<p>まず最初に注意．この問題は解けないわけではないが，厳密には間違っているらしい．訂正は<a href="http://www.ceremade.dauphine.fr/~xian/shortManual.pdf">解答</a>(pdf)に書かれているが，つまりは定義域<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cit%7B%5CTheta%7D+>の制約は，</p>

<blockquote><p><img src=http://chart.apis.google.com/chart?cht=tx&chl=x%5E2%281%2B%5Csin%283y%29%5Ccos%288x%29%29+%2B+y%5E2%282%2B%5Ccos%285x%29%5Ccos%288y%29%29+%5Cleq+1+></p></blockquote>

<p>ではなく，</p>

<blockquote><p> <img src=http://chart.apis.google.com/chart?cht=tx&chl=x%5E2%281%2B%5Csin%28%5Cfrac%7B3%7D%7By%7D%29%5Ccos%288x%29%29+%2B+y%5E2%282%2B%5Ccos%285x%29%5Ccos%288y%29%29+%5Cleq+1+></p></blockquote>

<p>としなければいけないようだ．今回はどちらの式も試してみて，本に書かれている式の何がおかしかったのを見てみる．</p>

<p>まず，左図は解答に記載されている修正後の式を使った場合，右図は本書に載っているオリジナルの式を使った場合となっている．これを見ると，左図では黒の円の中に式で表された制約の定義域が収まっているのに対し，右図では黒の円から一部制約の定義域がはみ出ているように見える．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>theta<span class="o">=</span>runif<span class="p">(</span><span class="m">10</span><span class="o">^</span><span class="m">5</span><span class="p">)</span><span class="o">*</span><span class="m">2</span><span class="o">*</span>pi
</span><span class='line'>rho <span class="o">&lt;-</span> runif<span class="p">(</span><span class="m">10</span><span class="o">^</span><span class="m">5</span><span class="p">)</span>
</span><span class='line'>xunif <span class="o">&lt;-</span> rho<span class="o">*</span>cos<span class="p">(</span>theta<span class="p">)</span><span class="o">/</span><span class="m">.77</span>
</span><span class='line'>yunif <span class="o">&lt;-</span> rho<span class="o">*</span>sin<span class="p">(</span>theta<span class="p">)</span>
</span><span class='line'>
</span><span class='line'>par<span class="p">(</span>mfrow<span class="o">=</span>c<span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">2</span><span class="p">))</span>
</span><span class='line'>plot<span class="p">(</span>xunif<span class="p">,</span> yunif<span class="p">,</span> pch<span class="o">=</span><span class="m">19</span><span class="p">,</span> cex<span class="o">=</span><span class="m">.4</span><span class="p">,</span> xlab<span class="o">=</span><span class="s">&quot;x&quot;</span><span class="p">,</span> ylab<span class="o">=</span><span class="s">&quot;y&quot;</span><span class="p">)</span>
</span><span class='line'>const <span class="o">&lt;-</span> <span class="p">(</span>xunif<span class="o">^</span><span class="m">2</span><span class="o">*</span><span class="p">(</span><span class="m">1</span><span class="o">+</span>sin<span class="p">(</span>yunif<span class="o">/</span><span class="m">3</span><span class="p">)</span><span class="o">*</span>cos<span class="p">(</span>xunif<span class="o">*</span><span class="m">8</span><span class="p">))</span><span class="o">+</span>
</span><span class='line'>  yunif<span class="o">^</span><span class="m">2</span><span class="o">*</span><span class="p">(</span><span class="m">2</span><span class="o">+</span>cos<span class="p">(</span><span class="m">5</span><span class="o">*</span>xunif<span class="p">)</span><span class="o">*</span>cos<span class="p">(</span><span class="m">8</span><span class="o">*</span>yunif<span class="p">))</span><span class="o">&lt;</span><span class="m">1</span><span class="p">)</span>
</span><span class='line'>points<span class="p">(</span>xunif<span class="p">[</span>const<span class="p">],</span> yunif<span class="p">[</span>const<span class="p">],</span> col<span class="o">=</span><span class="s">&quot;cornsilk2&quot;</span><span class="p">,</span> pch<span class="o">=</span><span class="m">19</span><span class="p">,</span>cex<span class="o">=</span><span class="m">.4</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>plot<span class="p">(</span>xunif<span class="p">,</span> yunif<span class="p">,</span> pch<span class="o">=</span><span class="m">19</span><span class="p">,</span> cex<span class="o">=</span><span class="m">.4</span><span class="p">,</span> xlab<span class="o">=</span><span class="s">&quot;x&quot;</span><span class="p">,</span> ylab<span class="o">=</span><span class="s">&quot;y&quot;</span><span class="p">)</span>
</span><span class='line'>const2 <span class="o">&lt;-</span> <span class="p">(</span>xunif<span class="o">^</span><span class="m">2</span><span class="o">*</span><span class="p">(</span><span class="m">1</span><span class="o">+</span>sin<span class="p">(</span>yunif<span class="o">*</span><span class="m">3</span><span class="p">)</span><span class="o">*</span>cos<span class="p">(</span>xunif<span class="o">*</span><span class="m">8</span><span class="p">))</span><span class="o">+</span>
</span><span class='line'>  yunif<span class="o">^</span><span class="m">2</span><span class="o">*</span><span class="p">(</span><span class="m">2</span><span class="o">+</span>cos<span class="p">(</span><span class="m">5</span><span class="o">*</span>xunif<span class="p">)</span><span class="o">*</span>cos<span class="p">(</span><span class="m">8</span><span class="o">*</span>yunif<span class="p">))</span><span class="o">&lt;</span><span class="m">1</span><span class="p">)</span>
</span><span class='line'>points<span class="p">(</span>xunif<span class="p">[</span>const2<span class="p">],</span> yunif<span class="p">[</span>const2<span class="p">],</span> col<span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">,</span> pch<span class="o">=</span><span class="m">19</span><span class="p">,</span> cex<span class="o">=</span><span class="m">.4</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dl.dropbox.com/u/142306/b/imcmr/chp5_5-3_2.png" alt="" /></p>

<p>また，この方法のパフォーマンスを測定するために，棄却された点の平均数で評価してみる．生成した乱数の総数が10<sup>5</sup> 個なので，74%は受理され，26%が棄却されたことがわかる．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>summary<span class="p">(</span>const<span class="p">)</span>
</span><span class='line'><span class="c1"># Mode   FALSE    TRUE    NA&#39;s </span>
</span><span class='line'><span class="c1"># logical   26285   73715       0</span>
</span></code></pre></td></tr></table></div></figure>


<p>それにしても，この図に何とも言えない可愛らしさを感じる，宇宙の侵略者を撃ち落とす某ゲームで見たことがあるような…．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「Rによるモンテカルロ法入門」読書ノート：5章 モンテカルロ最適化 数値的最適化法]]></title>
    <link href="http://yagays.github.com/blog/2012/10/30/imcmr-5-1/"/>
    <updated>2012-10-30T15:54:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/10/30/imcmr-5-1</id>
    <content type="html"><![CDATA[<ul>
<li>読書ノート アーカイブ：<a href="http://yagays.github.com/blog/2012/10/20/archive-introducing-monte-carlo-methods-with-r/">http://yagays.github.com/blog/2012/10/20/archive-introducing-monte-carlo-methods-with-r/</a></li>
</ul>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4621065270" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<h3>本章の概要</h3>

<p>乱数を使って最適化問題を解くには2つの方法がある．</p>

<ul>
<li>確率的探索を用いて関数の最大値を探す（本章前半）</li>
<li>シミュレーションを使って最適化する関数を近似する（本章後半，5.4以降）</li>
</ul>


<h3>内容：モンテカルロ最適化で関数の最大値を求める</h3>

<h4>最適化問題には2種類ある</h4>

<p>最適化問題には大きくわけて2種類存在する．</p>

<ul>
<li>定義域<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cit%7B%5CTheta%7D+>で関数<img src=http://chart.apis.google.com/chart?cht=tx&chl=h%28%5Ctheta%29>の極値を求める</li>
<li>定義域<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cit%7B%5CTheta%7D+>で陰的方程式<img src=http://chart.apis.google.com/chart?cht=tx&chl=g%28%5Ctheta%29+%3D+0+>の解を求める</li>
</ul>


<p>問題設定はそれぞれ違うのだが，今回は最大化問題だけを取り上げる．つまり，以下の式のように定義域<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cit%7B%5CTheta%7D+>で一番大きな値を求めたい．</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=max_%7B%5Ctheta+%5Cin+%5CTheta%7D%3Dh%28%5Ctheta%29></p>

<h4>解き方にも2種類ある</h4>

<ul>
<li>数値的手法（5.2 数値的最適化法）

<ul>
<li>目標関数の特性に強く依存する</li>
</ul>
</li>
<li>確率的手法（5.3 確率的探索）</li>
</ul>


<p>さて，ある関数のある定義域内における最大値を求めようと思った場合にじゃあどうするかというと，定義域内の値を片っ端から入れていって大きいものを探すといったアプローチと，別の分布をシミュレーションしてそこから最大値が現れるまでシミュレーションし続けるという方法の2通りがあるということになる．ここで重要になるポイントが定義域で，3章のモンテカルロ積分において積分する範囲を決めていたように，5章モンテカルロ最適化においても定義域内で最大値を探すということに繋がる．ただし，モンテカルロ積分よりもモンテカルロ最適化のほうが，全体の平均を求めるよりもピンポイントで値の大きい極値を求めるという点で，一般的に難しい．</p>

<h3>例 5.1 コーシー分布から得られたサンプルの尤度を最大化する</h3>

<h4>左の図</h4>

<p>何かしらのコーシー分布から生成された乱数<img src=http://chart.apis.google.com/chart?cht=tx&chl=%7Bx_1%2C+%5Cdots+%2Cx_n%7D>が与えられた時に，それを生成したコーシー分布<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cmathcal%7BC%7D%28%5Ctheta%2C1%29+>の<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Ctheta+>を最尤法で推定しようという問題．尤度は以下の式で表される</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=l%28%5Ctheta%7C+x_1%2C%5Cldots%2Cx_n%29+%3D+%5Cprod_%7Bi%3D1%7D%5E%7Bn%7D%5Cfrac%7B1%7D%7B1%2B%28x_i-%5Ctheta%29%5E2%7D+></p>

<p>実際に計算するときには以下の対数尤度を使う．</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Clog+l%28%5Ctheta%7C+x_1%2C%5Cldots%2Cx_n%29+%3D+%5Csum_%7Bi%3D1%7D%5E%7Bn%7D+%5Clog+%5Cfrac%7B1%7D%7B1%2B%28x_i-%5Ctheta%29%5E2%7D+></p>

<p>今回は実験として，上の尤度と対数尤度の2パターンで計算したときに，どういう違いが現れるかを示す．数式上は違いはないが，計算機上では値の取り扱いにおいて違いが出てくる．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>xm <span class="o">&lt;-</span> rcauchy<span class="p">(</span><span class="m">500</span><span class="p">)</span>
</span><span class='line'>loglik <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>y<span class="p">){</span><span class="o">-</span>sum<span class="p">(</span>log<span class="p">(</span><span class="m">1</span><span class="o">+</span><span class="p">(</span>x<span class="o">-</span>y<span class="p">)</span><span class="o">^</span><span class="m">2</span><span class="p">))}</span>
</span><span class='line'>lik <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>y<span class="p">){</span>prod<span class="p">(</span><span class="m">1</span><span class="o">/</span><span class="p">(</span><span class="m">1</span><span class="o">+</span><span class="p">(</span>x<span class="o">-</span>y<span class="p">)</span><span class="o">^</span><span class="m">2</span><span class="p">))}</span>
</span><span class='line'>
</span><span class='line'>mi <span class="o">&lt;-</span> numeric<span class="p">(</span><span class="m">500</span><span class="p">)</span>
</span><span class='line'>mi2 <span class="o">&lt;-</span> numeric<span class="p">(</span><span class="m">500</span><span class="p">)</span>
</span><span class='line'><span class="kr">for</span><span class="p">(</span>i in <span class="m">1</span>:<span class="m">500</span><span class="p">){</span>
</span><span class='line'>  x <span class="o">&lt;-</span> xm<span class="p">[</span><span class="m">1</span>:i<span class="p">]</span>
</span><span class='line'>  mi<span class="p">[</span>i<span class="p">]</span> <span class="o">&lt;-</span> optimize<span class="p">(</span>loglik<span class="p">,</span> interval<span class="o">=</span>c<span class="p">(</span><span class="m">-10</span><span class="p">,</span><span class="m">10</span><span class="p">),</span> maximum<span class="o">=</span><span class="k-Variable">T</span><span class="p">)$</span>max
</span><span class='line'>  mi2<span class="p">[</span>i<span class="p">]</span> <span class="o">&lt;-</span> optimize<span class="p">(</span>lik<span class="p">,</span> interval<span class="o">=</span>c<span class="p">(</span><span class="m">-10</span><span class="p">,</span><span class="m">10</span><span class="p">),</span>maximum<span class="o">=</span><span class="k-Variable">T</span><span class="p">)$</span>max
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>plot<span class="p">(</span>mi<span class="p">,</span> type<span class="o">=</span><span class="s">&quot;l&quot;</span><span class="p">,</span> ylim<span class="o">=</span>c<span class="p">(</span><span class="m">-5</span><span class="p">,</span> <span class="m">10</span><span class="p">),</span> ylab<span class="o">=</span><span class="s">&quot;theta&quot;</span><span class="p">,</span> xlab<span class="o">=</span><span class="s">&quot;sample size&quot;</span><span class="p">)</span>
</span><span class='line'>par<span class="p">(</span>new<span class="o">=</span><span class="k-Variable">T</span><span class="p">)</span>
</span><span class='line'>plot<span class="p">(</span>mi2<span class="p">,</span> type<span class="o">=</span><span class="s">&quot;l&quot;</span><span class="p">,</span> ylim<span class="o">=</span>c<span class="p">(</span><span class="m">-5</span><span class="p">,</span><span class="m">10</span><span class="p">),</span>col<span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">,</span> ylab<span class="o">=</span><span class="s">&quot;theta&quot;</span><span class="p">,</span> xlab<span class="o">=</span><span class="s">&quot;sample size&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>尤度で計算した(赤)と対数尤度で計算した計算(黒)を以下のプロットの左側の図に示してある．これをみると，対数尤度で計算した場合では着実に推定値が収束していくのに対し，尤度で計算した場合ではある地点で値が発散してるのがわかる．これは，Rのoptimizeにおいて，尤度を直接観察すると値が発散することがあるからである．このように，確率を扱う場合には，値が非常に小さくなることに注意しなければならない．</p>

<h4>右の図</h4>

<p>次に，上記の尤度を，摂動が加えられた尤度に置き換える．これは<img src=http://chart.apis.google.com/chart?cht=tx&chl=-%5B%5Csin%28100y%29%5D%5E2+>という0から1の間の値を取るノイズを加えている．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>perturbedloglik <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>y<span class="p">){</span><span class="o">-</span>sin<span class="p">(</span>y<span class="o">*</span><span class="m">100</span><span class="p">)</span><span class="o">^</span><span class="m">2</span> <span class="o">-</span> sum<span class="p">(</span>log<span class="p">(</span><span class="m">1</span><span class="o">+</span><span class="p">(</span>x<span class="o">-</span>y<span class="p">)</span><span class="o">^</span><span class="m">2</span><span class="p">))}</span>
</span><span class='line'>perturbedlik <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>y<span class="p">){</span><span class="o">-</span>sin<span class="p">(</span>y<span class="o">*</span><span class="m">100</span><span class="p">)</span><span class="o">^</span><span class="m">2</span> <span class="o">+</span> prod<span class="p">(</span><span class="m">1</span><span class="o">/</span><span class="p">(</span><span class="m">1</span><span class="o">+</span><span class="p">(</span>x<span class="o">-</span>y<span class="p">)</span><span class="o">^</span><span class="m">2</span><span class="p">))}</span>
</span><span class='line'>mi <span class="o">&lt;-</span> numeric<span class="p">(</span><span class="m">500</span><span class="p">)</span>
</span><span class='line'>mi2 <span class="o">&lt;-</span> numeric<span class="p">(</span><span class="m">500</span><span class="p">)</span>
</span><span class='line'><span class="kr">for</span><span class="p">(</span>i in <span class="m">1</span>:<span class="m">500</span><span class="p">){</span>
</span><span class='line'>  x <span class="o">&lt;-</span> xm<span class="p">[</span><span class="m">1</span>:i<span class="p">]</span>
</span><span class='line'>  mi<span class="p">[</span>i<span class="p">]</span> <span class="o">&lt;-</span> optimize<span class="p">(</span>perturbedloglik<span class="p">,</span> interval<span class="o">=</span>c<span class="p">(</span><span class="m">-10</span><span class="p">,</span><span class="m">10</span><span class="p">),</span> maximum<span class="o">=</span><span class="k-Variable">T</span><span class="p">)$</span>max
</span><span class='line'>  mi2<span class="p">[</span>i<span class="p">]</span> <span class="o">&lt;-</span> optimize<span class="p">(</span>perturbedlik<span class="p">,</span> interval<span class="o">=</span>c<span class="p">(</span><span class="m">-10</span><span class="p">,</span><span class="m">10</span><span class="p">),</span>maximum<span class="o">=</span><span class="k-Variable">T</span><span class="p">)$</span>max
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>plot<span class="p">(</span>mi<span class="p">,</span> type<span class="o">=</span><span class="s">&quot;l&quot;</span><span class="p">,</span> ylim<span class="o">=</span>c<span class="p">(</span><span class="m">-5</span><span class="p">,</span> <span class="m">10</span><span class="p">),</span> ylab<span class="o">=</span><span class="s">&quot;theta&quot;</span><span class="p">,</span> xlab<span class="o">=</span><span class="s">&quot;sample size&quot;</span><span class="p">)</span>
</span><span class='line'>par<span class="p">(</span>new<span class="o">=</span><span class="k-Variable">T</span><span class="p">)</span>
</span><span class='line'>plot<span class="p">(</span>mi2<span class="p">,</span> type<span class="o">=</span><span class="s">&quot;l&quot;</span><span class="p">,</span> ylim<span class="o">=</span>c<span class="p">(</span><span class="m">-5</span><span class="p">,</span><span class="m">10</span><span class="p">),</span>col<span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">,</span> ylab<span class="o">=</span><span class="s">&quot;theta&quot;</span><span class="p">,</span> xlab<span class="o">=</span><span class="s">&quot;sample size&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>これをみると，尤度に関しては左図で示したように発散してしまっている．対数尤度を見てみると，左図と比べて値がばらつきグラフがギザギザになっている．当然だが，ノイズを加えれば値がばらついてしまう．</p>

<p>(個人的な感想)右図は何が言いたいのかちょっと分からない．ここの解釈は本書では出てこないと思うのだが，尤度関数に何らかの関数が加わる状況といえば，最小二乗法などにおける正則化項を加えて過学習を押さえる場合だろうか？　正則化項は摂動というよりかは，lassoやridgeのように1次/2次の関数になるので，今回の場合みたいにノイズのようにはならないと思うのだが…．</p>

<p><img src="http://dl.dropbox.com/u/142306/b/imcmr/chp5_5-1.png" alt="" /></p>

<h3>例 5.2 Newton-Raphson法を用いて混合正規分布モデルから得られたサンプルの尤度を最大化する</h3>

<p>今回の混合正規モデルでは，</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cfrac%7B1%7D%7B4%7D%5Cmathcal%7BN%7D%28%5Cmu_1%2C1%29%2B%5Cfrac%7B3%7D%7B4%7D%5Cmathcal%7BN%7D%28%5Cmu_2%2C1%29+></p>

<p>を考える．まずは分布の形を調べるために，<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cmu_1+%3D+0+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cmu_2+%3D+2.5+>における対数尤度の分布を示してみる．そして，初期値(1,1)からスタートして，Newton-Raphson法がどのように推定値に収束していくかを図示する．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>da <span class="o">&lt;-</span> sample<span class="p">(</span>c<span class="p">(</span>rnorm<span class="p">(</span><span class="m">10</span><span class="o">^</span><span class="m">2</span><span class="p">),</span> <span class="m">2.5</span><span class="o">+</span>rnorm<span class="p">(</span><span class="m">3</span><span class="o">*</span><span class="m">10</span><span class="o">^</span><span class="m">2</span><span class="p">)))</span>
</span><span class='line'>like <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>mu<span class="p">){</span> <span class="o">-</span>sum<span class="p">(</span>log<span class="p">((</span><span class="m">0.25</span><span class="o">*</span>dnorm<span class="p">(</span>da<span class="o">-</span>mu<span class="p">[</span><span class="m">1</span><span class="p">])</span> <span class="o">+</span> <span class="m">0.75</span><span class="o">*</span>dnorm<span class="p">(</span>da<span class="o">-</span>mu<span class="p">[</span><span class="m">2</span><span class="p">]))))</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>mu1 <span class="o">&lt;-</span> seq<span class="p">(</span><span class="m">-2</span><span class="p">,</span> <span class="m">5</span><span class="p">,</span> le<span class="o">=</span><span class="m">250</span><span class="p">)</span>
</span><span class='line'>mu2 <span class="o">&lt;-</span> seq<span class="p">(</span><span class="m">-2</span><span class="p">,</span> <span class="m">5</span><span class="p">,</span> le<span class="o">=</span><span class="m">250</span><span class="p">)</span>
</span><span class='line'>lli<span class="o">=</span>matrix<span class="p">(</span><span class="m">0</span><span class="p">,</span>nco<span class="o">=</span><span class="m">250</span><span class="p">,</span>nro<span class="o">=</span><span class="m">250</span><span class="p">)</span>
</span><span class='line'><span class="kr">for</span> <span class="p">(</span>i in <span class="m">1</span>:<span class="m">250</span><span class="p">){</span>
</span><span class='line'>  <span class="kr">for</span> <span class="p">(</span>j in <span class="m">1</span>:<span class="m">250</span><span class="p">){</span>
</span><span class='line'>    lli<span class="p">[</span>i<span class="p">,</span>j<span class="p">]</span> <span class="o">&lt;-</span> like<span class="p">(</span>c<span class="p">(</span>mu1<span class="p">[</span>i<span class="p">],</span>mu2<span class="p">[</span>j<span class="p">]))</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>image<span class="p">(</span>mu1<span class="p">,</span> mu2<span class="p">,</span> <span class="o">-</span>lli<span class="p">)</span>
</span><span class='line'>contour<span class="p">(</span>mu1<span class="p">,</span> mu2<span class="p">,</span> <span class="o">-</span>lli<span class="p">,</span>nlevels<span class="o">=</span><span class="m">100</span><span class="p">,</span> add<span class="o">=</span><span class="k-Variable">T</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>sta <span class="o">&lt;-</span> c<span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">1</span><span class="p">)</span>
</span><span class='line'>mmu <span class="o">&lt;-</span> sta
</span><span class='line'><span class="kr">for</span><span class="p">(</span>i in <span class="m">1</span>:<span class="p">(</span>nlm<span class="p">(</span>like<span class="p">,</span> sta<span class="p">)$</span>it<span class="p">)){</span>
</span><span class='line'>  mmu <span class="o">&lt;-</span> rbind<span class="p">(</span>mmu<span class="p">,</span> nlm<span class="p">(</span>like<span class="p">,</span> sta<span class="p">,</span> iterlim<span class="o">=</span>i<span class="p">)$</span>est<span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>lines<span class="p">(</span>mmu<span class="p">,</span> pch<span class="o">=</span><span class="m">19</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dl.dropbox.com/u/142306/b/imcmr/chp5_5-2_1.png" alt="" /></p>

<h4>アニメーションにしてみる</h4>

<p>例が1つだけでは面白くないので，初期値をバラバラに選んで何回もシミュレーションしてみて，初期値からどのように推定値が更新されていくのかを見てみる．今回は，初期値として<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cmu_1+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cmu_2+>ともに図に表されている-2から5の範囲内でランダムに値を取るようにして，そこからのNewton-Raphson法による推定値の変化を1ステップごとにアニメーションとして作成した．それを25パターン作成して繋げている．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>library<span class="p">(</span>animation<span class="p">)</span>
</span><span class='line'>
</span><span class='line'>mixtureloglik <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>Niter<span class="p">){</span>
</span><span class='line'>  <span class="kr">for</span><span class="p">(</span>n in <span class="m">1</span>:Niter<span class="p">){</span>
</span><span class='line'>    sta <span class="o">&lt;-</span> c<span class="p">(</span>runif<span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">2</span><span class="o">-</span><span class="m">2</span><span class="p">,</span><span class="m">5</span><span class="p">),</span>runif<span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">-2</span><span class="p">,</span><span class="m">5</span><span class="p">))</span>
</span><span class='line'>    mmu <span class="o">&lt;-</span> sta
</span><span class='line'>    da <span class="o">&lt;-</span> sample<span class="p">(</span>c<span class="p">(</span>rnorm<span class="p">(</span><span class="m">10</span><span class="o">^</span><span class="m">2</span><span class="p">),</span> <span class="m">2.5</span><span class="o">+</span>rnorm<span class="p">(</span><span class="m">3</span><span class="o">*</span><span class="m">10</span><span class="o">^</span><span class="m">2</span><span class="p">)))</span>
</span><span class='line'>    <span class="kr">for</span><span class="p">(</span>i in <span class="m">1</span>:<span class="p">(</span>nlm<span class="p">(</span>like<span class="p">,</span> sta<span class="p">)$</span>it<span class="p">)){</span>
</span><span class='line'>      mmu <span class="o">&lt;-</span> rbind<span class="p">(</span>mmu<span class="p">,</span> nlm<span class="p">(</span>like<span class="p">,</span> sta<span class="p">,</span> iterlim<span class="o">=</span>i<span class="p">)$</span>est<span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="kr">for</span><span class="p">(</span>j in <span class="m">1</span>:nrow<span class="p">(</span>mmu<span class="p">)){</span>
</span><span class='line'>      image<span class="p">(</span>mu1<span class="p">,</span> mu2<span class="p">,</span> <span class="o">-</span>lli<span class="p">,</span> main<span class="o">=</span>paste<span class="p">(</span><span class="s">&quot;Iter:&quot;</span><span class="p">,</span>n<span class="p">))</span>
</span><span class='line'>      contour<span class="p">(</span>mu1<span class="p">,</span> mu2<span class="p">,</span> <span class="o">-</span>lli<span class="p">,</span>nlevels<span class="o">=</span><span class="m">100</span><span class="p">,</span> add<span class="o">=</span><span class="k-Variable">T</span><span class="p">)</span>
</span><span class='line'>      lines<span class="p">(</span>mmu<span class="p">[</span><span class="m">1</span>:j<span class="p">,</span><span class="m">1</span><span class="p">],</span>mmu<span class="p">[</span><span class="m">1</span>:j<span class="p">,</span><span class="m">2</span><span class="p">],</span> pch<span class="o">=</span><span class="m">19</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>saveMovie<span class="p">(</span>mixtureloglik<span class="p">(</span><span class="m">25</span><span class="p">),</span> interval<span class="o">=</span><span class="m">0.05</span><span class="p">,</span> moviename<span class="o">=</span><span class="s">&quot;&quot;</span><span class="p">,</span>
</span><span class='line'>          movietype<span class="o">=</span><span class="s">&quot;gif&quot;</span><span class="p">,</span> outdir<span class="o">=</span>getwd<span class="p">(),</span>
</span><span class='line'>          width<span class="o">=</span><span class="m">640</span><span class="p">,</span> height<span class="o">=</span><span class="m">480</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Rのanimationというパッケージを使用して作成している．このパッケージでは標準でmpgも出力できるらしいのだが，今回上手くいかなかったので，gifアニメとして出力したのちにImagemagickとffmpegを使用してmpgの動画として出力した．gifアニメは思いの外重いので，今回はYoutubeにアップロードした．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>convert animation.gif Rplot%d.png
</span><span class='line'><span class="nv">$ </span>ffmpeg -f image2 -i Rplot%d.png animation.mpg
</span></code></pre></td></tr></table></div></figure>




<iframe width="420" height="315" src="http://www.youtube.com/embed/ZbppoIltz3E" frameborder="0" allowfullscreen></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「TED Talks ボディランゲージが人を作る」の主張における継続のニュアンス]]></title>
    <link href="http://yagays.github.com/blog/2012/10/29/fake-it-till-you-become-it/"/>
    <updated>2012-10-29T18:38:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/10/29/fake-it-till-you-become-it</id>
    <content type="html"><![CDATA[<p>素晴らしいプレゼンテーションがあったので，ここで紹介しつつ実際に自分の人生に適用する方法を考えてみようと思う．</p>

<iframe src="http://embed.ted.com/talks/lang/ja/amy_cuddy_your_body_language_shapes_who_you_are.html" width="560" height="315" frameborder="0" scrolling="no" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>


<p>このTED Talksでは，体の状態と心の状態の相互関係の例として，ボディーランゲージが人の心理的な状態に与える影響について考察している．その中で，ボディランゲージという体を使った表現は，何らかの情報を伝える相手だけでなく発信した自分にも心理的な影響を及ぼすという科学的な実験結果が示される．そして，その効果を逆手に取ることで，自発的なボディランゲージは自分自身の心の状態を変化させ，より良いパフォーマンスを引き出すことができるということが自身の経験とともに語られる．</p>

<p>その中で，発表者であるAmy Cuddyは以下のように主張している．</p>

<blockquote><p>「だから皆さんに言いたいんです。フリをしてやり過ごすのではなく、フリを本物にしてくださいと。それが本当に自分のものになるまでやるんです。」</p>

<p><a href="http://www.aoky.net/articles/amy_cuddy/your_body_language_shapes_who_you_are.htm">http://www.aoky.net/articles/amy_cuddy/your_body_language_shapes_who_you_are.htm</a></p></blockquote>

<p>じゃあ「ふり」ってどうやるんだろう．もちろん外見を真似しようということではなく，内面や行動を目標とする人物像に近づけていこうということを言っているわけだが，これは結局のところ「なりきる」ってことなんじゃないかと思う．</p>

<p>TEDに出てきた体験談に当てはめて考えてみると，例えば優秀な生徒のふりをしようと思ってクラスで意見を発表したところ，反対意見が多数出て自分の主張は間違っていたことが後から解ったとしよう．そうしたときに，ああやっぱり自分は駄目だったんだなと諦めてしまえば，Amy Cuddyの言う「フリをしてやり過ごす」ということになってしまう．つまり優秀な生徒という役に成りきれなかったのだ．しかし，そこで怯むことなく優秀な生徒のフリを続けていれば，間違いが分かったとしてもそこから考えを巡らせて，また新しい意見や主張を導く事ができるかもしれない．そうやって役になりきった状態を続けていくうちに，気がつけば本物と区別が付かないような状態になっているということだろう．</p>

<p>原文にはこうある．</p>

<blockquote><p>&#8220;And so I want to say to you, don&#8217;t fake it till you make it. Fake it till you become it. You know? It&#8217;s not — Do it enough until you actually become it and internalie.&#8221;</p>

<p><a href="http://www.ted.com/talks/lang/ja/amy_cuddy_your_body_language_shapes_who_you_are.html">http://www.ted.com/talks/lang/ja/amy_cuddy_your_body_language_shapes_who_you_are.html</a></p></blockquote>

<p>この原文からは，makeからは一時的な変化，becomeからは本質的な変化という対比を感じる．そう考えると，「一時的にフリをするのではなくフリをし続ける」という意味で，「なりきる」という言い方には一時的なものではない継続の意味が含まれているように感じて，ぼくとしては具体的に何をすればいいのかと考えた時にしっくり来る言葉だった．</p>

<p>といっても，最初の引用で示した青木氏の訳に不満があるわけではなく，「本物にする」というのはまさにピッタリな意訳だと思う．最終的な目標はまさに「本物にする」というところにある．なので，じゃあどうやってそれを実現していこうかと考えた時に，結局は役に「なりきる」ということを続けていけばいいのかなぁという結論となった．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「Rによるモンテカルロ法入門」読書ノート：3章 重点サンプリング]]></title>
    <link href="http://yagays.github.com/blog/2012/10/28/imcmr-3-3/"/>
    <updated>2012-10-28T09:45:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/10/28/imcmr-3-3</id>
    <content type="html"><![CDATA[<ul>
<li>読書ノート アーカイブ：<a href="http://yagays.github.com/blog/2012/10/20/archive-introducing-monte-carlo-methods-with-r/">http://yagays.github.com/blog/2012/10/20/archive-introducing-monte-carlo-methods-with-r/</a></li>
</ul>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4621065270" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<h3>内容：重点サンプリングにより推定量の分散と効率を改善する</h3>

<h3>例 3.5 <img src=http://chart.apis.google.com/chart?cht=tx&chl=Z+%5Csim+%5Cmathcal%7BN%7D%280%2C1%29+>で<img src=http://chart.apis.google.com/chart?cht=tx&chl=P%28Z+%3E+4.5%29+>の確率を求める</h3>

<p>確率を求めると書いてあるが，要するに正規分布の確率密度関数において4.5からInfまでの面積（<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cint_%7B4.5%7D%5E%7B%5Cinfty%7D%5Cfrac%7B1%7D%7B%5Csqrt%7B2%5Cpi%7D%7De%5E%7B-%5Cfrac%7Bx%5E2%7D%7B2%7D%7D+dx+>）を求めるというもの．ただし，正規分布でxの値が4.5ともなると確率そのものがものすごく小さいので，普通のモンテカルロ積分で正規分布から乱数を生成したとしても，シミュレーション回数を非常に大きくしないと精度の良い値が求まらない．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>pnorm<span class="p">(</span><span class="m">-4.5</span><span class="p">,</span>log<span class="o">=</span><span class="k-Variable">T</span><span class="p">)</span>
</span><span class='line'><span class="c1"># [1] -12.59242</span>
</span><span class='line'>pnorm<span class="p">(</span><span class="m">-4.5</span><span class="p">)</span>
</span><span class='line'><span class="c1"># [1] 3.397673e-06</span>
</span></code></pre></td></tr></table></div></figure>


<p>ということで，重点サンプリングでシミュレーション回数を抑える．<img src=http://chart.apis.google.com/chart?cht=tx&chl=g%28y%29+%3D+%5Cfrac%7Be%5E%7B-y%7D%7D%7B%5Cint_%7B4.5%7D%5E%7B%5Cinfty%7De%5E%7B-x%7Ddx%7D+%3D+e%5E%7B-%28y-4.5%29%7D+>として，<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cfrac%7B1%7D%7Bm%7D%5Csum_%7Bi%3D1%7D%5E%7Bm%7D%5Cfrac%7Bf%28Y%5E%7B%28i%29%7D%29%7D%7Bg%28Y%5E%7B%28i%29%7D%29%7D+>を求める．ここで，gの選択の箇所は「gを，4.5で切り詰めた指数分布の密度<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cmathcal%7BExp%7D%281%29+>とする」ということ(P.81)．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>Nsim <span class="o">&lt;-</span> <span class="m">10</span><span class="o">^</span><span class="m">3</span>
</span><span class='line'>y <span class="o">&lt;-</span> rexp<span class="p">(</span>Nsim<span class="p">)</span><span class="o">+</span><span class="m">4.5</span>
</span><span class='line'>weit <span class="o">&lt;-</span> dnorm<span class="p">(</span>y<span class="p">)</span><span class="o">/</span>dexp<span class="p">(</span>y<span class="o">-</span><span class="m">4.5</span><span class="p">)</span>
</span><span class='line'>plot<span class="p">(</span>cumsum<span class="p">(</span>weit<span class="p">)</span><span class="o">/</span><span class="m">1</span>:Nsim<span class="p">,</span> type<span class="o">=</span><span class="s">&quot;l&quot;</span><span class="p">)</span>
</span><span class='line'>abline<span class="p">(</span>h<span class="o">=</span>pnorm<span class="p">(</span><span class="m">-4.5</span><span class="p">),</span> col<span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dl.dropbox.com/u/142306/b/imcmr/chp3_3-5_1.png" alt="" /></p>

<h3>練習問題 3.5 切り詰められた指数分布<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cmathcal%7BExp%7D%28%5Clambda%29+>をg(x)としたときの近似値の分散への影響を調べる</h3>

<p>例3.5で<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Clambda+%3D+1+>だった指数分布の値を色々と変えてみて実験する．以下の図は，<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Clambda+%3D+1%2C5%2C10%2C20+>の時の推定値の変化を示している．左上の図が例3.5と同じ条件となり，そこから右上・左下・右下と<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Clambda+>の値を大きくしている．黒の線が推定値の推移，上下の黄色の線が推定値の誤差の範囲（＝分散）となっている．
このプロットを見ると，<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Clambda+>の値が大きくなるにつれて，分散も大きくなることがわかる．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>par<span class="p">(</span>mfrow<span class="o">=</span>c<span class="p">(</span><span class="m">2</span><span class="p">,</span><span class="m">2</span><span class="p">))</span>
</span><span class='line'><span class="kr">for</span><span class="p">(</span>lambda in c<span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="m">5</span><span class="p">,</span> <span class="m">10</span><span class="p">,</span> <span class="m">20</span><span class="p">)){</span>
</span><span class='line'>  Nsim <span class="o">&lt;-</span> <span class="m">10</span><span class="o">^</span><span class="m">4</span>
</span><span class='line'>  y <span class="o">&lt;-</span> rexp<span class="p">(</span>Nsim<span class="p">)</span><span class="o">/</span>lambda<span class="o">+</span><span class="m">4.5</span>
</span><span class='line'>  weit <span class="o">&lt;-</span> dnorm<span class="p">(</span>y<span class="p">)</span><span class="o">/</span>dexp<span class="p">(</span>y<span class="o">-</span><span class="m">4.5</span><span class="p">,</span> lambda<span class="p">)</span>
</span><span class='line'>  estint <span class="o">&lt;-</span> cumsum<span class="p">(</span>weit<span class="p">)</span><span class="o">/</span><span class="m">1</span>:Nsim
</span><span class='line'>  esterr <span class="o">&lt;-</span> sqrt<span class="p">(</span>cumsum<span class="p">((</span>weit<span class="o">-</span>estint<span class="p">)</span><span class="o">^</span><span class="m">2</span><span class="p">))</span><span class="o">/</span><span class="p">(</span><span class="m">1</span>:Nsim<span class="p">)</span>
</span><span class='line'>  plot<span class="p">(</span>estint<span class="p">,</span> xlab<span class="o">=</span><span class="s">&quot;Mean and error range&quot;</span><span class="p">,</span> ylab<span class="o">=</span><span class="s">&quot;prob&quot;</span><span class="p">,</span> type<span class="o">=</span><span class="s">&quot;l&quot;</span><span class="p">,</span> main<span class="o">=</span>paste<span class="p">(</span><span class="s">&quot;lambda = &quot;</span><span class="p">,</span>lambda<span class="p">))</span>
</span><span class='line'>  lines<span class="p">(</span>estint<span class="o">+</span><span class="m">2</span><span class="o">*</span>esterr<span class="p">,</span> col<span class="o">=</span><span class="s">&quot;gold&quot;</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'>  lines<span class="p">(</span>estint<span class="o">-</span><span class="m">2</span><span class="o">*</span>esterr<span class="p">,</span> col<span class="o">=</span><span class="s">&quot;gold&quot;</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'>  abline<span class="p">(</span>h<span class="o">=</span>pnorm<span class="p">(</span><span class="m">-4.5</span><span class="p">),</span> col<span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dl.dropbox.com/u/142306/b/imcmr/chp3_3-5_2.png" alt="" /></p>

<p>また，がくっと値が変わっている部分は乱数でかなりレアな値を引いて全体的に値が引きずられたからだと思われる．weitの中から値の非常に大きいものを10個選び出して，その時の推定値の変化を見たのが以下の図になる．青の点線で示した箇所が，weitの値が非常に大きくなったポイントを示している．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>abline<span class="p">(</span>v<span class="o">=</span>seq<span class="p">(</span><span class="m">1</span><span class="p">,</span>Nsim<span class="p">)[</span>rank<span class="p">(</span>weit<span class="p">)</span><span class="o">&gt;</span>Nsim<span class="o">-</span><span class="m">10</span><span class="p">],</span> col<span class="o">=</span><span class="s">&quot;blue&quot;</span><span class="p">,</span> lty<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dl.dropbox.com/u/142306/b/imcmr/chp3_3-5_3.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「Rによるモンテカルロ法入門」読書ノート：3章 モンテカルロ積分 その2]]></title>
    <link href="http://yagays.github.com/blog/2012/10/27/imcmr-3-2/"/>
    <updated>2012-10-27T12:33:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/10/27/imcmr-3-2</id>
    <content type="html"><![CDATA[<ul>
<li>読書ノート アーカイブ：<a href="http://yagays.github.com/blog/2012/10/20/archive-introducing-monte-carlo-methods-with-r/">http://yagays.github.com/blog/2012/10/20/archive-introducing-monte-carlo-methods-with-r/</a></li>
</ul>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4621065270" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<h3>練習問題 3.1 正規・コーシー-ベイズ推定量のモンテカルロ積分を2通りの方法で計算する</h3>

<p>正規・コーシー-ベイズ推定量について，<img src=http://chart.apis.google.com/chart?cht=tx&chl=x+%3D+0%2C2%2C4+>だとしてモンテカルロ積分を計算する．</p>

<blockquote><p><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cdelta%28x%29+%3D+%5Cfrac%7B%5Cint_%7B-%5Cinfty%7D%5E%7B%5Cinfty%7D+%5Cfrac%7B%5Ctheta%7D%7B1%2B%5Ctheta%5E2%7De%5E%7B-%28x-%5Ctheta%29%5E2%2F2%7D+d%5Ctheta%7D%7B%5Cint_%7B-%5Cinfty%7D%5E%7B%5Cinfty%7D+%5Cfrac%7B1%7D%7B1%2B%5Ctheta%5E2%7De%5E%7B-%28x-%5Ctheta%29%5E2%2F2%7D+d%5Ctheta%7D+></p></blockquote>

<p>さて，この式だけだと何のことか全然分からないのだが，式中で消えている係数をしっかり書くと，</p>

<ul>
<li>分子：<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cint_%7B-%5Cinfty%7D%5E%7B%5Cinfty%7D%5Ctheta%5Ctimes%5Cfrac%7B1%7D%7B%5Cpi%281%2B%5Ctheta%5E2%29%7D%5Cfrac%7B1%7D%7B%5Csqrt%7B2%5Cpi%7D%7De%5E%7B-%28x-%5Ctheta%29%5E2%2F2%7Dd%5Ctheta+></li>
<li>分母：<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cint_%7B-%5Cinfty%7D%5E%7B%5Cinfty%7D%5Cfrac%7B1%7D%7B%5Cpi%281%2B%5Ctheta%5E2%29%7D%5Cfrac%7B1%7D%7B%5Csqrt%7B2%5Cpi%7D%7De%5E%7B-%28x-%5Ctheta%29%5E2%2F2%7Dd%5Ctheta+></li>
</ul>


<p>に分解され，結局はコーシー分布と正規分布の掛け算をしていることになる．模式的に書くと以下のようになる．</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cdelta%28x%29+%3D+%5Cfrac%7B%5Cint_%7B-%5Cinfty%7D%5E%7B%5Cinfty%7D+%5Ctheta+%5Ctimes+Cauchy+%5Ctimes+Normal%7D%7B%5Cint_%7B-%5Cinfty%7D%5E%7B%5Cinfty%7D+Cauchy+%5Ctimes+Normal%7D+></p>

<p>このように，上と下でそれぞれ積分しているので，モンテカルロ積分の実装においても上下別々に推定値を計算した後に<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cdelta%28x%29+>の推定値を求める．また，コーシー分布と正規分布を掛けた形となっているため，どちらの分布からも乱数を生成してモンテカルロ積分ができる．</p>

<p>ちなみに，本問題は4章の例4.2（P.107）にも同様の推定量を扱った問題が出てくる．</p>

<h3>a.1 被積分関数をプロットする</h3>

<p>左から順に，</p>

<ul>
<li><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cdelta%28x%29+>の分子の分布</li>
<li><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cdelta%28x%29+>の分母の分布</li>
</ul>


<p>を，<img src=http://chart.apis.google.com/chart?cht=tx&chl=x+%3D+0%2C2%2C4+>についてプロットしたのが以下の図になる．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>delta_num <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>t<span class="p">){</span>t<span class="o">/</span><span class="p">(</span><span class="m">1</span><span class="o">+</span>t<span class="o">^</span><span class="m">2</span><span class="p">)</span><span class="o">*</span>exp<span class="p">(</span><span class="o">-</span><span class="p">(</span>x<span class="o">-</span>t<span class="p">)</span><span class="o">^</span><span class="m">2</span><span class="o">/</span><span class="m">2</span><span class="p">)}</span>
</span><span class='line'>delta_den <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>t<span class="p">){</span><span class="m">1</span><span class="o">/</span><span class="p">(</span><span class="m">1</span><span class="o">+</span>t<span class="o">^</span><span class="m">2</span><span class="p">)</span><span class="o">*</span>exp<span class="p">(</span><span class="o">-</span><span class="p">(</span>x<span class="o">-</span>t<span class="p">)</span><span class="o">^</span><span class="m">2</span><span class="o">/</span><span class="m">2</span><span class="p">)}</span>
</span><span class='line'>
</span><span class='line'>par<span class="p">(</span>mfrow<span class="o">=</span>c<span class="p">(</span><span class="m">3</span><span class="p">,</span><span class="m">2</span><span class="p">))</span>
</span><span class='line'><span class="kr">for</span><span class="p">(</span>x in c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">4</span><span class="p">)){</span>
</span><span class='line'>  curve<span class="p">(</span>delta_num<span class="p">,</span> from<span class="o">=</span><span class="m">-10</span><span class="p">,</span> to<span class="o">=</span><span class="m">10</span><span class="p">,</span> main<span class="o">=</span>paste<span class="p">(</span><span class="s">&quot;numerator : x=&quot;</span><span class="p">,</span>x<span class="p">))</span>
</span><span class='line'>  curve<span class="p">(</span>delta_den<span class="p">,</span> from<span class="o">=</span><span class="m">-10</span><span class="p">,</span> to<span class="o">=</span><span class="m">10</span><span class="p">,</span> main<span class="o">=</span>paste<span class="p">(</span><span class="s">&quot;denominator : x=&quot;</span><span class="p">,</span>x<span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dl.dropbox.com/u/142306/b/imcmr/chp3_3.png" alt="" /></p>

<h3>a.2 コーシー・シミュレーションにもとづくモンテカルロ積分を計算する</h3>

<p>コーシー分布から乱数を生成してモンテカルロ積分をシミュレーションする．イテレーションごとの推定値と標準分散のプロットは<a href="http://yagays.github.com/blog/2012/10/25/imcmr-3-1/">例3.3</a>のプロットと同じで，黒の線が推定値の推移，上下の黄色の線が推定値の誤差の範囲となっている．</p>

<p>モンテカルロ積分の結果としては</p>

<ul>
<li>x=0のとき：-0.01243</li>
<li>x=2のとき：1.282</li>
<li>x=4のとき：3.389</li>
</ul>


<p>となった．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>Nsim <span class="o">&lt;-</span> <span class="m">10</span><span class="o">^</span><span class="m">4</span>
</span><span class='line'>par<span class="p">(</span>mfrow<span class="o">=</span>c<span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">3</span><span class="p">))</span>
</span><span class='line'><span class="kr">for</span><span class="p">(</span>x in c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">4</span><span class="p">)){</span>
</span><span class='line'>  theta <span class="o">&lt;-</span> rcauchy<span class="p">(</span>Nsim<span class="p">)</span>
</span><span class='line'>  num <span class="o">&lt;-</span> theta <span class="o">*</span> dnorm<span class="p">(</span>theta<span class="p">,</span> mean<span class="o">=</span>x<span class="p">)</span>
</span><span class='line'>  den <span class="o">&lt;-</span> dnorm<span class="p">(</span>theta<span class="p">,</span> mean<span class="o">=</span>x<span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  n <span class="o">&lt;-</span> num<span class="p">[</span>den <span class="o">!=</span> <span class="m">0</span><span class="p">]</span>
</span><span class='line'>  d <span class="o">&lt;-</span> den<span class="p">[</span>den <span class="o">!=</span> <span class="m">0</span><span class="p">]</span> <span class="c1"># ゼロ除算を起こさないようにしている</span>
</span><span class='line'>  y <span class="o">&lt;-</span> n <span class="o">/</span> d
</span><span class='line'>  estint <span class="o">&lt;-</span> <span class="p">(</span>cumsum<span class="p">(</span>n<span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="m">1</span>:length<span class="p">(</span>n<span class="p">)))</span> <span class="o">/</span> <span class="p">(</span>cumsum<span class="p">(</span>d<span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="m">1</span>:length<span class="p">(</span>d<span class="p">)))</span>
</span><span class='line'>  esterr <span class="o">&lt;-</span> sqrt<span class="p">(</span>cumsum<span class="p">((</span>y <span class="o">-</span> estint<span class="p">)</span><span class="o">^</span><span class="m">2</span><span class="p">))</span><span class="o">/</span><span class="p">(</span><span class="m">1</span>:length<span class="p">(</span>y<span class="p">))</span>
</span><span class='line'>  plot<span class="p">(</span>estint<span class="p">,</span> xlab<span class="o">=</span><span class="s">&quot;Iterations&quot;</span><span class="p">,</span> main<span class="o">=</span>paste<span class="p">(</span><span class="s">&quot;x = &quot;</span><span class="p">,</span>x<span class="p">,</span><span class="s">&quot;, Estimate= &quot;</span><span class="p">,</span>mean<span class="p">(</span>estint<span class="p">)),</span>
</span><span class='line'>       type<span class="o">=</span><span class="s">&quot;l&quot;</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">,</span> xlim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">10</span><span class="o">^</span><span class="m">4</span><span class="p">),</span> ylim<span class="o">=</span>c<span class="p">(</span>x<span class="o">-</span><span class="m">1</span><span class="p">,</span>x<span class="o">+</span><span class="m">1</span><span class="p">))</span>
</span><span class='line'>  lines<span class="p">(</span>estint<span class="o">+</span><span class="m">2</span><span class="o">*</span>esterr<span class="p">,</span> col<span class="o">=</span><span class="s">&quot;gold&quot;</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'>  lines<span class="p">(</span>estint<span class="o">-</span><span class="m">2</span><span class="o">*</span>esterr<span class="p">,</span> col<span class="o">=</span><span class="s">&quot;gold&quot;</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dl.dropbox.com/u/142306/b/imcmr/chp3_3-1_1.png" alt="" /></p>

<h3>b. 収束する様子を推定値の標準誤差でモニタリングする</h3>

<p>上図の黄色の幅で示してある．</p>

<h3>c. 正規近似によるモンテカルロ積分を計算する</h3>

<p>以下のグラフでは，コーシー乱数のシミュレーションのグラフを重ねてプロットすることで，コーシー乱数を使った場合と正規乱数を使った場合の標準誤差を比較をしている．正規乱数を使ったシミュレーションの結果は，赤とピンクの線で表している．このプロットを見ると，正規乱数を使った場合の方がより誤差が少なく推定値を求められることがわかる．</p>

<ul>
<li>黒＆黄色：コーシー乱数（問題 a.）</li>
<li>赤＆ピンク：正規乱数（問題 c.）</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>Nsim <span class="o">&lt;-</span> <span class="m">10</span><span class="o">^</span><span class="m">4</span>
</span><span class='line'>par<span class="p">(</span>mfrow<span class="o">=</span>c<span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">3</span><span class="p">))</span>
</span><span class='line'><span class="kr">for</span><span class="p">(</span>x in c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">4</span><span class="p">)){</span>
</span><span class='line'>  theta <span class="o">&lt;-</span> rnorm<span class="p">(</span>Nsim<span class="p">,</span> mean<span class="o">=</span>x<span class="p">)</span>
</span><span class='line'>  num <span class="o">&lt;-</span> theta <span class="o">*</span> dcauchy<span class="p">(</span>theta<span class="p">)</span>
</span><span class='line'>  den <span class="o">&lt;-</span> dcauchy<span class="p">(</span>theta<span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  n <span class="o">&lt;-</span> num<span class="p">[</span>den <span class="o">!=</span> <span class="m">0</span><span class="p">]</span>
</span><span class='line'>  d <span class="o">&lt;-</span> den<span class="p">[</span>den <span class="o">!=</span> <span class="m">0</span><span class="p">]</span>
</span><span class='line'>  y <span class="o">&lt;-</span> n <span class="o">/</span> d
</span><span class='line'>  estint <span class="o">&lt;-</span> <span class="p">(</span>cumsum<span class="p">(</span>n<span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="m">1</span>:length<span class="p">(</span>n<span class="p">)))</span> <span class="o">/</span> <span class="p">(</span>cumsum<span class="p">(</span>d<span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="m">1</span>:length<span class="p">(</span>d<span class="p">)))</span>
</span><span class='line'>  esterr <span class="o">&lt;-</span> sqrt<span class="p">(</span>cumsum<span class="p">((</span>y <span class="o">-</span> estint<span class="p">)</span><span class="o">^</span><span class="m">2</span><span class="p">))</span><span class="o">/</span><span class="p">(</span><span class="m">1</span>:length<span class="p">(</span>y<span class="p">))</span>
</span><span class='line'>  plot<span class="p">(</span>estint<span class="p">,</span> xlab<span class="o">=</span><span class="s">&quot;Iterations&quot;</span><span class="p">,</span> main<span class="o">=</span>paste<span class="p">(</span><span class="s">&quot;x = &quot;</span><span class="p">,</span>x<span class="p">,</span><span class="s">&quot;, Estimate= &quot;</span><span class="p">,</span>mean<span class="p">(</span>estint<span class="p">)),</span>
</span><span class='line'>       type<span class="o">=</span><span class="s">&quot;l&quot;</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">,</span> col<span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">,</span> xlim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">10</span><span class="o">^</span><span class="m">4</span><span class="p">),</span> ylim<span class="o">=</span>c<span class="p">(</span>x<span class="o">-</span><span class="m">1</span><span class="p">,</span>x<span class="o">+</span><span class="m">1</span><span class="p">))</span>
</span><span class='line'>  lines<span class="p">(</span>estint<span class="o">+</span><span class="m">2</span><span class="o">*</span>esterr<span class="p">,</span> col<span class="o">=</span><span class="s">&quot;pink&quot;</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'>  lines<span class="p">(</span>estint<span class="o">-</span><span class="m">2</span><span class="o">*</span>esterr<span class="p">,</span> col<span class="o">=</span><span class="s">&quot;pink&quot;</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dl.dropbox.com/u/142306/b/imcmr/chp3_3-1_3.png" alt="" /></p>

<h3>練習問題 3.9</h3>

<p>この問題は，練習問題3.1の続き．</p>

<h4>a.コーシー候補にもとづく受理・棄却アルゴリズムから推定量を計算する</h4>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=X+%5Csim+%5Cmathcal%7BN%7D%28%5Ctheta%2C1%29><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Ctheta+%5Csim+%5Cmathcal%7BC%7D%280%2C1%29>において，事後分布<img src=http://chart.apis.google.com/chart?cht=tx&chl=p%28%5Ctheta%7Cx%29+>は以下のように表される．</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=p%28%5Ctheta%7Cx%29%3D%5Cfrac%7Bp%28x%7C%5Ctheta%29p%28%5Ctheta%29%7D%7Bp%28x%29%7D></p>

<p>ここで，<img src=http://chart.apis.google.com/chart?cht=tx&chl=p%28x%7C%5Ctheta%29+%3D+%5Cfrac%7B1%7D%7B%5Csqrt%7B2%5Cpi%7D%7De%5E%7B-%5Cfrac%7B%28x-%5Ctheta%29%5E2%7D%7B2%7D%7D+>より，</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cbegin%7Balign%7D+p%28%5Ctheta%7Cx%29+%3D%26+%5Cfrac%7Bp%28%5Ctheta%29%7D%7Bp%28x%29%7D%5Cfrac%7B1%7D%7B%5Csqrt%7B2%5Cpi%7D%7De%5E%7B-%5Cfrac%7B%28x-%5Ctheta%29%5E2%7D%7B2%7D%7D+%5C%5C+%5Cpropto%26+p%28%5Ctheta%29e%5E%7B-%5Cfrac%7B%28x-%5Ctheta%29%5E2%7D%7B2%7D%7D+%5Cend%7Balign%7D+></p>

<p>となる．受理・棄却アルゴリズムにおける目標分布と候補分布は</p>

<ul>
<li>目標分布<img src=http://chart.apis.google.com/chart?cht=tx&chl=f%28%5Ctheta%29+>：<img src=http://chart.apis.google.com/chart?cht=tx&chl=p%28%5Ctheta%29e%5E%7B-%28x-%5Ctheta%29%5E2%2F2%7D></li>
<li><p>候補分布<img src=http://chart.apis.google.com/chart?cht=tx&chl=g%28%5Ctheta%29+>：<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cfrac%7B1%7D%7B%5Cpi%281%2B%5Ctheta%5E2%29%7D></p></li>
<li><p>受理・棄却条件：<img src=http://chart.apis.google.com/chart?cht=tx&chl=U%5Ctimes+M+%5Cleq+%5Cfrac%7Bf%28Y%29%7D%7Bg%28Y%29%7D+>，（<img src=http://chart.apis.google.com/chart?cht=tx&chl=Y+%5Csim+%5Cmathcal%7BC%7D%280%2C1%29+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=U+%5Csim+%5Cmathcal%7BU%7D_%7B%5B0%2C1%5D%7D>）</p></li>
</ul>


<p>のようになる．受理・棄却アルゴリズムの実験は，練習問題3.1と同様に<img src=http://chart.apis.google.com/chart?cht=tx&chl=x+%3D+0%2C2%2C4+>で実行している．以下の図は，受理された乱数のヒストグラムと，その乱数の平均値の値を赤い線で示してある．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>Nsim <span class="o">&lt;-</span> <span class="m">10</span><span class="o">^</span><span class="m">4</span>
</span><span class='line'>x <span class="o">&lt;-</span> rep<span class="p">(</span><span class="m">0</span><span class="p">,</span> Nsim<span class="p">)</span>
</span><span class='line'>M <span class="o">&lt;-</span> pi
</span><span class='line'>f <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>theta<span class="p">){</span> exp<span class="p">(</span><span class="o">-</span><span class="p">(</span>xx<span class="o">-</span>theta<span class="p">)</span><span class="o">^</span><span class="m">2</span><span class="o">/</span><span class="m">2</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="m">1</span><span class="o">+</span>theta<span class="o">^</span><span class="m">2</span><span class="p">)}</span>
</span><span class='line'>
</span><span class='line'>par<span class="p">(</span>mfrow<span class="o">=</span>c<span class="p">(</span><span class="m">3</span><span class="p">,</span><span class="m">1</span><span class="p">))</span>
</span><span class='line'><span class="kr">for</span><span class="p">(</span>xx in c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">4</span><span class="p">)){</span>
</span><span class='line'>  <span class="kr">for</span><span class="p">(</span>i in <span class="m">1</span>:Nsim<span class="p">){</span>
</span><span class='line'>    y <span class="o">&lt;-</span> rcauchy<span class="p">(</span><span class="m">1</span><span class="p">)</span>
</span><span class='line'>    <span class="kr">while</span><span class="p">(</span>runif<span class="p">(</span><span class="m">1</span><span class="p">)</span><span class="o">*</span>M <span class="o">&gt;</span> f<span class="p">(</span>y<span class="p">)</span><span class="o">/</span>dcauchy<span class="p">(</span>y<span class="p">)){</span>
</span><span class='line'>      y <span class="o">&lt;-</span> rcauchy<span class="p">(</span><span class="m">1</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    x<span class="p">[</span>i<span class="p">]</span> <span class="o">&lt;-</span> y
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  hist<span class="p">(</span>x<span class="p">,</span> freq<span class="o">=</span><span class="k-Variable">F</span><span class="p">,</span> nclass<span class="o">=</span><span class="m">150</span><span class="p">,</span> main<span class="o">=</span>paste<span class="p">(</span><span class="s">&quot;x = &quot;</span><span class="p">,</span>xx<span class="p">))</span>
</span><span class='line'>  abline<span class="p">(</span>v<span class="o">=</span>mean<span class="p">(</span>x<span class="p">),</span> col<span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dl.dropbox.com/u/142306/b/imcmr/chp3_3-9_1.png" alt="" /></p>

<h4>b. 正規・コーシー-ベイズ推定量のモンテカルロ積分における，分母と分子の乱数の選択</h4>

<p>分母と分子で同じ乱数を使う場合と違う乱数を使う場合で，どのような誤差の影響が出るかを比較する．今回は正規乱数を用いたモンテカルロ積分で試してみる．</p>

<ul>
<li>黒＆黄色：分母と分子で同じ乱数<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Ctheta_i+>を使う場合</li>
<li>青＆水色：分母と分子で違う乱数<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Ctheta_i+>を使う場合</li>
</ul>


<p>以下の図を見ると，xの値が大きい時に違う乱数を使う場合の方が標準誤差が大きい．つまり，分母と分子で別々にシミュレーションを行う際にも，乱数から生成する値を統一することで推定値の分散を押さえることができる．逆に言えば，分母と分子で別々の乱数を使うと，分母と分子どちらかが極端な値を引いてしまったときには推定値が変な値を取ってしまう場合がある．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>Nsim <span class="o">&lt;-</span> <span class="m">10</span><span class="o">^</span><span class="m">4</span>
</span><span class='line'>par<span class="p">(</span>mfrow<span class="o">=</span>c<span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">3</span><span class="p">))</span>
</span><span class='line'><span class="kr">for</span><span class="p">(</span>x in c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">4</span><span class="p">)){</span>
</span><span class='line'>  theta <span class="o">&lt;-</span> rnorm<span class="p">(</span>Nsim<span class="p">,</span> mean<span class="o">=</span>x<span class="p">)</span>
</span><span class='line'>  theta_2 <span class="o">&lt;-</span> rnorm<span class="p">(</span>Nsim<span class="p">,</span> mean<span class="o">=</span>x<span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  num <span class="o">&lt;-</span> theta <span class="o">*</span> dcauchy<span class="p">(</span>theta<span class="p">)</span>
</span><span class='line'>  den <span class="o">&lt;-</span> dcauchy<span class="p">(</span>theta<span class="p">)</span>
</span><span class='line'>  num_2 <span class="o">&lt;-</span> theta <span class="o">*</span> dcauchy<span class="p">(</span>theta<span class="p">)</span>
</span><span class='line'>  den_2 <span class="o">&lt;-</span> dcauchy<span class="p">(</span>theta_2<span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  n <span class="o">&lt;-</span> num<span class="p">[</span>den <span class="o">!=</span> <span class="m">0</span><span class="p">]</span>
</span><span class='line'>  d <span class="o">&lt;-</span> den<span class="p">[</span>den <span class="o">!=</span> <span class="m">0</span><span class="p">]</span>
</span><span class='line'>  y <span class="o">&lt;-</span> n <span class="o">/</span> d
</span><span class='line'>  n_2 <span class="o">&lt;-</span> num_2<span class="p">[</span>den_2 <span class="o">!=</span> <span class="m">0</span><span class="p">]</span>
</span><span class='line'>  d_2 <span class="o">&lt;-</span> den_2<span class="p">[</span>den_2 <span class="o">!=</span> <span class="m">0</span><span class="p">]</span>
</span><span class='line'>  y_2 <span class="o">&lt;-</span> n_2 <span class="o">/</span> d_2
</span><span class='line'>
</span><span class='line'>  estint <span class="o">&lt;-</span> <span class="p">(</span>cumsum<span class="p">(</span>n<span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="m">1</span>:length<span class="p">(</span>n<span class="p">)))</span> <span class="o">/</span> <span class="p">(</span>cumsum<span class="p">(</span>d<span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="m">1</span>:length<span class="p">(</span>d<span class="p">)))</span>
</span><span class='line'>  esterr <span class="o">&lt;-</span> sqrt<span class="p">(</span>cumsum<span class="p">((</span>y <span class="o">-</span> estint<span class="p">)</span><span class="o">^</span><span class="m">2</span><span class="p">))</span><span class="o">/</span><span class="p">(</span><span class="m">1</span>:length<span class="p">(</span>y<span class="p">))</span>
</span><span class='line'>  estint_2 <span class="o">&lt;-</span> <span class="p">(</span>cumsum<span class="p">(</span>n_2<span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="m">1</span>:length<span class="p">(</span>n_2<span class="p">)))</span> <span class="o">/</span> <span class="p">(</span>cumsum<span class="p">(</span>d_2<span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="m">1</span>:length<span class="p">(</span>d_2<span class="p">)))</span>
</span><span class='line'>  esterr_2 <span class="o">&lt;-</span> sqrt<span class="p">(</span>cumsum<span class="p">((</span>y_2 <span class="o">-</span> estint_2<span class="p">)</span><span class="o">^</span><span class="m">2</span><span class="p">))</span><span class="o">/</span><span class="p">(</span><span class="m">1</span>:length<span class="p">(</span>y_2<span class="p">))</span>
</span><span class='line'>
</span><span class='line'>  plot<span class="p">(</span>estint<span class="p">,</span> xlab<span class="o">=</span><span class="s">&quot;Iterations&quot;</span><span class="p">,</span> ylab<span class="o">=</span><span class="s">&quot;&quot;</span> <span class="p">,</span>type<span class="o">=</span><span class="s">&quot;l&quot;</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">,</span> col<span class="o">=</span><span class="s">&quot;black&quot;</span><span class="p">,</span> xlim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">10</span><span class="o">^</span><span class="m">4</span><span class="p">),</span> ylim<span class="o">=</span>c<span class="p">(</span>x<span class="o">-</span><span class="m">1</span><span class="p">,</span>x<span class="o">+</span><span class="m">1</span><span class="p">))</span>
</span><span class='line'>  lines<span class="p">(</span>estint<span class="o">+</span><span class="m">2</span><span class="o">*</span>esterr<span class="p">,</span> col<span class="o">=</span><span class="s">&quot;gold&quot;</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'>  lines<span class="p">(</span>estint<span class="o">-</span><span class="m">2</span><span class="o">*</span>esterr<span class="p">,</span> col<span class="o">=</span><span class="s">&quot;gold&quot;</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  par<span class="p">(</span>new<span class="o">=</span><span class="k-Variable">T</span><span class="p">)</span>
</span><span class='line'>  plot<span class="p">(</span>estint_2<span class="p">,</span> xlab<span class="o">=</span><span class="s">&quot;Iterations&quot;</span><span class="p">,</span> ylab<span class="o">=</span><span class="s">&quot;&quot;</span><span class="p">,</span> type<span class="o">=</span><span class="s">&quot;l&quot;</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">,</span> col<span class="o">=</span><span class="s">&quot;blue&quot;</span><span class="p">,</span> xlim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">10</span><span class="o">^</span><span class="m">4</span><span class="p">),</span> ylim<span class="o">=</span>c<span class="p">(</span>x<span class="o">-</span><span class="m">1</span><span class="p">,</span>x<span class="o">+</span><span class="m">1</span><span class="p">))</span>
</span><span class='line'>  lines<span class="p">(</span>estint_2<span class="o">+</span><span class="m">2</span><span class="o">*</span>esterr_2<span class="p">,</span> col<span class="o">=</span><span class="s">&quot;skyblue&quot;</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'>  lines<span class="p">(</span>estint_2<span class="o">-</span><span class="m">2</span><span class="o">*</span>esterr_2<span class="p">,</span> col<span class="o">=</span><span class="s">&quot;skyblue&quot;</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dl.dropbox.com/u/142306/b/imcmr/chp3_3-9_2.png" alt="" /></p>

<h3>参考</h3>

<ul>
<li><a href="http://waxworksmath.com/Authors/N_Z/Robert_N_Casella/robert_n_casella.html">http://waxworksmath.com/Authors/N_Z/Robert_N_Casella/robert_n_casella.html</a></li>
</ul>


<p>1章から3章途中までの解説とRのコードがある．今回の作図に関しては，このページのBook Notesを参考にさせていただいた．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「ワンクリック―ジェフ・ベゾス率いるAmazonの隆盛」読了]]></title>
    <link href="http://yagays.github.com/blog/2012/10/26/review-one-click/"/>
    <updated>2012-10-26T01:12:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/10/26/review-one-click</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4822249158" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<h3>Kindleに至るまでの小売時代のアマゾンを総括する1冊</h3>

<p>「Aamazonは一体何の会社なのか」という問いに，ある人は本屋と答えるだろうし，またある人は何でも買えるネットショッピングサイトだと答えるだろう．インターネットの技術屋に聞けばAmazonはクラウドやAWSだと答えるだろうし，最近ではAmazonといえばKindleだと答える人が多いだろう．ジェフ・ベゾスが起こしたAmazonという会社は，今やインターネットでのショッピングのサービスを提供するという枠を乗り越え，AppleやMicrosoftなどに続いて不動の地位とブランドを獲得している．本書は，そのようなAmazonとジェフ・ベゾスが辿ってきた歴史を紐解いて，いかにAmazonが成長しジェフ・ベゾスが成功に導いてきたかに関する本である．</p>

<p>本書はジェフ・ベゾスの人生を軸に書かれている．まずはじめに，Amazonが成功するに至った2つの要因である</p>

<ul>
<li>顧客を第一に考えること</li>
<li>長期的な視点をもって決断をすることに</li>
</ul>


<p>の2つにまつわる話が描かれ，彼の作り上げた作品が紹介される．時には消費者の利便性を最大限に引き出すようなサービスを提供し，時には非情なまでに自動化されたシステムを作り上げる．輝かしい成功の影で行われている生々しい特許論争に関しても取り上げられる．そのようなAmazonをすべて統括してきたジェフ・ベゾスという人物が，いかにアントレプレナーとして優れており，その才能を発揮してきたかということが，彼の幼少時代から順に語られていく．彼はすぐにアントレプレナーとして頭角を現したわけでは無かったが，彼が大学を出た後に入った会社では非情に優れた技術者として出世していったという逸話や，インターネットを使った書籍販売というアイデアを思いつくまでの経緯などからも，Amazonに繋がる一連の流れをうかがい知ることができる．Amazonの会社を起こしてからは，今からは想像も出来無いようなベンチャーとしての苦労話や逸話が出てくる．そして最後の数章では，現在のAmazonのイノベーションの中心とも言えるKindleの誕生とその戦略にフォーカスが移る．</p>

<p>個人的な感想としては，興味はやはりAmazonが現在推し進めているKindleやAWSに集中してしまう．ネットショッピングとしてのAmazonはもはやネットに当然のようにあるものとして，空気のような必要不可欠なものであり，普段はその重要性や革新性に意識を向けないような存在になってしまった．それはまさに，AppleがiPodを開発して音楽業界に進出したときのような時代の分かれ目を感じさせる．そういった現状を踏まえると，本書は小売時代のAmazonという企業の歴史を総括する1冊として上手く収まっているといえる．その反面，本書におけるKindleの扱いはどうしても付け加え感が拭えず，本書は全体的に伝記的な作品とも言いにくくマーケティングや経営戦略的な部分も薄いといった難点はあるものの，これからの電子書籍戦争を見守る中でAmazonの立ち位置が分かりやすく示されているところはとても評価できる部分だ．本書で見られるジェフ・ベゾスの一貫した理念を考えると，書籍から電子書籍へと媒体が変わったとしても恐らく根本の部分では何も変わらないのだろう．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「Rによるモンテカルロ法入門」読書ノート：3章 モンテカルロ積分]]></title>
    <link href="http://yagays.github.com/blog/2012/10/25/imcmr-3-1/"/>
    <updated>2012-10-25T20:33:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/10/25/imcmr-3-1</id>
    <content type="html"><![CDATA[<ul>
<li>読書ノート アーカイブ：<a href="http://yagays.github.com/blog/2012/10/20/archive-introducing-monte-carlo-methods-with-r/">http://yagays.github.com/blog/2012/10/20/archive-introducing-monte-carlo-methods-with-r/</a></li>
</ul>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4621065270" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<h3>内容：乱数を利用して積分を数値的に求める</h3>

<p>モンテカルロ積分とは，乱数を利用して単変量や多変数の積分を近似し，解析的に解けない問題を数値的に解くという手法である．これは2章で示したように，任意の分布に従う乱数を理論上無限に生成できるからこそ成り立つ手法であり，本手法はi.i.dを前提とした大数の法則や中心極限定理のような確率論に落としこんで解析している．具体的なモンテカルロ法の利用例としては確率分布を積分といったことが挙げられ，ベイズなどに限らず確率分布を仮定するような統計手法などにおいて必要となる．</p>

<h3>例 3.3 モンテカルロ積分の具体例</h3>

<p>図の上半分は<img src=http://chart.apis.google.com/chart?cht=tx&chl=h%28x%29+%3D+%5B%5Ccos%2850x%29+%2B+%5Csin%2820x%29+%5D%5E2+>を0から1の間で図示したもの．モンテカルロ積分ではこの曲線の下側の面積を求めることになる．
図の下半分は，実際にモンテカルロ積分のシミュレーションをしたもの．横軸がシミュレーション回数（サンプル数m）で，縦軸が経験平均<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cbar%7Bh%7D_m+%3D+%5Cfrac%7B1%7D%7Bm%7D%5Csum_%7Bj%3D1%7D%5E%7Bm%7Dh%28x_j%29+>を示したもの．黒の線が平均値の推移，上下の黄色の線が推定標準誤差に基づく信頼幅，赤の直線がRのintegrate関数で求めた積分値を示している．この図から，シミュレーション回数を重ねるごとに数値的に求めた値が実際の積分値に収束していく様子がわかる．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>h <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>x<span class="p">){(</span>cos<span class="p">(</span><span class="m">50</span><span class="o">*</span>x<span class="p">)</span> <span class="o">+</span> sin<span class="p">(</span><span class="m">20</span><span class="o">*</span>x<span class="p">))</span><span class="o">^</span><span class="m">2</span><span class="p">}</span>
</span><span class='line'>par<span class="p">(</span>mar<span class="o">=</span>c<span class="p">(</span><span class="m">2</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">1</span><span class="p">),</span> mfrow<span class="o">=</span>c<span class="p">(</span><span class="m">2</span><span class="p">,</span><span class="m">1</span><span class="p">))</span>
</span><span class='line'>curve<span class="p">(</span>h<span class="p">,</span> xlab<span class="o">=</span><span class="s">&quot;Function&quot;</span><span class="p">,</span> ylab<span class="o">=</span><span class="s">&quot;&quot;</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'>integrate<span class="p">(</span>h<span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">1</span><span class="p">)</span>
</span><span class='line'>x <span class="o">&lt;-</span> h<span class="p">(</span>runif<span class="p">(</span><span class="m">10</span><span class="o">^</span><span class="m">4</span><span class="p">))</span>
</span><span class='line'>estint <span class="o">&lt;-</span> cumsum<span class="p">(</span>x<span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="m">1</span>:<span class="m">10</span><span class="o">^</span><span class="m">4</span><span class="p">)</span>
</span><span class='line'>esterr <span class="o">&lt;-</span> sqrt<span class="p">(</span>cumsum<span class="p">((</span>x<span class="o">-</span>estint<span class="p">)</span><span class="o">^</span><span class="m">2</span><span class="p">))</span><span class="o">/</span><span class="p">(</span><span class="m">1</span>:<span class="m">10</span><span class="o">^</span><span class="m">4</span><span class="p">)</span>
</span><span class='line'>plot<span class="p">(</span>estint<span class="p">,</span> xlab<span class="o">=</span><span class="s">&quot;Mean and error range&quot;</span><span class="p">,</span> type<span class="o">=</span><span class="s">&quot;l&quot;</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">,</span> ylim<span class="o">=</span>mean<span class="p">(</span>x<span class="p">)</span><span class="o">+</span><span class="m">20</span><span class="o">*</span>c<span class="p">(</span><span class="o">-</span>esterr<span class="p">[</span><span class="m">10</span><span class="o">^</span><span class="m">4</span><span class="p">],</span> esterr<span class="p">[</span><span class="m">10</span><span class="o">^</span><span class="m">4</span><span class="p">]))</span>
</span><span class='line'>lines<span class="p">(</span>estint<span class="o">+</span><span class="m">2</span><span class="o">*</span>esterr<span class="p">,</span> col<span class="o">=</span><span class="s">&quot;gold&quot;</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'>lines<span class="p">(</span>estint<span class="o">-</span><span class="m">2</span><span class="o">*</span>esterr<span class="p">,</span> col<span class="o">=</span><span class="s">&quot;gold&quot;</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'>abline<span class="p">(</span>h<span class="o">=</span>integrate<span class="p">(</span>h<span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">1</span><span class="p">)$</span>value<span class="p">,</span>lwd<span class="o">=</span><span class="m">2</span><span class="p">,</span>col<span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dl.dropbox.com/u/142306/b/imcmr/chp3_1.png" alt="" /></p>

<h3>例 3.4 正規分布のモンテカルロ積分における値の精度と効率</h3>

<p>「裾」と呼ばれる部分は正規分布において釣鐘型の山の頂点から遠く離れた部分のことを指しており，正規分布の平均から外れるということは起こる確率がきわめて低い部分である．そのため，正規乱数を基にしたモンテカルロ積分においては，山の頂点に近い部分の値は乱数でよく引きあてるので数は十分なのだが，裾の部分の「値が大きい/小さい」値は乱数でなかなか引き当てることができない．精度に大きな影響を与える部分でありながらもシミュレーションを重ねないと十分な数を得ることができないため，古典的なモンテカルロ積分の方法で精度を上げるためには，試行回数を多くしなければならない．</p>

<p>以下の実験では，実際に有効数字4ケタで正確な数値を出すために，10<sup>8</sup> 回ものシミュレーションを行なっている．最終的な表3.1は，行が試行回数，列が<img src=http://chart.apis.google.com/chart?cht=tx&chl=x+%5Csim+%5Cmathcal%7BN%7D%280%2C1%29+>のときのxに対応している．一番下の行の値がboundという変数のそれぞれ値と同じになっていることから，10<sup>8</sup> もの試行回数が必要であることがわかる．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>x <span class="o">&lt;-</span> rnorm<span class="p">(</span><span class="m">10</span><span class="o">^</span><span class="m">8</span><span class="p">)</span>
</span><span class='line'>bound <span class="o">&lt;-</span> qnorm<span class="p">(</span>c<span class="p">(</span><span class="m">0.5</span><span class="p">,</span> <span class="m">0.75</span><span class="p">,</span> <span class="m">0.8</span><span class="p">,</span> <span class="m">0.9</span><span class="p">,</span> <span class="m">0.95</span><span class="p">,</span> <span class="m">0.99</span><span class="p">,</span> <span class="m">0.999</span><span class="p">,</span> <span class="m">0.9999</span><span class="p">))</span>
</span><span class='line'>res <span class="o">&lt;-</span> matrix<span class="p">(</span><span class="m">0</span><span class="p">,</span> ncol<span class="o">=</span><span class="m">8</span><span class="p">,</span> nrow<span class="o">=</span><span class="m">7</span><span class="p">)</span>
</span><span class='line'><span class="kr">for</span><span class="p">(</span>i in <span class="m">2</span>:<span class="m">8</span><span class="p">)</span>
</span><span class='line'>  <span class="kr">for</span><span class="p">(</span>j in <span class="m">1</span>:<span class="m">8</span><span class="p">)</span>
</span><span class='line'>    res<span class="p">[</span>i<span class="o">-</span><span class="m">1</span><span class="p">,</span> j<span class="p">]</span> <span class="o">&lt;-</span> mean<span class="p">(</span>x<span class="p">[</span><span class="m">1</span>:<span class="m">10</span><span class="o">^</span>i<span class="p">]</span> <span class="o">&lt;</span> bound<span class="p">[</span>j<span class="p">])</span>
</span><span class='line'>matrix<span class="p">(</span>as.numeric<span class="p">(</span>format<span class="p">(</span>res<span class="p">,</span> digi<span class="o">=</span><span class="m">4</span><span class="p">)),</span> ncol<span class="o">=</span><span class="m">8</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1"># &gt; matrix(as.numeric(format(res, digi=4)), ncol=8)</span>
</span><span class='line'><span class="c1"># [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]</span>
</span><span class='line'><span class="c1"># [1,] 0.5200 0.7600 0.8000 0.9300 0.9800 1.0000 1.0000 1.0000</span>
</span><span class='line'><span class="c1"># [2,] 0.4760 0.7400 0.7880 0.8980 0.9550 0.9950 1.0000 1.0000</span>
</span><span class='line'><span class="c1"># [3,] 0.4980 0.7477 0.7967 0.8981 0.9480 0.9889 0.9993 0.9999</span>
</span><span class='line'><span class="c1"># [4,] 0.4994 0.7503 0.7996 0.8992 0.9504 0.9899 0.9989 0.9999</span>
</span><span class='line'><span class="c1"># [5,] 0.4999 0.7503 0.8002 0.9001 0.9501 0.9899 0.9990 0.9999</span>
</span><span class='line'><span class="c1"># [6,] 0.4999 0.7500 0.8000 0.9001 0.9500 0.9900 0.9990 0.9999</span>
</span><span class='line'><span class="c1"># [7,] 0.5000 0.7500 0.8000 0.9000 0.9500 0.9900 0.9990 0.9999</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「Rによるモンテカルロ法入門」読書ノート：2章 練習問題]]></title>
    <link href="http://yagays.github.com/blog/2012/10/23/imcmr-2-3/"/>
    <updated>2012-10-23T08:57:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/10/23/imcmr-2-3</id>
    <content type="html"><![CDATA[<ul>
<li>読書ノート アーカイブ：<a href="http://yagays.github.com/blog/2012/10/20/archive-introducing-monte-carlo-methods-with-r/">http://yagays.github.com/blog/2012/10/20/archive-introducing-monte-carlo-methods-with-r/</a></li>
</ul>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4621065270" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<h3>練習問題 2.18</h3>

<h3>a. f(x)とMg(x)をプロットする</h3>

<p>定数Mは例2.7のようにoptimize()関数で求めている．以下の図はfとgの分布を図示したもので，黒い曲線fに対して，青い曲線Mg(x)が全体を覆い被さるようになっていることがわかる．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>f <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>x<span class="p">){</span>exp<span class="p">(</span><span class="o">-</span>x<span class="o">^</span><span class="m">2</span><span class="o">/</span><span class="m">2</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span>sin<span class="p">(</span><span class="m">6</span><span class="o">*</span>x<span class="p">)</span><span class="o">^</span><span class="m">2</span> <span class="o">+</span> <span class="m">3</span><span class="o">*</span>cos<span class="p">(</span>x<span class="p">)</span><span class="o">^</span><span class="m">2</span><span class="o">*</span>sin<span class="p">(</span><span class="m">4</span><span class="o">*</span>x<span class="p">)</span><span class="o">^</span><span class="m">2</span> <span class="o">+</span> <span class="m">1</span><span class="p">)}</span>
</span><span class='line'>g <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>x<span class="p">){</span>exp<span class="p">(</span><span class="o">-</span>x<span class="o">^</span><span class="m">2</span><span class="o">/</span><span class="m">2</span><span class="p">)</span><span class="o">/</span>sqrt<span class="p">(</span><span class="m">2</span><span class="o">*</span>pi<span class="p">)}</span>
</span><span class='line'>M <span class="o">&lt;-</span> optimize<span class="p">(</span>f<span class="o">=</span><span class="kr">function</span><span class="p">(</span>x<span class="p">){</span>f<span class="p">(</span>x<span class="p">)</span><span class="o">/</span>g<span class="p">(</span>x<span class="p">)},</span> interval<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">1</span><span class="p">),</span>maximum<span class="o">=</span><span class="k-Variable">T</span><span class="p">)$</span>objective
</span><span class='line'>
</span><span class='line'>par<span class="p">(</span>mfrow<span class="o">=</span>c<span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">1</span><span class="p">))</span>
</span><span class='line'>curve<span class="p">(</span>f<span class="p">(</span>x<span class="p">),</span>from<span class="o">=</span><span class="m">-5</span><span class="p">,</span>to<span class="o">=</span><span class="m">5</span><span class="p">,</span>ylim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">5</span><span class="p">))</span>
</span><span class='line'>curve<span class="p">(</span>M<span class="o">*</span>g<span class="p">(</span>x<span class="p">),</span>add<span class="o">=</span><span class="k-Variable">T</span><span class="p">,</span>col<span class="o">=</span><span class="s">&quot;blue&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dl.dropbox.com/u/142306/b/imcmr/chp2_7.png" alt="" /></p>

<h3>b. 受理・棄却アルゴリズムを使ってfから2500個の乱数を生成する</h3>

<p>ここで標準正規分布からの乱数を使うのは，g(x)が標準正規密度だから（P.59の受理・棄却法のアルゴリズムの1.にある<img src=http://chart.apis.google.com/chart?cht=tx&chl=Y+%5Csim+g+>の部分に該当する）．</p>

<p>この問題では2500個の<strong>受理された</strong>乱数が欲しいので，P.61のコードを真似て作成している．ただし，このコードは少々効率が悪く，決められた数の乱数を作ったらループが終わりというものではない（受理確率を元にして多めに作ってる）ので，ヒストグラムとして図示する際には2500個のみを取り出して作図している．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>Nsim <span class="o">&lt;-</span> <span class="m">2500</span>
</span><span class='line'>x <span class="o">&lt;-</span> <span class="kc">NULL</span>
</span><span class='line'><span class="kr">while</span><span class="p">(</span>length<span class="p">(</span>x<span class="p">)</span> <span class="o">&lt;</span> Nsim<span class="p">){</span>
</span><span class='line'>  y <span class="o">&lt;-</span> rnorm<span class="p">(</span>Nsim<span class="o">*</span>M<span class="p">)</span>
</span><span class='line'>  x <span class="o">&lt;-</span> c<span class="p">(</span>x<span class="p">,</span> y<span class="p">[</span>runif<span class="p">(</span>Nsim<span class="o">*</span>M<span class="p">,</span><span class="m">0</span><span class="p">,</span>M<span class="p">)</span> <span class="o">*</span> g<span class="p">(</span>y<span class="p">)</span> <span class="o">&lt;</span> f<span class="p">(</span>y<span class="p">)</span> <span class="p">])</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>hist<span class="p">(</span>x<span class="p">[</span><span class="m">1</span>:Nsim<span class="p">],</span>freq<span class="o">=</span><span class="k-Variable">F</span><span class="p">,</span>nclass<span class="o">=</span><span class="m">150</span><span class="p">,</span>main<span class="o">=</span><span class="s">&quot;Nsim = 2500&quot;</span><span class="p">)</span>
</span><span class='line'>curve<span class="p">(</span>f<span class="p">(</span>x<span class="p">)</span><span class="o">/</span>integrate<span class="p">(</span>f<span class="p">,</span><span class="o">-</span>Inf<span class="p">,</span>Inf<span class="p">)$</span>value<span class="p">,</span> add<span class="o">=</span><span class="k-Variable">T</span><span class="p">,</span> col<span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">)</span>
</span><span class='line'><span class="c1"># curveの中のintegrateに関しては後述(本問のc.)</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dl.dropbox.com/u/142306/b/imcmr/chp2_8.png" alt="" /></p>

<p>概ねfの分布に沿った乱数が生成されているようだ．乱数が2500個だけでは少し不明瞭のため，Nsimの数を10<sup>4</sup> にして再試したのが下の図．</p>

<p><img src="http://dl.dropbox.com/u/142306/b/imcmr/chp2_9.png" alt="" /></p>

<h3>c. シミュレーションから得られた受理率から正規化定数を求める</h3>

<p>P.60にあるように，受理確率は基本的に1/Mだけれども，正規化されていない関数に関しては定数CがMに吸収されているので注意が必要となる．今回の場合，シミュレーションから求めた受理確率rを使うことで，以下の式から正規化定数を近似することができる．</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=r+%3D+%5Cfrac%7B1%7D%7BC+%5Ctimes+M%7D+></p>

<p>今回の場合，Mは10.94，rは0.54となったので，Cは0.17程度だと見積もった．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>Nsim <span class="o">&lt;-</span> <span class="m">10</span><span class="o">^</span><span class="m">4</span>
</span><span class='line'>x <span class="o">&lt;-</span> <span class="kc">NULL</span> <span class="c1"># xは受理した乱数</span>
</span><span class='line'>z <span class="o">&lt;-</span> <span class="kc">NULL</span> <span class="c1"># zは生成した乱数すべて</span>
</span><span class='line'><span class="kr">while</span><span class="p">(</span>length<span class="p">(</span>x<span class="p">)</span> <span class="o">&lt;</span> Nsim<span class="p">){</span>
</span><span class='line'>  y <span class="o">&lt;-</span> rnorm<span class="p">(</span>Nsim<span class="o">*</span>M<span class="p">)</span>
</span><span class='line'>  x <span class="o">&lt;-</span> c<span class="p">(</span>x<span class="p">,</span> y<span class="p">[</span>runif<span class="p">(</span>Nsim<span class="o">*</span>M<span class="p">,</span><span class="m">0</span><span class="p">,</span>M<span class="p">)</span> <span class="o">*</span> g<span class="p">(</span>y<span class="p">)</span> <span class="o">&lt;</span> f<span class="p">(</span>y<span class="p">)</span> <span class="p">])</span>
</span><span class='line'>  z <span class="o">&lt;-</span> c<span class="p">(</span>z<span class="p">,</span> y<span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>r <span class="o">&lt;-</span> length<span class="p">(</span>x<span class="p">)</span><span class="o">/</span>length<span class="p">(</span>z<span class="p">)</span>
</span><span class='line'>C <span class="o">&lt;-</span> <span class="m">1</span><span class="o">/</span><span class="p">(</span>M<span class="o">*</span>r<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> M<span class="p">;</span> r<span class="p">;</span> C
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">10.94031</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">0.5369048</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">0.1702445</span>
</span></code></pre></td></tr></table></div></figure>


<p>さて，答え合わせ(?)だが，正規化定数は単純にfの<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5B-%5Cinfty%2C%5Cinfty%5D>の積分を求めることによって計算することができる．これにはRのintegrate()関数を使って-infからinfまでを計算すればよい．確率分布の定義から，これが1になるように正規化定数を定めれば良いということで，以下のように計算した結果，0.1696543となった．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> <span class="m">1</span><span class="o">/</span>integrate<span class="p">(</span>f<span class="p">,</span><span class="o">-</span>Inf<span class="p">,</span>Inf<span class="p">)$</span>value
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">0.1696543</span>
</span></code></pre></td></tr></table></div></figure>


<h3>練習問題 2.19 二重指数分布が候補分布の受理・棄却アルゴリズムにおいて標準正規分布から乱数を生成する際のMとg(x)の最適化</h3>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=f%28x%29+%3D+%5Cfrac%7B1%7D%7B%5Csqrt%7B2%5Cpi%7D%7D+%5Cexp%28-%5Cfrac%7Bx%5E2%7D%7B2%7D%29+%5C%5C+g%28x%29+%3D+%5Cfrac%7B%5Calpha%7D%7B2%7D+%5Cexp%28-%5Calpha+%7Cx%7C%29></p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=f%2Fg+%3D+%5Cfrac%7B%5Csqrt%7B2%2F%5Cpi%7D%7D%7B%5Calpha%7D+%5Cexp%28%5Calpha%7Cx%7C-%5Cfrac%7Bx%5E2%7D%7B2%7D%29+>より，上界Mを取るときのx_maxの値を調べるには，とりあえずxで微分して0になるときの値を求めれば良い．expの部分を微分すると<img src=http://chart.apis.google.com/chart?cht=tx&chl=%28%5Calpha+-+x%29+>みたいな項が出てくるので，<img src=http://chart.apis.google.com/chart?cht=tx&chl=x_%7Bmax%7D+%3D+%5Calpha+>（厳密には<img src=http://chart.apis.google.com/chart?cht=tx&chl=x_%7Bmax%7D+%3D+%5Cpm+%5Calpha+>）．</p>

<p>次に，受理率を最適化するということは1/Mの値を大きくすれば良いので，結局はMの値の最大値を求めれば良い．<img src=http://chart.apis.google.com/chart?cht=tx&chl=x_%7Bmax%7D+%3D+%5Calpha+>のときのMを<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Calpha+>に関して微分して0になるときの値ということで計算していくと
<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cfrac%7B%28%5Calpha%5E2-1%29%5Cexp%28%5Calpha%5E2%2F2%29%7D%7B%5Calpha%5E2%7D+>みたいな項が出てくるので，つまり<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Calpha+%3D+1+>の時にMが最大値を取り，受理率が最適化される．</p>

<h3>練習問題 2.22 切断正規分布から正規乱数を生成する</h3>

<h4>a. 切断正規分布から乱数を生成する</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>library<span class="p">(</span>msm<span class="p">)</span> <span class="c1"># dtnorm()のため</span>
</span><span class='line'>mu <span class="o">&lt;-</span> <span class="m">0</span>
</span><span class='line'>sigma <span class="o">&lt;-</span> <span class="m">1</span>
</span><span class='line'>
</span><span class='line'>par<span class="p">(</span>mfrow<span class="o">=</span>c<span class="p">(</span><span class="m">4</span><span class="p">,</span><span class="m">2</span><span class="p">))</span>
</span><span class='line'><span class="kr">for</span><span class="p">(</span>a in c<span class="p">(</span><span class="m">-2.32</span><span class="p">,</span> <span class="m">-0.84</span><span class="p">,</span> <span class="m">-0.67</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0.67</span><span class="p">,</span> <span class="m">0.84</span><span class="p">,</span> <span class="m">2.32</span><span class="p">)){</span>
</span><span class='line'>  N <span class="o">&lt;-</span> <span class="m">10</span><span class="o">^</span><span class="m">4</span>
</span><span class='line'>  X <span class="o">&lt;-</span> rep<span class="p">(</span><span class="m">0</span><span class="p">,</span>N<span class="p">)</span>
</span><span class='line'>  <span class="kr">for</span><span class="p">(</span>i in <span class="m">1</span>:N<span class="p">){</span>
</span><span class='line'>    z <span class="o">&lt;-</span> rnorm<span class="p">(</span><span class="m">1</span><span class="p">,</span> mean<span class="o">=</span>mu<span class="p">,</span> sd<span class="o">=</span>sigma<span class="p">)</span>
</span><span class='line'>    <span class="kr">while</span><span class="p">(</span>z <span class="o">&lt;</span> a<span class="p">){</span>
</span><span class='line'>    z <span class="o">&lt;-</span> rnorm<span class="p">(</span><span class="m">1</span><span class="p">,</span> mean<span class="o">=</span>mu<span class="p">,</span> sd<span class="o">=</span>sigma<span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  X<span class="p">[</span>i<span class="p">]</span> <span class="o">&lt;-</span> z
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  hist<span class="p">(</span>X<span class="p">,</span> freq<span class="o">=</span><span class="k-Variable">F</span><span class="p">,</span> nclass<span class="o">=</span><span class="m">150</span><span class="p">,</span> main<span class="o">=</span>paste<span class="p">(</span><span class="s">&quot;Truncated Normal Distribution: a = &quot;</span><span class="p">,</span>a<span class="p">))</span>
</span><span class='line'>  curve<span class="p">(</span>dtnorm<span class="p">(</span>x<span class="p">,</span> mean<span class="o">=</span>mu<span class="p">,</span> sd<span class="o">=</span>sigma<span class="p">,</span> lower<span class="o">=</span>a<span class="p">,</span> upper<span class="o">=</span>Inf<span class="p">),</span> add<span class="o">=</span><span class="k-Variable">T</span><span class="p">,</span> col<span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dl.dropbox.com/u/142306/b/imcmr/chp2_10.png" alt="" /></p>

<h4>b. シミュレーションので受理する確率を求める</h4>

<p>上で示したアルゴリズムで考える．z &lt; aならアタリ，それ以外ならハズレというようなときにどれだけ数を撃てばz&lt;aに入るかということを考えると，正規分布のz &lt; aの面積を求めればいいことがわかる．なお，ここで出てくる<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5CPhi%28x%29+>という関数は定義されていないが，以下のような累積標準正規分布（本書P.78に出てくる）のことだと思われる．</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5CPhi%28t%29+%3D+%5Cint_%7B-%5Cinfty%7D%5E%7Bt%7D+%5Cfrac%7B1%7D%7B%5Csqrt%7B2%5Cpi%7D%7De%5E%7B-y%5E2%2F2%7Ddy+></p>

<p>この形式になるように，aからの累積正規分布<img src=http://chart.apis.google.com/chart?cht=tx&chl=F%28x%7C%5Cmu%2C+%5Csigma%5E2%2C+a%29+%5Csim++%5Cint_%7Ba%7D%5E%7B%5Cinfty%7D+%5Cfrac%7B1%7D%7B%5Csqrt%7B2%5Cpi%7D%5Csigma%7De%5E%7B-%5Cfrac%7B%28x-%5Cmu%29%5E2%7D%7B2%5Csigma%5E2%7D%7Ddx>を変形していけばよい．</p>

<p>ここで，<img src=http://chart.apis.google.com/chart?cht=tx&chl=v+%3D+-%5Cfrac%7Bx-%5Cmu%7D%7B%5Csigma%7D+>とおくと，<img src=http://chart.apis.google.com/chart?cht=tx&chl=dv+%3D+-%5Cfrac%7Bdx%7D%7B%5Csigma%7D+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=x%3Aa+%5Crightarrow+%5Cinfty+> のとき，<img src=http://chart.apis.google.com/chart?cht=tx&chl=v%3A-%5Cinfty+%5Crightarrow+%5Cfrac%7B%5Cmu-a%7D%7B%5Csigma%7D+>をとる．よって，</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=F%28v%7C%5Cmu%2C%5Csigma%5E2%2Ca%29+%3D+%5Cint_%7B%5Cinfty%7D%5E%7B%5Cfrac%7B%5Cmu-a%7D%7B%5Csigma%7D%7D+%5Cfrac%7B1%7D%7B%5Csqrt%7B2%5Cpi%7D%7De%5E%7B-%5Cfrac%7Bv%5E2%7D%7B2%7D%7Ddv+%3D+%5CPhi%28%5Cfrac%7B%5Cmu-a%7D%7B%5Csigma%7D%29+>  となる．</p>

<p>また，aの値が裾にある（値が大きくなる）と，<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5CPhi%28%5Cfrac%7B%5Cmu-a%7D%7B%5Csigma%7D%29+>の値が小さくなるので，シミュレーション回数が多くなる．</p>

<h4>c. 切断正規分布の乱数を正規分布から生成することを考える</h4>

<ul>
<li>目標分布；<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cexp%28-%28x-%5Cmu%29%2F2%5Csigma%5E2%29%5Cmathbb%7BI%7D_%7Bx+%5Cgeq+a%7D+></li>
<li>候補分布：<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cfrac%7B1%7D%7B%5Csqrt%7B2%5Cpi%7D%7D%5Cexp%28-%5Cfrac%7B%28x-%5Cbar%7B%5Cmu%7D%29%5E2%7D%7B2%7D%29+></li>
</ul>


<p>より</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cfrac%7Bf%28x%29%7D%7Bg%28x%29%7D%3D%5Cfrac%7B%5Cexp%28-%28x-%5Cmu%29%2F2%5Csigma%5E2%29%5Cmathbb%7BI%7D_%7Bx%5Cgeq+z%7D%7D%7B%5Cfrac%7B1%7D%7B%5Csqrt%7B2%5Cpi%7D%7D%5Cexp%28-%5Cfrac%7B%28x-%5Cbar%7B%5Cmu%7D%29%5E2%7D%7B2%7D%29%7D%5C%5C+><img src=http://chart.apis.google.com/chart?cht=tx&chl=%3D+%5Csqrt%7B2%5Cpi%7D%5Cexp%28-x%5Cbar%7B%5Cmu%7D%2B%5Cfrac%7B1%7D%7B2%7D%5Cbar%7B%5Cmu%7D%5E2%29%5Cmathbb%7BI%7D_%7Bx+%5Cgeq+a%7D+></p>

<p>となり候補分布の制約を満たすので，正規候補にもとづく受理・棄却アルゴリズムは切断正規分布から乱数を生成するために使える．</p>

<p>次に，このときの最適なMを考える．x=aにおいて<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cfrac%7Bf%28a%29%7D%7Bg%28a%29%7D+%3D+%5Csqrt%7B2%5Cpi%7D%5Cexp%28-a%5Cbar%7B%5Cmu%7D%2B%5Cfrac%7B1%7D%7B2%7D%5Cbar%7B%5Cmu%7D%5E2%29%5Cmathbb%7BI%7D_%7Bx+%5Cgeq+a%7D+>より，この式を<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cbar%7B%5Cmu%7D+>で微分すると</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5CBigl%28%5Cfrac%7Bf%28a%29%7D%7Bg%28a%29%7D%5CBigr%29%27+%3D+%5Csqrt%7B2%5Cpi%7D%28-a%2B%5Cbar%7B%5Cmu%7D%29%5Cexp%28-a%5Cbar%7B%5Cmu%7D%2B%5Cfrac%7B1%7D%7B2%7D%5Cbar%7B%5Cmu%7D%5E2%29%5Cmathbb%7BI%7D_%7Bx+%5Cgeq+a%7D+></p>

<p>となるので，Mは<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cbar%7B%5Cmu%7D%3Da+>のとき最適値をとる．</p>

<h3>d. 候補分布に指数分布を使うことを考える</h3>

<ul>
<li>目標分布；<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cexp%28-%28x-%5Cmu%29%2F2%5Csigma%5E2%29%5Cmathbb%7BI%7D_%7Bx+%5Cgeq+a%7D+></li>
<li>候補分布：<img src=http://chart.apis.google.com/chart?cht=tx&chl=g_%7B%5Calpha%7D%28z%29%3D%5Calpha+e%5E%7B-%5Calpha%28z-a%29%7D%5Cmathbb%7BI%7D_%7Bx+%5Cgeq+a%7D+></li>
</ul>


<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cbegin%7Balign%7D%5Cfrac%7Bf%28x%29%7D%7Bg%28x%29%7D%26%3D%5Cfrac%7B%5Cexp%28-%28x-%5Cmu%29%2F2%5Csigma%5E2%29%5Cmathbb%7BI%7D_%7Bx%5Cgeq+a%7D%7D%7B%5Calpha+e%5E%7B-%5Calpha%28z-a%29%7D%7D%5C%5C%26%3D%5Cfrac%7B1%7D%7B%5Calpha%7D%5Cexp%28-%5Cfrac%7Bx%5E2%7D%7B2%7D%2B%5Calpha%28x-a%29%29%5Cmathbb%7BI%7D_%7Bx+%5Cgeq+a%7D%5Cend%7Balign%7D+></p>

<p>より，</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cfrac%7Bf%28x%29%7D%7Bg%28x%29%7D+%5Cpropto+e%5E%7B%5Calpha%28x-a%29%7De%5E%7B-z%5E2%2F2%7D+></p>

<p>となる．上式を前と同じように微分すると<img src=http://chart.apis.google.com/chart?cht=tx&chl=%28-x%2B%5Calpha%29+>が出てくるので，<img src=http://chart.apis.google.com/chart?cht=tx&chl=x+%3D+%5Calpha+>のとき最大値を取り，<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cexp%28%5Calpha%5E2%2F2-%5Calpha+a%29+>で極限が与えられる．</p>

<p>次に，<img src=http://chart.apis.google.com/chart?cht=tx&chl=a+%3D+%5Calpha+>の場合に正当な候補密度になることを導く．f/gの比が0より大きいことを示せば良いのだが，上式を見ると結局expの外側の<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cfrac%7B1%7D%7B%5Calpha%7D+>，つまり<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Calpha+>を調べないといけない．ということで，<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Calpha+>で微分して最適値の時の値を求める．</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=x+%3D+%5Calpha>のとき<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cfrac%7Bf%28%5Calpha%29%7D%7Bg%28%5Calpha%29%7D+%3D+%5Cfrac%7B1%7D%7B%5Calpha%7D%5Cexp%28%5Cfrac%7B%5Calpha%5E2%7D%7B2%7D-%5Calpha+a%29+>なので，</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5CBigl%28%5Cfrac%7Bf%28%5Calpha%29%7D%7Bg%28%5Calpha%29%7D%5CBigr%29%27+%3D+-%5Cfrac%7B1%7D%7B%5Calpha%5E2%7D%5Cexp%28%5Cfrac%7B%5Calpha%5E2%7D%7B2%7D-%5Calpha+a%29%2B%5Cfrac%7B1%7D%7B%5Calpha%7D%28%5Calpha-a%29%5Cexp%28%5Cfrac%7B%5Calpha%5E2%7D%7B2%7D-%5Calpha+a%29+><img src=http://chart.apis.google.com/chart?cht=tx&chl=%3D%5Cfrac%7B1%7D%7B%5Calpha%7D%5Cbigl%28-%5Cfrac%7B1%7D%7B%5Calpha%5E2%7D%2B%28%5Calpha-a%29%5Cbigr%29%5Cexp%28%5Cfrac%7B%5Calpha%5E2%7D%7B2%7D-%5Calpha+a%29></p>

<p>より</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=-%5Cfrac%7B1%7D%7B%5Calpha%5E2%7D%2B%28%5Calpha-a%29+%3D+0+></p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Calpha%5E2+-+a+%5Calpha+-+1+%3D+0+></p>

<p>よって，<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Calpha+%3D+%5Cfrac%7Ba+%5Cpm+%5Csqrt%7Ba%5E2+%2B+4%7D%7D%7B2%7D+>となる．</p>

<p>じゃあプラスかマイナスかどっちなんだという話になるのだが，ここで<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Calpha+%5Cgeq+a+>という前提条件を使うと，</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Calpha+%3D+%5Cfrac%7Ba+%5Cpm+%5Csqrt%7Ba%5E2+%2B+4%7D%7D%7B2%7D+%5Cgeq+a+></p>

<p>が成り立つ． <img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Csqrt%7Ba%5E2+%2B+4%7D+>というのはaよりちょっとだけ大きい数なので，上式を満たすaは<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Calpha+%3D+%5Cfrac%7Ba+%2B+%5Csqrt%7Ba%5E2+%2B+4%7D%7D%7B2%7D+>となり，この式は常に正である．よって，<img src=http://chart.apis.google.com/chart?cht=tx&chl=a+%3D+%5Calpha+>の場合に，正当な候補密度になる．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「Rによるモンテカルロ法入門」読書ノート：2章 受理・棄却法]]></title>
    <link href="http://yagays.github.com/blog/2012/10/22/imcmr-2-2/"/>
    <updated>2012-10-22T21:38:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/10/22/imcmr-2-2</id>
    <content type="html"><![CDATA[<ul>
<li>読書ノート アーカイブ：<a href="http://yagays.github.com/blog/2012/10/20/archive-introducing-monte-carlo-methods-with-r/">http://yagays.github.com/blog/2012/10/20/archive-introducing-monte-carlo-methods-with-r/</a></li>
</ul>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4621065270" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<h3>内容：逆変換法や一般変換法で生成できない分布から乱数を生成する</h3>

<p>逆変換法や一般変換法では，一様分布から生成される乱数に何らかの関数を通すことで任意の乱数を生成してきた．しかし，このような直接的な方法で乱数を生成できない分布の場合には，間接的な方法によって乱数を生成する必要がある．そのような場合には，本来求めたい乱数の分布とは違った分布から乱数を生成し，それが受理できる値か棄却できる値かを選り分けることで，間接的に求めたい分布から生成された乱数を表現する．</p>

<ul>
<li>目標密度（target）: <img src=http://chart.apis.google.com/chart?cht=tx&chl=f+></li>
<li>手段密度・候補密度（candidate）: <img src=http://chart.apis.google.com/chart?cht=tx&chl=g+></li>
</ul>


<p>この受理・棄却法では1つの乱数の値<img src=http://chart.apis.google.com/chart?cht=tx&chl=X+>につき，2つの乱数<img src=http://chart.apis.google.com/chart?cht=tx&chl=Y+%5Csim+g+>と<img src=http://chart.apis.google.com/chart?cht=tx&chl=U+%5Csim+%5Cmathcal%7BU%7D_%7B%5B0%2C1%5D%7D+>を考える．前者は候補密度から乱数を生成したもの，後者は受理・棄却に用いる一様乱数．この2つの乱数を，以下の式にあてはめて受理するか棄却するかを判断する．</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=U+%5Cleq+%5Cfrac%7Bf%28Y%29%7D%7BM+%5Ctimes+g%28Y%29%7D+></p>

<p>ここで登場するMは提案分布と候補密度から見積もった定数で，候補密度の制約の中で登場する値．基本的にある値より大きければ何でも良いのだが，シミュレーションの効率に関わってくる．これが小さい値であればあるほど，シミュレーションで棄却される乱数の候補が少なくて済むので，結果として効率が良くなる．最適なMは以下の式で与えられる（<a href="http://www.stat.ufl.edu/~casella/ShortCourse/MCMC-UseR.pdf">UserR!資料pdf</a> p.51）．</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=M+%3D+%5Csup_x+%5Cfrac%7Bf%28x%29%7D%7Bg%28x%29%7D+></p>

<br />


<h3>例 2.7, 例2.8 ベータ分布の乱数を生成する(2通り)</h3>

<p>黒の点が一様分布/ベータ分布から生成した乱数，赤の点がアルゴリズムで受理された乱数（今回求めたかった乱数），青の線が極限<img src=http://chart.apis.google.com/chart?cht=tx&chl=M+g%28x%29+>．</p>

<p>受理・棄却の条件</p>

<ul>
<li>例2.7: <img src=http://chart.apis.google.com/chart?cht=tx&chl=U+%3C+f%28Y%29+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=U+%5Csim+%5Cmathcal%7BU%7D_%7B%5B0%2CM%5D%7D+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=f+%5Csim+%5Cmathcal%7BBe%282.7%2C6.3%29%7D+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=g+%3A+1+>

<ul>
<li>ここでgは何らかの分布ではなく「gは1に等しい」としているので，上式の1つ目の式の中にgが含まれていない．この場合，gで生成される乱数は一様乱数．</li>
<li>一様分布のグラフを考えてみるとわかりやすい．区間[0,1]の間で常に値1を取る関数なので，上では1に等しいと表している．</li>
</ul>
</li>
<li>例2.8: <img src=http://chart.apis.google.com/chart?cht=tx&chl=Ug%28Y%29+%3C+f%28Y%29+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=U+%5Csim+%5Cmathcal%7BU%7D_%7B%5B0%2CM%5D%7D+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=f+%5Csim+%5Cmathcal%7BBe%282.7%2C6.3%29%7D+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=g+%5Csim+%5Cmathcal%7BBe%282%2C6%29%7D+></li>
</ul>


<p>例2.8における「提案分布」という言葉は，新しく設定した候補分布のこと．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1"># 例2.7</span>
</span><span class='line'>Nsim <span class="o">&lt;-</span> <span class="m">2500</span>
</span><span class='line'>a <span class="o">&lt;-</span> <span class="m">2.7</span>
</span><span class='line'>b <span class="o">&lt;-</span> <span class="m">6.3</span>
</span><span class='line'>M <span class="o">&lt;-</span> <span class="m">2.67</span>
</span><span class='line'>u <span class="o">&lt;-</span> runif<span class="p">(</span>Nsim<span class="p">,</span> max<span class="o">=</span>M<span class="p">)</span>
</span><span class='line'>y <span class="o">&lt;-</span> runif<span class="p">(</span>Nsim<span class="p">)</span>
</span><span class='line'>x <span class="o">&lt;-</span> y<span class="p">[</span>u <span class="o">&lt;</span> dbeta<span class="p">(</span>y<span class="p">,</span>a<span class="p">,</span>b<span class="p">)]</span>
</span><span class='line'>
</span><span class='line'>y2 <span class="o">&lt;-</span> rbeta<span class="p">(</span>Nsim<span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">6</span><span class="p">)</span>
</span><span class='line'>u2 <span class="o">&lt;-</span> runif<span class="p">(</span>Nsim<span class="p">,</span> max<span class="o">=</span><span class="m">1.67</span><span class="p">)</span> <span class="o">*</span> dbeta<span class="p">(</span>y2<span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">6</span><span class="p">)</span>
</span><span class='line'>x2 <span class="o">&lt;-</span> y2<span class="p">[</span>u2 <span class="o">&lt;</span> dbeta<span class="p">(</span>y2<span class="p">,</span><span class="m">2.7</span><span class="p">,</span><span class="m">6.3</span><span class="p">)]</span>
</span><span class='line'>
</span><span class='line'>par<span class="p">(</span>mfrow<span class="o">=</span>c<span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">2</span><span class="p">))</span>
</span><span class='line'>plot<span class="p">(</span>y<span class="p">,</span> u<span class="p">,</span> xlim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">1.0</span><span class="p">),</span> ylim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">2.8</span><span class="p">),</span> cex<span class="o">=</span><span class="m">0.5</span><span class="p">,</span> xlab<span class="o">=</span><span class="s">&quot;y&quot;</span><span class="p">,</span> ylab<span class="o">=</span><span class="s">&quot;u.g(y)&quot;</span><span class="p">)</span>
</span><span class='line'>par<span class="p">(</span>new<span class="o">=</span><span class="k-Variable">T</span><span class="p">)</span>
</span><span class='line'>plot<span class="p">(</span>x<span class="p">,</span> u<span class="p">[</span>u <span class="o">&lt;</span> dbeta<span class="p">(</span>y<span class="p">,</span>a<span class="p">,</span>b<span class="p">)],</span> col<span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">,</span> xlim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">1.0</span><span class="p">),</span> ylim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">2.8</span><span class="p">),</span> cex<span class="o">=</span><span class="m">0.5</span><span class="p">,</span> xlab<span class="o">=</span><span class="s">&quot;y&quot;</span><span class="p">,</span> ylab<span class="o">=</span><span class="s">&quot;u.g(y)&quot;</span><span class="p">)</span>
</span><span class='line'>curve<span class="p">(</span>dbeta<span class="p">(</span>x<span class="p">,</span>a<span class="p">,</span>b<span class="p">),</span> add<span class="o">=</span><span class="k-Variable">T</span><span class="p">,</span> col<span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'>abline<span class="p">(</span>h<span class="o">=</span>M<span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">,</span> col<span class="o">=</span><span class="s">&quot;blue&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>plot<span class="p">(</span>y2<span class="p">,</span> u2<span class="p">,</span> xlim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">1.0</span><span class="p">),</span> ylim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">5</span><span class="p">),</span> cex<span class="o">=</span><span class="m">0.5</span><span class="p">,</span> xlab<span class="o">=</span><span class="s">&quot;y&quot;</span><span class="p">,</span> ylab<span class="o">=</span><span class="s">&quot;u.g(y)&quot;</span><span class="p">)</span>
</span><span class='line'>par<span class="p">(</span>new<span class="o">=</span><span class="k-Variable">T</span><span class="p">)</span>
</span><span class='line'>plot<span class="p">(</span>x2<span class="p">,</span> u2<span class="p">[</span>u2 <span class="o">&lt;</span> dbeta<span class="p">(</span>y2<span class="p">,</span><span class="m">2.7</span><span class="p">,</span><span class="m">6.3</span><span class="p">)],</span> col<span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">,</span> xlim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">1.0</span><span class="p">),</span> ylim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">5</span><span class="p">),</span> cex<span class="o">=</span><span class="m">0.5</span><span class="p">,</span> xlab<span class="o">=</span><span class="s">&quot;y&quot;</span><span class="p">,</span> ylab<span class="o">=</span><span class="s">&quot;u.g(y)&quot;</span><span class="p">)</span>
</span><span class='line'>curve<span class="p">(</span>dbeta<span class="p">(</span>x<span class="p">,</span><span class="m">2.7</span><span class="p">,</span><span class="m">6.3</span><span class="p">),</span> add<span class="o">=</span><span class="k-Variable">T</span><span class="p">,</span> col<span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'>curve<span class="p">(</span>dbeta<span class="p">(</span>x<span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">6</span><span class="p">)</span><span class="o">*</span><span class="m">1.67</span><span class="p">,</span> add<span class="o">=</span><span class="k-Variable">T</span><span class="p">,</span> col<span class="o">=</span><span class="s">&quot;blue&quot;</span><span class="p">,</span> lwd<span class="o">=</span><span class="m">2</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dl.dropbox.com/u/142306/b/imcmr/chp2_6.png" alt="" /></p>

<h4>上の図の解釈</h4>

<p>乱数の値が赤の分布の線より中に入れば受理となる．候補として生成される乱数は青の分布の線の中でランダムに生成されるので，赤と青の線の間の部分が棄却された乱数になる．この赤と青の線の間の部分が少なければ少ないほど，この受理・棄却法の効率も良くなる．じゃあ効率を良くするにはどうすればいいかというと，いじることのできるポイントは2つ</p>

<ul>
<li>提案分布gを良い感じにする（青の線の形を決める）</li>
<li>定数Mを出来るだけ小さくする（青の線の高さを決める，fとgの間の幅を決める）</li>
</ul>


<p>この受理・棄却法の前提として<strong>目標分布（赤の線）から乱数は生成できない</strong>のだから，100％受理されるようなシミュレーションは理論上不可能．だから，乱数が生成できるような候補分布を使って，定数Mを定めて，間接的に乱数を発生させようということ．</p>

<br />


<h3>練習問題 2.7 目標分布fと候補密度gがともにベータ分布だった場合に，どのような制約があるのか</h3>

<h4><img src=http://chart.apis.google.com/chart?cht=tx&chl=a+%5Cleq+%5Calpha%2C+b+%5Cleq+%5Cbeta+>が必要なことの証明</h4>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=f%28x%29++%3D+%5Cfrac%7B%5CGamma%28%5Calpha%2B%5Cbeta%29%7D%7B%5CGamma%28%5Calpha%29%5CGamma%28%5Cbeta%29%7D+x%5E%7B%5Calpha-1%7D+%281-x%29%5E%7B%5Cbeta-1%7D+%5Csim+%5Cmathcal%7BBe%7D%28%5Calpha%2C%5Cbeta%29+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=g%28x%29++%3D+%5Cfrac%7B%5CGamma%28a%2Bb%29%7D%7B%5CGamma%28a%29%5CGamma%28b%29%7D+x%5E%7Ba-1%7D+%281-x%29%5E%7Bb-1%7D+%5Csim+%5Cmathcal%7BBe%7D%28a%2Cb%29+>
より</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cfrac%7Bf%28x%29%7D%7Bg%28x%29%7D++%3D+%5Cfrac%7B%5CGamma%28%5Calpha%2B%5Cbeta%29%5CGamma%28a%29%5CGamma%28b%29%7D%7B%5CGamma%28a%2Bb%29%5CGamma%28%5Calpha%29%5CGamma%28%5Cbeta%29%7D+x%5E%7B%5Calpha-a%7D+%281-x%29%5E%7B%5Cbeta-b%7D+></p>

<p>となり，比<img src=http://chart.apis.google.com/chart?cht=tx&chl=f%2Fg+>が有界になる（どっかのxの値が<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cinf+>になったりしない）には，xや(1-x)のベキ数の部分が0以上でである必要がある．よって<img src=http://chart.apis.google.com/chart?cht=tx&chl=a+%5Cleq+%5Calpha%2C+b+%5Cleq+%5Cbeta+>が必要．</p>

<p>上の細かい証明は省略するが，要するにベータ分布<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cmathcal%7BBe%7D%28a%2Cb%29+>において，aとbが1未満の時には0と1の両端で値が跳ね上がる．以下の図は，「<a href="http://www.amazon.co.jp/gp/product/4621061224/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4621061224&linkCode=as2&tag=yagays-22">パターン認識と機械学習 上</a><img src="http://www.assoc-amazon.jp/e/ir?t=yagays-22&l=as2&o=9&a=4621061224" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />」のP.70を参考にベータ分布を作図したもの．これを見ると，aとbが1のときにちょうど一様分布のような形をとり，それより小さいと下に凸，それより大きいと上に凸のような分布の形になることがわかる．なので，ベータ分布が有界であるにはxや(1-x)のベキ数の部分がポイントになってくる．</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1"># 練習問題 2.7 ベータ関数の分布を図示してみる</span>
</span><span class='line'>par<span class="p">(</span>mfrow<span class="o">=</span>c<span class="p">(</span><span class="m">2</span><span class="p">,</span><span class="m">2</span><span class="p">))</span>
</span><span class='line'>curve<span class="p">(</span>dbeta<span class="p">(</span>x<span class="p">,</span><span class="m">0.1</span><span class="p">,</span><span class="m">0.1</span><span class="p">),</span>col<span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">,</span>lwd<span class="o">=</span><span class="m">2</span><span class="p">,</span>ylim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">3</span><span class="p">),</span>main<span class="o">=</span><span class="s">&quot;Be(0.1,0.1)&quot;</span><span class="p">)</span>
</span><span class='line'>curve<span class="p">(</span>dbeta<span class="p">(</span>x<span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">1</span><span class="p">),</span>col<span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">,</span>lwd<span class="o">=</span><span class="m">2</span><span class="p">,</span>ylim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">3</span><span class="p">),</span>main<span class="o">=</span><span class="s">&quot;Be(1,1)&quot;</span><span class="p">)</span>
</span><span class='line'>curve<span class="p">(</span>dbeta<span class="p">(</span>x<span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">3</span><span class="p">),</span>col<span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">,</span>lwd<span class="o">=</span><span class="m">2</span><span class="p">,</span>ylim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">3</span><span class="p">),</span>main<span class="o">=</span><span class="s">&quot;Be(2,3)&quot;</span><span class="p">)</span>
</span><span class='line'>curve<span class="p">(</span>dbeta<span class="p">(</span>x<span class="p">,</span><span class="m">8</span><span class="p">,</span><span class="m">4</span><span class="p">),</span>col<span class="o">=</span><span class="s">&quot;red&quot;</span><span class="p">,</span>lwd<span class="o">=</span><span class="m">2</span><span class="p">,</span>ylim<span class="o">=</span>c<span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">3</span><span class="p">),</span>main<span class="o">=</span><span class="s">&quot;Be(8,4)&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dl.dropbox.com/u/142306/b/imcmr/chp2_beta.png" alt="" /></p>

<h4><img src=http://chart.apis.google.com/chart?cht=tx&chl=a+%3D+%5Cleft%5Clfloor+%5Calpha+%5Cright%5Crfloor+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=b+%3D+%5Cleft%5Clfloor+%5Cbeta+%5Cright%5Crfloor+>の証明</h4>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=f%28x%29%2Fg%28x%29+>を微分して最大値を取る時のxを求めると，<img src=http://chart.apis.google.com/chart?cht=tx&chl=x_%7Bmax%7D+%3D+%5Cfrac%7B%5Calpha-a%7D%7B%5Calpha-a%2B%5Cbeta-b%7D+>となる．よって，上で証明した<img src=http://chart.apis.google.com/chart?cht=tx&chl=a+%5Cleq+%5Calpha%2C+b+%5Cleq+%5Cbeta+>を満たしつつ自然数aとbが最適な値を取るには，<img src=http://chart.apis.google.com/chart?cht=tx&chl=a+%3D+%5Cleft%5Clfloor+%5Calpha+%5Cright%5Crfloor+%2C+b+%3D+%5Cleft%5Clfloor+%5Cbeta+%5Cright%5Crfloor+>となる．これもまあ厳密な証明はできなくても直感的に考えれば明らかだろう．</p>

<br />


<h3>練習問題 2.8 二重指数分布から正規乱数を生成する</h3>

<ul>
<li><img src=http://chart.apis.google.com/chart?cht=tx&chl=f%28x%29+%3D+%5Cfrac%7B1%7D%7B%5Csqrt%7B2%5Cpi%7D%7D%5Cexp%28-%5Cfrac%7Bx%5E2%7D%7B2%7D%29+%5Csim+%5Cmathcal%7BN%7D%280%2C1%29+></li>
<li><img src=http://chart.apis.google.com/chart?cht=tx&chl=g%28x%7C%5Calpha%29+%3D+%5Cfrac%7B%5Calpha%7D%7B2%7D%7D%5Cexp%28-%5Calpha+%7Cx%7C%29+></li>
</ul>


<h4>a. 定数Mの取りうる範囲と最小値を求める</h4>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cfrac%7Bf%28x%29%7D%7Bg%28x%7C%5Calpha%29%7D+%3D+%5Csqrt%7B%5Cfrac%7B2%7D%7B%5Cpi%7D%7D%5Calpha%5E%7B-1%7D%5Cexp%28-%5Cfrac%7Bx%5E2%7D%7B2%7D+%2B+%5Calpha%7Cx%7C%29+></p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=x+%3D+%5Calpha+>のとき，<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cfrac%7Bf%28%5Calpha%29%7D%7Bg%28%5Calpha%29%7D+%3D+%5Csqrt%7B%5Cfrac%7B2%7D%7B%5Cpi%7D%7D%5Calpha%5E%7B-1%7D%5Cexp%28-%5Cfrac%7B%5Calpha%5E2%7D%7B2%7D+%2B+%5Calpha%5E2%29+%3D+%5Csqrt%7B%5Cfrac%7B2%7D%7B%5Cpi%7D%7D%5Calpha%5E%7B-1%7De%5E%7B%5Calpha%5E2%2F2%7D+>となり，与式を満たす．</p>

<p>Mの最小値は，上式を微分すると<img src=http://chart.apis.google.com/chart?cht=tx&chl=%28-%5Calpha%5E2%2B1%29%5Cexp%28-%5Cfrac%7B%5Calpha%5E2%7D%7B2%7D%29+>が出てくるので，<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Calpha+%3D+%5Cpm+1+>となる．候補分布に課された制約(P.59)より，fとgどちらか一方だけ負になることは無いので，<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Calpha+%3D+1+>が正解．（二階微分すれば-1のとき最小値，1のとき最大値だとわかる）</p>

<h4>b. 受理確率を求める</h4>

<p>受理確率は1/Mで表される．最適なMの値は<img src=http://chart.apis.google.com/chart?cht=tx&chl=M+%3D+%5Csqrt%7B%5Cfrac%7B2%7D%7B%5Cpi%7D%7De%5E%7B1%2F2%7D+>となるので，<img src=http://chart.apis.google.com/chart?cht=tx&chl=1%2FM+%3D+%5Csqrt%7B%5Cpi%2F2e%7D+%3D+1%2F0.76+%5Csimeq+1.3+>となる．</p>

<h4>c. 候補分布から乱数を生成するために逆変換をする</h4>

<p>受理・棄却法を使うには，当然候補分布から乱数が生成できなければいけない．今回は二重指数分布から乱数を生成して間接的に正規乱数を求めているので，二重指数分布から乱数を生成するために，2章前半で行った逆変換を行う．</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=G%28x%29+%3D+%5Cint_%7B-%5Cinfty%7D%5E%7Bx%7D+g%28y%7C%5Calpha%29+dy+%3D+%5Cbegin%7Bcases%7D+%5Cfrac%7B1%7D%7B2%7De%5E%7B%5Calpha+x%7D+%26+%28x+%3C+0%29+%5C%5C+1+-+%5Cfrac%7B1%7D%7B2%7De%5E%7B%5Calpha+x%7D+%26+%28x+%3E+0%29+%5Cend%7Bcases%7D+></p>

<p>より，</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cbegin%7Bcases%7D+x+%3D+%5Cfrac%7B1%7D%7B%5Calpha%7D%5Clog%282u%29+%26+%28u+%3C+%5Cfrac%7B1%7D%7B2%7D%29+%5C%5C+x+%3D+-%5Cfrac%7B1%7D%7B%5Calpha%7D%5Clog%282%281-u%29%29+%26+%28%5Cfrac%7B1%7D%7B2%7D+%3C+u+%3C+1+%29%5Cend%7Bcases%7D+></p>

<p>となる．あとは<img src=http://chart.apis.google.com/chart?cht=tx&chl=U+%5Csim+%5Cmathcal%7BU%7D_%7B%5B0%2C1%5D%7D+>で生成される乱数を上式に当てはめて計算すればよい．</p>
]]></content>
  </entry>
  
</feed>
