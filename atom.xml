<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Wolfeyes Bioinformatics beta]]></title>
  <link href="http://yagays.github.io/atom.xml" rel="self"/>
  <link href="http://yagays.github.io/"/>
  <updated>2014-04-11T22:08:16+09:00</updated>
  <id>http://yagays.github.io/</id>
  <author>
    <name><![CDATA[yag_ays]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[「アメリカのめっちゃスゴい女性たち」読了]]></title>
    <link href="http://yagays.github.io/blog/2014/04/11/review-55-fabulous-women-in-america/"/>
    <updated>2014-04-11T14:59:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/04/11/review-55-fabulous-women-in-america</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4838726465" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>タイトルそのままに，アメリカ合衆国で活躍する女性を紹介した本書．自伝のあらすじを並べたような短さと簡潔さで，ざっと読んでもそれぞれの登場人物の生き様を感じることができる．その中でも女性の力強さには毎度，いや1ページごとに驚かされる．男性社会におけるガラスの天井，人種差別，両親の離婚や貧困に起因する複雑な少女時代，そのどれもが逆境として描かれる．それをすべて現在の活躍の糧だと考えるのは行き過ぎかもしれないし，そういう環境で育った人間はすべからく偉大な一人になれるかといえば必ずしもそうではない．彼女らは一握りのイレギュラーであることに間違いない．そして一人の象徴される人間の裏には大多数のサイレント・マジョリティ，もしくは芽の出ない才能を持った女性が多数いたことだろう．その中で出る杭となって出てきた彼女らの功績は賞賛されるべきものであり，まさに「めっちゃスゴい」人生だ．</p>

<p>雑誌に連載されていたコラムのためか，それぞれの記事の情報量には物足りなさを感じる部分もある．しかしながら，本書は次へ進むきっかけと捉えて，より深く知りたいと考えるには充分だと思う．少なくとも私は，紹介されているコメディアンの出演するドラマを見たくなったし，現役で活躍するCEOの会社の今後が楽しみになったし，そういった女性が活躍する土壌を持つアメリカの文化をより知りたくなった．それにしても55人(実際には+2人)の人生を一度に眺めるのはなかなか大変だ．まずは興味を持ったところから調べ始めよう……．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[後傾姿勢になれるIKEAのアームチェアPOÄNGがライフチェンジングだった話]]></title>
    <link href="http://yagays.github.io/blog/2014/04/04/poang-chair/"/>
    <updated>2014-04-04T14:33:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/04/04/poang-chair</id>
    <content type="html"><![CDATA[<p><a href="http://yagays.github.io/blog/2014/03/30/cpd-winter-intern/">この前のインターン</a>で座った椅子が思いの外良い体験だったので，増税前にと自分も一式揃えてしまった．</p>

<p><a href="http://www.ikea.com/jp/ja/catalog/categories/series/07472/">POÄNG/ポエング シリーズ - IKEA</a></p>

<p>購入したのは，アームチェアとフットスツールとフロアランプ．私の場合は実際にIKEAの店舗に行って購入したのだけれども，トータルで15,000円くらいに送料2,000円くらいだった．これをソファと考えると，かなりお手頃な値段と言える．</p>

<p>そもそも自分は普通の机で作業していると，つい前のめりになって無意識に肩に力が入ってしまう癖がある．なので集中しているといつの間にか肩こりがヤバくて，それに伴う頭痛というコンボがかなりの悩みの種だった．エンジニアが椅子にこだわるように，コレばかりはアーロンとかエンボディとかリープとか良い椅子買ったりしないと駄目なのかなーと思っていたのだけれども，今回この深く座る型のアームチェアに座ったら見事に様々な問題が解消されて，こんな解決方法があったのかと「エウレカ！」状態だった．ソファみたいな椅子に深くすわることによって，自然と前傾姿勢が取れなくなり，肩に力が入らなくなる．それにラップトップの画面と顔との距離も適度に離れるので，目にも優しい．あとは足を放り出す体制なので，足を組む癖も解消される．まさに自分にピッタリな椅子だった．強いて欠点を上げるとするならば，少し通気性が悪いということと，だんだん眠くなってくるということだろうか．それを差し引いても，この椅子で作業する快適さは揺らがない．</p>

<p>こういう後傾姿勢はエンジニア的にも導入事例があるようで，<a href="http://alpha.mixi.co.jp/2011/10753/">Mixiのエンジニアのオフィス</a>では<a href="http://www.okamura.co.jp/product/work/cruise_atlas/index.html">クルーズ＆アトラス</a>という机と椅子のセットを導入しているらしい．これは椅子自体が後傾姿勢をサポートしているのはもちろん，机もそれに合わせて傾けられるというもので，まさに自分の追い求めているものにかなり近い環境だと言える．実際に座ったことはないので自分に合うかどうかはわからないけれども，一度は試してみたい．</p>

<p>そんなこんなで思い切ってアームチェアを買ってしまったのだけれども，今のところかなり快適に過ごせている．もし椅子の悩みを抱えている人がいるなら，オフィス用の高い椅子を買うという選択肢以外にも，こういう代替案があるということもぜひ知ってもらいたい．まあ会社では使えないかもしれないが&#8230;&#8230;．</p>

<p><img src="http://dl.dropboxusercontent.com/u/142306/b/poang.jpg" alt="" /></p>

<ul>
<li><a href="http://www.ikea.com/jp/ja/catalog/products/S89864546/#/S49887502">POÄNG アームチェア - グラノン ブラック, バーチ材突き板 - IKEA</a></li>
<li><a href="http://www.ikea.com/jp/ja/catalog/products/S89889405/">POÄNG フットスツール - グラノン ブラック, バーチ材突き板 - IKEA</a></li>
<li><a href="http://www.ikea.com/jp/ja/catalog/products/70231356/">UPPBO フロア/読書ランプ - IKEA</a></li>
</ul>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B008QTUGWY" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B008R5XWSC" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00JEY8NDY" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[超！A＆G＋の自動録画環境を作った]]></title>
    <link href="http://yagays.github.io/blog/2014/04/01/agqr-recording-script/"/>
    <updated>2014-04-01T11:50:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/04/01/agqr-recording-script</id>
    <content type="html"><![CDATA[<p>声優ラジオの知見をより一層深めるために<a href="http://www.agqr.jp/">超！A＆G＋</a>のストリーミングを録画する環境を作った．</p>

<p>(追記4/2:y_benjo氏がより書きやすいyaml構造のスクリプトに改良してくれているので，そちらも参照<a href="https://gist.github.com/ybenjo/9904543">https://gist.github.com/ybenjo/9904543</a>)</p>

<h3>注意</h3>

<p>この記事に含まれているスクリプトの利用はすべて自己責任でお願いします．また，この記事に関する質問等は一切お答えしませんのでご了承下さい．</p>

<h3>録画環境</h3>

<p>想定している環境は以下の通り．</p>

<ul>
<li>常にインターネットに繋がっていてRubyが動いてcronが回せる環境

<ul>
<li>スクリプトを定期実行して録画を開始・停止する</li>
<li>Mac OS XもしくはLinux推奨</li>
</ul>
</li>
<li><a href="http://rtmpdump.mplayerhq.hu/">RTMPDump</a>

<ul>
<li>AGQRの録画</li>
</ul>
</li>
<li><a href="http://www.ffmpeg.org/">FFmpeg</a>

<ul>
<li>flvからmp4へのエンコード</li>
</ul>
</li>
</ul>


<h3>録画スクリプト</h3>

<p>録画したい番組の情報をschedule.yamlに書き，cronで定期実行するagqr.rbが録画を実行する．スクリプト冒頭のradio_dir，rtmpdump，ffmpegは各自の環境に合わせて変更する．</p>

<script src="https://gist.github.com/yagays/9898758.js"></script>


<h3>運用</h3>

<h4>ディレクトリとファイル</h4>

<p>スクリプトや録音ファイルなどを置くradioディレクトリは以下のように設定する．実行時に必須なのはagqr.rb，schedule.yaml，fileおよびtmpディレクトリ．なお<strong>tmp以下のflvフィアルは自動的に削除されない</strong>ので，不要になれば手動で削除する必要がある．</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ tree radio
</span><span class='line'>radio
</span><span class='line'>├── agqr.rb
</span><span class='line'>├── file
</span><span class='line'>│   ├── *.mp4
</span><span class='line'>│   └── tmp
</span><span class='line'>│       └── *.flv
</span><span class='line'>└── schedule.yaml
</span></code></pre></td></tr></table></div></figure>


<h4>cron</h4>

<p>cronによる定期実行は以下のように毎時29分と59分にスケジュールし，開始15秒前から録画がスタートするように45秒スリープしてからagqr.rbを実行する．</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ crontab -l
</span><span class='line'>29,59 * * * * sleep 45;cd /path/to/radio;/usr/bin/ruby /path/to/radio/agqr.rb</span></code></pre></td></tr></table></div></figure>


<h4>schedule.yaml</h4>

<p>録画スケジュールを管理するschedule.yamlは以下のように設定する．ファイル形式は<a href="http://www.yaml.org/">YAML</a>，それぞれの録画スケジュールは順不同．</p>

<ul>
<li>record: true/false

<ul>
<li>録画をするかどうかを指定する</li>
</ul>
</li>
<li>title:</li>
<li>personality:

<ul>
<li>パーソナリティがいない(titleに含まれている)場合は空白で良い</li>
</ul>
</li>
<li>date:wday:

<ul>
<li>曜日を指定．月曜なら1，火曜なら2という具合に．</li>
</ul>
</li>
<li>date:hour:

<ul>
<li>開始時刻(時)</li>
</ul>
</li>
<li>date:min:

<ul>
<li>開始時刻(分)</li>
</ul>
</li>
<li>date:time:

<ul>
<li>録画時間(秒)</li>
<li>開始15秒前から録画スタートするので，30分番組なら1815，1時間番組なら3615といったように15秒多めに指定した方が良いかもしれない．ここは各自で調節する</li>
</ul>
</li>
</ul>


<h3>参考</h3>

<ul>
<li><a href="http://mira.mie.jp/a/74">超A&amp;G+を録画する@Linux - mirahouse</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[クックパッドのウィンターインターンシップに参加してきた]]></title>
    <link href="http://yagays.github.io/blog/2014/03/30/cpd-winter-intern/"/>
    <updated>2014-03-30T13:15:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/03/30/cpd-winter-intern</id>
    <content type="html"><![CDATA[<p>3/24から28まで<a href="https://info.cookpad.com/graduates/internship">クックパッドのインターンシップ</a>に参加してきた．あんまり写真は無いけれども，一人の参加者として考えたこととか感じたことを書いていこうと思う．</p>

<p><img src="http://dl.dropboxusercontent.com/u/142306/b/cpd_office.jpg" alt="" /></p>

<h3>参加前</h3>

<p>ESとウェブテストを受けて合格の連絡を貰うとともに，人事の方に「iOSかAndroidのネイティブアプリの開発をしてもらいたいのですが」と言われ，iOS開発の方を選ぶ．インターン参加の連絡を受けてから1ヶ月近くは，とにかくiOS開発の勉強に追われた．結果から言うと参加者の大半はネイティブアプリ開発の初心者だったのだが，それぞれの技術力は高く，自分としても準備しておいて良かったと本当に思った．</p>

<p><img src="http://dl.dropboxusercontent.com/u/142306/b/paperprototype.jpg" alt="" /></p>

<h3>インターン期間中</h3>

<p>1日目は全員が集まってまずは自己紹介．参加者は合計で11人．個性豊かなメンツが揃っていて，上は博士後期課程から下は高専生，ガチなプログラマーがいたり，はてなインターンの経験者がいたりと，本当にバリエーションに富んでいて面白かった．</p>

<p>開発環境などのセッティングを済ませて，その後は複数の社員の方からクックパッドの社内でのものづくりの考え方や具体的なエンジニアリングについての話を聞く．クックパッドといえば(個人的には)トップレベルのウェブエンジニアの集まりという印象を持っていたけれども，実際にはユーザを中心としたサービスを支えるための技術というハッキリとした意図が見えて良かった．</p>

<p>1日目午後から最終日までは，ひたすら自分で決めたテーマのアプリ開発．ここからはとにかく時間に追われながらの作業で，最終日までに実機で動くアプリを作成するのに精一杯だった．iOSやAndroidアプリは往々にしてウェブサービスのインターフェイスとしての要素が強く，逆に言えばアプリのコードだけ書いてもコンテンツが無ければ何も面白く無い場合が多い．そのため，参加者はそれぞれ既存のウェブサービスのAPIを探したり独自でAPIサーバを立てるなど，アプリに入る以前にそれらを利用・開発することが求められる．それに加えてアプリには当然ながらデザインが欠かせない要素としてあって，いかにUI/UXな部分を洗練させて操作画面の構成やアイコンなどを作り上げなければいけなく，アプリ開発中は本当に一人で何でもやる必要があった．</p>

<h3>料理</h3>

<p>4日目の昼飯は，僕が進んで申し出て料理を作った．当日の進捗報告でインターフェイスについてコテンパンにされた直後に自分だけキッチンに立って他の参加者の作業を尻目に料理していたわけだけど，結果的にはみんなに美味しいと言ってもらえて最高に嬉しかった．</p>

<p>作ったのは「チョリソーと夏野菜のラタトゥイユ」と「鶏肉の香草焼きとマッシュルームの付け合わせ」．あとは生ハム&amp;チーズ&amp;クラッカー的なやつとバケットと一緒に食べた．11人分作る必要があって死にそうになったけど，結果的に作りたての料理をテーブルに並べることができて我ながら良い出来だと思った．</p>

<p><img src="http://dl.dropboxusercontent.com/u/142306/b/mesi.jpg" alt="" /></p>

<h3>作ったiOSアプリ</h3>

<p>さて，自分は今回「NICOMI」という日常のちょっとした変化を撮り続けるカメラアプリを作成した．詳しくは発表資料を参照．アプリを公開とかはしません．</p>

<iframe src="http://www.slideshare.net/slideshow/embed_code/32899229" width="476" height="400" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe>


<p>なんで今さらカメラアプリなんて作りたかったということを少し書きたい．</p>

<p>スマホのカメラアプリは既にInstagramやVineなどの独擅場になりつつあるが，それらは被写体が面白いものであったり何か強烈なメッセージを発している場合が多い．しかもそれは単体でコンテンツになりうることが殆どだ．そういうモノに対して人はカメラを向けるのは至極真っ当なんだけど，本当はそれ以外にも日常の風景や些細なモノを写真に撮りたいと感じているはずだと思う．だけど，それを撮るには理由がない．iPhoneの中によくわからない空の写真や町中の写真が一杯詰まってても奇妙に思うだけだろう．しかし，なにか理由があればそれは正当化される．写真の背景にあるストーリーがあれば，「これはこういうアプリがあって，そのために撮ったんだよ」と人に説明できる．そういう理由付けとしての日常のちょっとした変化をテーマにしてユーザに提供するアプリが作りたかった．当初は完全に運営側がユーザに撮ってもらうテーマを提供する予定だったが，それだと面白くないということで，ユーザからもテーマを投稿できるようにもした．</p>

<p>それに，変化を楽しむというのも重要なポイントとしてある．誰も友達が数日前・数週間前・数ヶ月前に撮った写真のことなんて覚えていない．覚えてても，それを紐づけることは難しい．だから，定期的に写真を撮るというモチベーションを与えつつ，それを一覧できるサービスを作りたかった．結果的にただの写真まとめアプリみたいになったけれども，なんか考えていることを形にできたので自分としては満足している．</p>

<h3>成果発表</h3>

<p>他の参加者のアイデアも本当に面白いものばかりで，開発期間中にもっと話して議論したかったと真面目に後悔するレベルだった．アプリのインターフェイスが独創的だったり，操作を極力減らしてn-stepを1-stepにするものだったりと，自分では考え付かないようなことがばかりで素晴らしかった．それこそ利益化につながらないかもしれないし，それだけではユーザが付かないかもしれないけれども，アイデアの原石としては光るものが確かにあった．</p>

<p>これから1年後や5年後に台頭してくるサービスがあったときに「それ自分も考えてたよ」なんて言うのは簡単だけれども，そのありふれたアイデアを実際にブラッシュアップしていくことが，将来の人々の本当の価値に繋がるんじゃないかと思う．そういう意味で，いろんなバックグラウンドの人が考えたいろんなアイデアを聞くのは本当に楽しいし，そこで既存サービスを引き合いにだして将来性の無さを嘆くんじゃなくて，足し算や引き算を繰り返して洗練したものは，きっと純粋に面白いサービスになると僕は信じている．</p>

<h3>さいごに</h3>

<p>このインターンは本当にいろんな人にお世話になりました．インターン全体のサポートとして参加者と密にコミュニケーションを取ってくださった@mrknさんや人事の方を始め，参加者に着きっきりで技術面のサポートをしてくれたメンターのお二人，そして同じ時間同じ場所で切磋琢磨し合った参加者の皆様，本当にありがとうございました．</p>

<p><img src="http://dl.dropboxusercontent.com/u/142306/b/cpd_photo.jpg" alt="" /></p>

<h3>おまけ</h3>

<p>懇親会終わりのマックスの疲労とテンションの高さも相まって道路脇のコーンを抱える@moznion氏．</p>

<p><img src="http://dl.dropboxusercontent.com/u/142306/b/moz.jpg" alt="" /></p>

<h3>他の参加者のレポート</h3>

<ul>
<li><a href="http://kouki.hatenadiary.com/entry/2014/03/30/155824">クックパッドのインターンに行ってきて料理をしなかったお話。 - kouki_danの日記</a></li>
<li><a href="http://moznion.hatenadiary.com/entry/2014/04/01/000636">COOKPAD 5-day winter internshipに参加したのでポエムを - その手の平は尻もつかめるさ</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「アナと雪の女王」の"Let it go"の演出だけでわかる物語の背景]]></title>
    <link href="http://yagays.github.io/blog/2014/03/11/frozen-let-it-go/"/>
    <updated>2014-03-11T07:55:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/03/11/frozen-let-it-go</id>
    <content type="html"><![CDATA[<iframe width="640" height="360" src="http://yagays.github.io//www.youtube.com/embed/moSFlvxnbgk" frameborder="0" allowfullscreen></iframe>


<p>アカデミー賞2冠の「<a href="http://ugc.disney.co.jp/blog/movie/category/anayuki/">アナと雪の女王</a>」(原題&#8221;Frozen&#8221;)の公開が今週に控えて非常に楽しみなのだけれども，それに先駆けて主題歌&#8221;Let It Go&#8221;のシーンの抜粋がディズニー公式で上がっていたので，その感想を少し書き出そうと思う．ちなみに動画内で歌っているのは題名にあるアナではなく，その姉のエルサらしい．</p>

<p>当然映画本編は見てないし予告編をチラッと見たくらいでストーリーも大雑把にしかわからないのだが，この動画が伝える情報量ははるかに多く，歌詞も相まって彼女の置かれている境遇や心境が手に取るようにわかる．テーマ的には身分や責務という束縛からの解放，典型的な通過儀礼の初っ端というところだろうか．</p>

<p>さて，歌いながら彼女が何をしているかといえば，単に着替えているだけなのだけれども，その意図が非常にわかりやすい．それまで着ていた伝統的かつ高貴なドレスから，グローブを取り，マントを脱ぎ捨て，髪留めを放り投げ編んでいた髪を解き，最後には自分で作り上げた自由なドレスへと変身してしまう．つまりは他人に押し付けられた衣装を脱ぎ捨てていくという行為が，自分らしさを取り戻していくという過程につながっている．歌う時のジェスチャーもまさに心境を反映したものであり，最初は両手を握り胸の当たりに当てて戸惑う雰囲気をだしつつ，ドレスを着替えた後半からは両腕をめいっぱい広げ堂々とした姿で力強く歌い上げる．曲の盛り上がりも相まって，まさに解放，まさに自由といったパワーを感じる．また，最後のバルコニーでの振り向きざまにドアが閉まるシーンも，その後の彼女の心境として象徴的だ．故郷や地位の抑圧から解き放たれた彼女は自分らしさを獲得したが，一方で客観的に見れば彼女は自分自身の殻に閉じこもってしまったということなのだろう．</p>

<p>というわけで，この映像だけでバッチリ予習もできたことだし，早く本編を見たいところ．姉と妹という関係が物語にどう影響してくるのかが気になる．それにしても，動画を何度見返しても髪留めの放り投げ方が凄まじいのがすごい気になる……．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「マインクラフト 革命的ゲームの真実」読了]]></title>
    <link href="http://yagays.github.io/blog/2014/03/09/review-minecraft/"/>
    <updated>2014-03-09T17:00:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/03/09/review-minecraft</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4046532955" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p><a href="https://minecraft.net/">マインクラフト</a>は，今やもっとも人気のあるインディーズゲームと言っても過言ではないだろう．本書は，マインクラフトというゲームとその開発者である「ノッチ」ことMarkus Perssonについて，その成功の軌跡を追った作品となっている．個人が片手間で開発したゲームが突然爆発的な人気を博し，それにともなってゲーム会社の設立やコンシューマ機への移植，ゲーマーの多様化など，マインクラフトを取り巻くエコシステムがめまぐるしく変化する様を，リアルに感じることができる．それこそマインクラフトの成功はここ数年くらいの出来事であり，ノッチの開発者としての人生も十数年程度なので，まさに今起きている変革を追うのに最適な1冊だ．と同時に，インディーズゲームとしての成功例を，ある意味で生々しく見せつけられる．</p>

<p>私も数年来のマインクラフトファンだ．最初に触ったのがalphaのVersion 1.2くらいで，まだベッドが実装されてなかったことを覚えている．このゲームに夢中になるきっかけは，ぬどん氏の「<a href="http://www.nicovideo.jp/mylist/21942308">史上最大の（中略）マインクラフト実況</a>」の実況だったので，まさに本書に描かれるユーザコミュニティの拡大の影響をもろに受けた一人だ（英語圏では実況に代表される動画は<a href="http://ja.wikipedia.org/wiki/%E3%83%9E%E3%82%B7%E3%83%8B%E3%83%9E">マシニマ</a>と呼ばれる）．そこからゲームや実況を今でも楽しんでいるので，マインクラフトの変化を見続けてきたユーザといえる．</p>

<p>そういう人にとっても楽しめる1冊であることは確かなのだが，今更「ノッチは子供の頃からレゴに触れていた」とか「今やコンシューマ機に移植されたり教育にも進出しているんですよ」言われても，まあそうだろうなくらいの感覚なので，むしろノッチの家庭環境であったりマインクラフトが生まれた土壌のようなものが個人的には興味深かった．その中でも，「スウェーデン」という国とマインクラフトのつながりは，本書を読んでいて重要なポイントだと感じた．</p>

<p>マインクラフトはスウェーデンで生まれた．まずこの事実について，マインクラフトのゲーマーでも知らない人は多いと思う．そして，スウェーデンという国は，実は私たちがよく知るゲームと深い関係にある．マインクラフトとの対比でたびたび登場する「バトルフィールド」シリーズは，スウェーデンの首都ストックホルムに本社のあるDICEが，エレクトロニックアーツの子会社として開発しているゲームである．その他にも幾つものゲームメーカーがスウェーデンに開発拠点を置いている．なぜ北欧の中でもスウェーデンなのかという問いについて，本書では人口当たりのIT発達率が高いことや，英語教育が充実していること，そして英語圏のポップカルチャーを受け入れてきたということが挙げられている．そのような環境の中でノッチはゲーム開発に憧れる一人のギーク（もしくはナード）として育ち，子供時代にはレゴを，成長するにつれPCゲームへとその興味を移していった．その中で転職であったり同じ趣味を持つ仲間との出会いなどがあり，ソフトウェア開発会社で働きつつも時間を見つけて製作したのがマインクラフトだった．</p>

<p>やはり「なぜマインクラフトのようなヒット作が生まれたのか」という原因を考える上で，いかにネットが発達して情報の共有やコミュニティが発達したとしても，ある国にあるタイミングである技術者が存在していたという事実は重要な気がする．そこに意味を見出してもコントロール出来無い以上は仕方がないが，「文化」と呼べるものがあることがひとつの強みなのだと感じる．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「細胞の物理生物学」読書ノート：第4章前半]]></title>
    <link href="http://yagays.github.io/blog/2014/02/26/pboc-04-1/"/>
    <updated>2014-02-26T14:52:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/02/26/pboc-04-1</id>
    <content type="html"><![CDATA[<ul>
<li>読書ノートまとめ：<a href="http://yagays.github.io/blog/2013/11/30/archive-physical-biology-of-the-cell/">http://yagays.github.io/blog/2013/11/30/archive-physical-biology-of-the-cell/</a></li>
</ul>


<h4>この章のまとめ（前半）</h4>

<p>4章では，生物学において積極的に調べられてきたモデル生物において，その役割や歴史について個別に見ていく．すべての生物は基本的に共通した生命過程を持っているが，一方で多くの研究対象となる生物には研究者に好まれるものが存在する．そうしたモデル生物に関して，どのようなモデルが立てられ，どのような機能の解明に役立ったかをそれぞれ見ていく．</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4320057163" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=0815344503" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<h3>4.1 遺伝学と生化学の目的のために用いられるモデル生物</h3>

<ul>
<li>モデル系の元祖：エンドウマメ

<ul>
<li>モデル生物として優れた3つの特徴＝>人間にとって扱いやすい

<ul>
<li>短期間での世代交代</li>
<li>容易に計測できる遺伝形質</li>
<li>安定した大規模栽培(飼育)</li>
</ul>
</li>
</ul>
</li>
<li>現代生物学の発展のための駆動力

<ul>
<li>分子スケールの出来事と生物全体のレベルの出来事を結びつけることが重要

<ul>
<li>生物学的過程において主要な役割を果たす分子を同定する</li>
</ul>
</li>
<li>遺伝学のアプローチ

<ul>
<li>複雑な状態から一つの要素を取り除いた時に，注目する過程を遂行できるかどうかを調べる</li>
</ul>
</li>
<li>生物学のアプローチ

<ul>
<li>最小限の単純な構成要素によって，注目する過程を遂行できるかどうかを調べる</li>
</ul>
</li>
</ul>
</li>
</ul>


<h3>4.2 モデル系：ヘモグロビン</h3>

<ul>
<li>相互作用

<ul>
<li>生体活動は分子どおしの相互作用によって成り立っている</li>
<li>代表的な相互作用：受容体とリガンドの関係</li>
<li>モデルタンパク質

<ul>
<li>ヘモグロビンと酸素</li>
<li>ミオグロビン</li>
</ul>
</li>
</ul>
</li>
<li>リガンドと受容体の関係における問い

<ul>
<li>受容体の結合部位の何割が実際に結合しているかどうか？</li>
<li>それはどういう条件下で変化するのか？→関数として表したい</li>
</ul>
</li>
<li>ヘモグロビンと生理学的の関係

<ul>
<li>酸素欠乏の環境下では，ヘモグロビンに結合していた酸素を放出する傾向がある</li>
<li>実験による計測（Bohr効果）

<ul>
<li>酸素が欠乏した酸性環境下では，ヘモグロビンへのH<sup>+</sup> の結合との競合により，通常のpHより酸素を放出しやすくなる</li>
</ul>
</li>
</ul>
</li>
<li>ヘモグロビンと構造生物学の関係

<ul>
<li>遠心分離器の発達によりヘモグロビンの分子量が決定</li>
<li>その後Max Perutzが25年かけてヘモグロビンの構造を決定

<ul>
<li>ヘモグロビンの構造は酸素と結合しているかどうかで変わる→構造から機能を類推するきっかけ</li>
<li>ウマのヘモグロビンとヒトのヘモグロビンは類似している→配列相同性を扱うバイオインフォマティクスのルーツ</li>
</ul>
</li>
</ul>
</li>
<li>ヘモグロビンと病理学の関係

<ul>
<li>鎌形赤血球貧血症</li>
<li>ヘモグロビンの構造的な欠陥に起因する「分子病」</li>
</ul>
</li>
<li>アロステリーと協同性

<ul>
<li>ヘモグロビンの結合曲線のシグモイダルな挙動の説明として登場した概念</li>
<li>性質

<ul>
<li>ヘム基の4つの結合部位に対する結合のしやすさは常に一定ではない</li>
<li>1番目の酸素分子がひとつ結合すると，2番目の酸素分子は他の3つの部位に結合しやすくなる</li>
</ul>
</li>
<li>タンパク質は複数の状態構造を取る

<ul>
<li>協同性

<ul>
<li>一つの分子の異なる部位にリガンドが結合する仕方は独立ではない</li>
</ul>
</li>
<li>アロステリー

<ul>
<li>あるリガンドがタンパク質のある場所に結合することにより，タンパク質の別の部位の構造に影響を与える</li>
</ul>
</li>
</ul>
</li>
<li>Monod-Wyman-Changeux(MWC)モデル</li>
</ul>
</li>
</ul>


<h3>4.3 モデル系：バクテリオファージ</h3>

<ul>
<li>「生物学の水素原子」

<ul>
<li>生活環が短い(20分)</li>
<li>大量のウィスルを同時にアッセイできる</li>
<li>ゲノムサイズが小さい</li>
<li>ウィルスとして構造が単純</li>
</ul>
</li>
</ul>


<br/>


<ul>
<li>実験1：微生物の変異と選択（揺らぎテスト）

<ul>
<li>バクテリオファージに耐性を持つ細菌が生じるのは確率的</li>
</ul>
</li>
<li>実験2：Hershey–Chaseの実験

<ul>
<li>タンパク質ではなくDNAが遺伝物質の担い手</li>
<li>ウィスルの感染方法</li>
</ul>
</li>
<li>実験3：BenzerのT4ファージの実験

<ul>
<li>遺伝子地図の作成</li>
<li>配列としての遺伝子(物理的な広がるを持つ領域として)</li>
</ul>
</li>
<li>実験4：遺伝子の三つ組仮説の検証

<ul>
<li>遺伝暗号としてのコドンの確認</li>
</ul>
</li>
<li>実験5：mRNAの機能的役割に関する実験

<ul>
<li>mRNAがタンパク質合成の中間として働くことの証拠として</li>
</ul>
</li>
<li>実験6：生活環の制御と遺伝子制御の実験

<ul>
<li>ある種のバクテリオファージは感染後に溶原化することがある</li>
<li>遺伝子スイッチの発見

<ul>
<li>リプレッサーとアクチベーター</li>
</ul>
</li>
</ul>
</li>
<li>実験7：分子モーターの測定

<ul>
<li>光ピンセットによる分子レベルでの力学的計測</li>
</ul>
</li>
</ul>


<h4>参考：モデルの発展</h4>

<p>最後に本章の中で示唆に富む文章があったので引用しておく．一見して全く異なる現象だと思われたものが，実は同じモデルで説明が付くということが往々にして起こるということだろうか．いわゆる「巨人の肩の上に立つ」という名言にも繋がる面白い表現だと思う．それとは逆に「大抵のことはだいたい他の人が考えてる」とも言う．</p>

<blockquote><p>「あるモデル系がもう使い尽くされて無用になってしまったかに見えるちょうどそのとき，灰から蘇る不死鳥のように，これらのモデル系は新しいクラスの現象の基礎をなすモデルとして，新しい文脈で再登場する」</p>

<p>(「<a href="http://www.amazon.co.jp/gp/product/4320057163/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4320057163&linkCode=as2&tag=yagays-22">細胞の物理生物学</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=yagays-22&l=as2&o=9&a=4320057163" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />」P.157)</p>

<p>&#8220;Just when it seems that a particular model system has exhausted its usefulness, like a phoenix from the ashes, these model systems reemerge in some new context providing a model basis for some new class of phenomena.&#8221;</p>

<p>(&#8221;<a href="http://www.amazon.co.jp/gp/product/0815344503/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=0815344503&linkCode=as2&tag=yagays-22">Physical Biology of the Cell</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=yagays-22&l=as2&o=9&a=0815344503" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />&#8221; P.153)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Being Geek ―ギークであり続けるためのキャリア戦略」読了]]></title>
    <link href="http://yagays.github.io/blog/2014/02/21/review-beging-geek/"/>
    <updated>2014-02-21T08:23:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/02/21/review-beging-geek</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4873114993" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>書店でこの本を見かけたら，まず第23章「『ナード』ハンドブック」を読んでみてほしい．そこに書かれていることがまるで自分のことのように思えたら，きっと本書はあなたにピッタリだ．現状でのキャリアに満足しているにせよしていないにせよ，ギークとして仕事をもっと巧くやりぬくために大いに参考になるだろう．</p>

<p>本書はギークと総称される職人気質なソフトウェア開発者のための仕事術に焦点をあてている．著者はギーク出身の現マネージャーで，彼がギークとして活躍していた頃の，そして彼がマネージャーとしてその能力をマネジメントに活かした時の経験がふんだんに盛り込まれている．</p>

<p>本書は，4部構成全40章の短いエッセイで構成されており，転職の話から始まって転職の話で終わる．それはすなわち，長い人生の中のある時点でひとつの会社へのキャリアがはじまりある時点でそのキャリアが終わるという，会社を軸にしたキャリアの単位を表してる．そこには，転職を上手に進めるにはどうすればよいかということからスタートし，実際に会社に入った後の上司との付き合い方，プロジェクトの管理，仕事に必要なスキル，そしてその会社を離れるときに巻き起こる周囲への影響などが含まれる．本書ではそういったエンジニアが経験するであろうことについて，時には上手い対処の仕方，時には冷静で客観的な見方を教えてくれる．</p>

<br/>


<p>私自身はまだソフトウェア開発者としてのキャリアの中にはいない人間なので，正直に言って書かれていることに現実味を感じないところもある．トピックごとの粒度などエッセイの構成が合わないと感じることもあったが，幾つかは非常に印象に残るものだった．こういう本の類は読み通すことにそれほどの重要性があるわけではないと思うので，ざっと読んでみて気に入ったエッセイを探したり，適当に気になるものだけを読んでみるのも良いと思う．ちなみに，自分が気に入ったエッセイは以下の通り．</p>

<ul>
<li>8章 企業文化

<ul>
<li>少数のコアメンバーが企業全体の文化を支えているということについて．それがある時変化するということはどういうことを意味するのか．</li>
</ul>
</li>
<li>23章 「ナード」ハンドブック

<ul>
<li>パートナー向け，ギークやナードの取扱説明書．</li>
</ul>
</li>
<li>26章 「危機」と「創造」モデル

<ul>
<li>メンタルモデル，すなわち気の持ちようについて．</li>
</ul>
</li>
<li>30章 声を出す

<ul>
<li>人前でプレゼンテーションをするときのテクニック．ところでプレゼンテーションとスピーチの違いって分かる？</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Withingsのpulseを購入した]]></title>
    <link href="http://yagays.github.io/blog/2014/02/20/withings-pulse/"/>
    <updated>2014-02-20T20:18:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/02/20/withings-pulse</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00CW7KK9K" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>とうとうpulseを買ってしまった！</p>

<p><a href="http://www.withings.com/pulse">Withings - Pulse - Description</a></p>

<p>もとを辿れば今月上旬にsyou6162を飯を食べたときにfitbitを勧められて以来，そういったiPhoneと連携した行動ログを記録する系のガジェットが欲しいなと思っていたのだが，色々考えた結果Withingsのpulseにした．候補としては<a href="http://www.amazon.co.jp/gp/product/B00BMFYAJO/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=B00BMFYAJO&linkCode=as2&tag=yagays-22">Fitbit One</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=yagays-22&l=as2&o=9&a=B00BMFYAJO" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />や<a href="http://www.amazon.co.jp/gp/product/B00BMFYB8Y/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=B00BMFYB8Y&linkCode=as2&tag=yagays-22">Fitbit Zip</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=yagays-22&l=as2&o=9&a=B00BMFYB8Y" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />，<a href="http://www.amazon.co.jp/gp/product/B00C6QW8I8/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=B00C6QW8I8&linkCode=as2&tag=yagays-22">JawboneのUp</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=yagays-22&l=as2&o=9&a=B00C6QW8I8" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />，<a href="http://www.amazon.co.jp/gp/product/B007NMLRYG/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=B007NMLRYG&linkCode=as2&tag=yagays-22">nike+fuelband</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=yagays-22&l=as2&o=9&a=B007NMLRYG" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />などと比較検討したのだけれども，最終的には「ひとがあんまり持ってなさそうだから」という理由が決め手となった．なんとも自分らしいというか子供っぽいというか．というよりかは，形以外は機能もシステムもかなり似ているので，それぞれ長所短所はあれど，結局使ってみないとわからないかなぁということで機能面では決められなかった．悩んでいるときには東京と大阪の大型家電量販店を数店舗見て回ったんだけれども，やはり全面に押し出されているのはFitBitとUpで，fuelbandとpulseはApple Storeにしか置いていないという状態だった．それに，Upに至っては店員さんに聞いたらMサイズが青色以外在庫切れで次回入荷も未定ということだったので，これは人気が出ているということなのかと漠然と感じることがあった．まあ周りにそういうガジェット持ってる人いないけど．</p>

<p>さて，買ったからには有効活用せねばということで，ウォーキングなどを積極的に行っていきたいと思っている．普段どれくらい歩いているか分からないので目標はまだ決められないのだけれども，毎日8k~10k歩くらいに設定しようかと考えているが，果たしてnヶ月後どうなっていることやら．</p>

<p><img src="http://dl.dropboxusercontent.com/u/142306/b/pulse.jpg" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「マーク・ピーターセンの英語のツボ」読了]]></title>
    <link href="http://yagays.github.io/blog/2014/02/16/review-wit-and-foolishness-in-english/"/>
    <updated>2014-02-16T22:35:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/02/16/review-wit-and-foolishness-in-english</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=433478593X" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>「<a href="http://www.amazon.co.jp/gp/product/4004300185/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4004300185&linkCode=as2&tag=yagays-22">日本人の英語</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=yagays-22&l=as2&o=9&a=4004300185" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />」などでお馴染みのマーク・ピーターセンの著作．2から3ページの比較的短いコラムが多数収録されている．それぞれのコラムには掲載当時に話題になったトピックにまつわる英文を取り上げて，その中にある英語的な表現法であったり日本人が知らない/誤解しそうなニュアンスについて，時事問題を絡めながら解説される．例えば，ブッシュ元アメリカ合衆国大統領のちょっとおかしな演説の1文を引き合いに出し，それが英語としてどうヘンなのか，なぜそのようなことを言ったのか，英語ネイティブがその発言から読み取るニュアンスはどのようなものなのかといったことが日本語で説明される．最初に示される英語は何となく直訳できるけど……と思いながらコラムを読んでいくと，そういうことだったのか！なるほど！の連続で，読み終わる頃にはすっかりネイティブの視点になれる．もちろんニュアンスだけでなく文法的な部分も解説されるので，知識としても強化できる．</p>

<p>英語を勉強しつつ，アメリカ合衆国という国に対する知識も深められる1冊．毎日ちょっとずつ読み進めることもできるので，ちょっと空いた時間にオススメ．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「強いチームはオフィスを捨てる」読了]]></title>
    <link href="http://yagays.github.io/blog/2014/02/13/review-remote/"/>
    <updated>2014-02-13T00:00:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/02/13/review-remote</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4152094338" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>37signals(現Basecamp)の最新の著作．今回は社員が自宅で働くというリモートワークに焦点をあて，オフィスに束縛される現代の働き方に疑問を投げかける．前作「小さなチーム、大きな仕事」と同様に，切れ味の良い語り口と豊富な挿絵で通説をぶったぎるさまは健在だ．37signalsは創業当時から国をまたいだリモートワークを実践して成長してきたという実績があり，自社の経験に裏打ちされた方法論は非常に説得力のあるものとなっている．</p>

<p>著者らは，リモートワークに踏み切れない会社と毎日オフィスに束縛されている社員を説き伏せる．そんな非効率なことはやめよう，と．今の技術ではリモートでも十二分に働らく環境は実現できるし，実際にリモートワークにすると会社に掛かるコストが減ることだって数字に表れている．オフィスで同じ空間をともにしたり会議で向き合って意見を出し合うこともいいけど，リモートだってそれは可能だ．また，社員が働かなくなるかが不安になるのは社員を管理しようとする行為のせいであり，むしろリモートでは働き過ぎてしまうのが問題であり，管理すべきは別にあるという．</p>

<p>ただし，オフィスを完全になくせと言っているわけではない．実際37signalsもオフィスを持っているし，年に数回は社員全員が集まってミーティングもしている．何度か顔を突き合わせて喋ることにより，インターネット上でのコミュニケーションがより円滑になるそうだ．つまり，リモートを補完するためのオフィスであり，オフィスを補完するためのリモートとして，うまいこと組み合わせることで効率化を目指しているということだ．リモートワークの導入だって一筋縄ではいかないのを承知で，最初は一部署単位で初めてみるとか，週に2日だけリモートワークにするとか，さまざまな案も本書の中で提案している．</p>

<p>リモートワークの最終目標は，社員が一番活躍できる環境を実現することにある．Googleやベンチャー企業が無理をしてでも社内をデコレーションしたり食事を無料にしたりして環境を整えるのは，まさに働く環境のためであり，一方でオフィスという囲いに窮屈感を感じていることのあらわれでもある．趣味や家庭などの自分の好きな場所にいられることの大切さは，何事にも代え難い．それを実現する方法としてのリモートワークという働き方である．37signalsの社員の中には，旅行しながら仕事をしているメンバーもいるそうだ．短い休暇をやりくりして旅行を計画する必要はなく，好きなように移動して気に入った場所に滞在しながら働くことができる．そういった自分に合ったワークスタイルを選べる自由さが，これからの働き方なのかもしれない．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「クリエイティブの授業 STEAL LIKE AN ARTIST」読了]]></title>
    <link href="http://yagays.github.io/blog/2014/02/12/review-steal-like-an-artist/"/>
    <updated>2014-02-12T00:00:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/02/12/review-steal-like-an-artist</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4788908050" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>空いた時間にたまたま本屋で見つけて，空いた時間でざっと読んだのだけれども，まあ元は取れたかなぁというくらいには面白かった．内容としては，ライフハックとかクリエイティブとかに代表されるようなウェブに転がってそうなトピックばかりだし，それこそ本書まるまるウェブサイトに上がってても違和感無いような分量でもある．でも本書はある意味で一貫していて，それこそウェブにはない編集の力のようなものを感じる．本書の主張は端的に言えば「STEAL LIKE AN ARTIST」，クリエイティビティは先人の優れた作品を盗むことから生まれるということだ．そこから派生して，情報を選別して自分のモノにすること，アイデアは抱え込まないで他人と共有することなどなど，まあ言ってしまえば，話自体はハッカー文化とかエンジニア文化とかなり親和性が高い．そういうのが本書に影響しているのか，単に最近のトレンドなのか分からないけど，まあひとつの生き方として筋が通っているし，自分もそうありたいと思うことが多い．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「人に強くなる極意」読了]]></title>
    <link href="http://yagays.github.io/blog/2014/02/11/review-satou-masaru-wisdom/"/>
    <updated>2014-02-11T00:11:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/02/11/review-satou-masaru-wisdom</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4413044096" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>タイトル「人に強くなる極意」とはまた編集者が付けたような新書向けのキャッチーな題名だが，中身もなかなか幅広く社会での立ち回り方などのコミュニケーションに関する全般的な内容となっている．その中で著者は，</p>

<ul>
<li>怒らない</li>
<li>びびらない</li>
<li>飾らない</li>
<li>侮らない</li>
<li>断らない</li>
<li>お金に振り回されない</li>
<li>あきらめない</li>
<li>先送りしない</li>
</ul>


<p>という8つに集約し，これがそのまま目次となる形で，その指針を述べている．それぞれには，自分の外交官時代の教訓であったり逮捕起訴後の拘留期間での出来事を絡めつつ，それこそ「人に強く」あるにはどうすべきかということが語られる．例えば，冒頭の怒らないという章では，人が怒るというのはどういう状態かというところから始まり，怒ることの意味を考える事で余計な不安や困惑から解放される方法，立場が上の人間が怒ることによる効果が示される．怒っている人がただ体育会系っぽくてただ怒りっぽいからということ以上の何かが怒るという行為自体には含まれていて，指導であったり鶴の一声として効き目があるのだということを実際に感じることができる．こういったことを理解すれば，人に怒られたときでも，人を怒るときでも「人に強く」なれるということなのかもしれない．</p>

<p>さて，このような実体験と教訓が幾つも出てくるわけだが，本書のユニークだと思う点がひとつあり，こういう系のよくある自己啓発本ならこれは書かないだろうと思うことがある．それは人と組織との関係だ．しかも，組織が人に対して行使できる圧力であったり影響力についてである．ここで言う組織とは，自分が所属している会社や，国家そのものである．もちろん自分自身が所属しているものだ．普段ならそれほど意識しないような，または自分の味方だと考えているような存在ではあるが，実は総体の意志として個人に対して牙を向くということがある．ひとことで言えば，<strong>融通が効かなくなる瞬間</strong>だ．味方だったものが敵になる，通用していたものが通用しなくなる，やってることは同じなのに組織の状況が変わった途端に手のひら返しをされてしまうことがある．そういった潜在的な危険を孕んでいる関係性に対して，個人がどのように認識し接していけばいいのかということがポイントとなる．この問題について圧倒的なリアルさでもって人に指導できるのは，実際にそのような目に会った著者自身だからだろう．関係性を断ち切ることはできないが，あらかじめ予防線を張っておくことはできる．そのために考えておくこともまた，「人に強く」なるための一つの方法といえる．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「細胞の物理生物学」読書ノート：第3章]]></title>
    <link href="http://yagays.github.io/blog/2014/01/17/pboc-03/"/>
    <updated>2014-01-17T20:42:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/01/17/pboc-03</id>
    <content type="html"><![CDATA[<ul>
<li>読書ノートまとめ：<a href="http://yagays.github.io/blog/2013/11/30/archive-physical-biology-of-the-cell/">http://yagays.github.io/blog/2013/11/30/archive-physical-biology-of-the-cell/</a></li>
</ul>


<h4>この章のまとめ</h4>

<p>3章では，生物を取り巻く「時間」を扱う．細胞内の化学反応などのナノセカンドスケールから，生物の進化のスケールまで，様々な時間というものが考えられる．前半では一般的な生物学的時間スケールについての数の感覚をつかむために，様々なオーダーの生物現象の時間について扱いつつ，後半ではそれらを進行時間・相対的時間・操作される時間の3つの時間に大別して，その特徴や機構について見ていく．</p>

<p>この章のポイントとしては，</p>

<ul>
<li>生物を取り巻く時間の数の感覚を理解することに</li>
<li>生物が時間をどう「操作」しているのか</li>
</ul>


<p>だろう．一つ目は前章と同様にオーダーレベルで生物現象の時間を把握することだが，それと同時に「なぜそれくらい時間がかかるのか」といった時間を規定するより低次な現象についても考慮していく必要がある．原子の大きさに比べて生物のサイズがなぜこれほどまでに大きいのかという前章の疑問と同様に，なぜ生物は今の時間スケールで生きているのかということが，各時間スケールを俯瞰することにより理解できる．二つ目は抽象的な言い方をしているが，化学反応や物理現象は時間という一方向にしか進まないものを，いかに生物が都合の良いように調節しているかということである．そこには，時計のような周期性の仕組みであったり，タイミングを同期するようなチェック機構，反応時間自体の調節などがある．</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4320057163" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=0815344503" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<h3>3.1 時間スケールの階層性</h3>

<ul>
<li>様々な生物学的時間の階層（おおよそ対数スケール）

<ul>
<li>ショウジョウバエの発生</li>
<li>ショウジョウバエの胚の初期発生段階</li>
<li>細菌の細胞分裂</li>
<li>細胞の運動</li>
<li>タンパク質合成</li>
<li>転写</li>
<li>イオンチャネルの開閉</li>
<li>酵素による触媒反応</li>
</ul>
</li>
<li>生物学的時間の測定

<ul>
<li>直接的観測

<ul>
<li>実際に裸眼や光学顕微鏡で観測した対象の変化を見る</li>
</ul>
</li>
<li>固定した時間での観測

<ul>
<li>ある時間間隔で測定し，集団の性質の経時変化を見る</li>
<li>計測によって対象が変化してしまう場合に有効

<ul>
<li>細胞が壊れてしまうとか死んでしまうとか</li>
</ul>
</li>
</ul>
</li>
<li>パルス追跡

<ul>
<li>放射性炭素によるラベリング</li>
</ul>
</li>
<li>生成物の蓄積の観測

<ul>
<li>生成物の濃度や蛍光強度を計測する</li>
</ul>
</li>
</ul>
</li>
<li>進化のスケール

<ul>
<li>共通祖先の存在（LUCA:last universal common ancestor）</li>
<li>進化の過程を直接測定することは難しい

<ul>
<li>化石の分析</li>
<li>現存する種の比較

<ul>
<li>形態学的な特徴</li>
<li>DNA配列の類似性</li>
</ul>
</li>
</ul>
</li>
<li>こういった測定には標準的な時間を計るストップウォッチのようなものが必要</li>
</ul>
</li>
<li>大腸菌の時間

<ul>
<li>最少培地での増殖速度は3,000秒（50分）</li>
</ul>
</li>
</ul>


<h3>3.2 進行時間</h3>

<p>多くのステップからなる生物現象の時間や，時計や振動の機構について見ていく．</p>

<ul>
<li>セントラルドグマ

<ul>
<li>それぞれのステップのに関わる高分子の速度が関わってくる

<ul>
<li>DNA複製：レプリソーム（約1,000 bp/s）</li>
<li>転写：RNAポリメラーゼ（約40 nucleotide/s）</li>
<li>翻訳：リボソーム（約15 aa/s）</li>
</ul>
</li>
</ul>
</li>
<li>時計と振動

<ul>
<li>時計のような振動する機構は，その一部分の時間を使って振動周期を決めるようコントロールされている</li>
<li>基本的に活性化と抑制の組み合わせ</li>
<li>e.g. 初期胚の細胞周期

<ul>
<li><ol>
<li>サイクリンのタンパク質合成</li>
</ol>
</li>
<li><ol>
<li>閾値を超えるサイクリンの蓄積によるサイクリン依存キナーゼの活性</li>
</ol>
</li>
<li><ol>
<li>キナーゼの標的タンパク質によるサイクリンタンパク質の分解分解</li>
</ol>
</li>
</ul>
</li>
<li>e.g. シアノバクテリアの概日リズム</li>
</ul>
</li>
</ul>


<h3>3.3 相対的時間</h3>

<p>関係した過程の順番を保証するような機構について見ていく</p>

<h4>真核生物の細胞周期や複雑な機構の生成</h4>

<p>複雑な制御やチェック機構を実現するために，遺伝子ネットワークによって遺伝子発現の順序がプログラムされている．</p>

<ul>
<li>複雑な細胞周期とチェックポイント

<ul>
<li>G_1 (ギャップ1)

<ul>
<li>細胞サイズや周囲の環境のチェック</li>
<li>DNA損傷のチェック</li>
</ul>
</li>
<li>S (核内DNAの複製)

<ul>
<li>なし</li>
</ul>
</li>
<li>G_2 (ギャップ2)

<ul>
<li>DNAの複製のチェック</li>
</ul>
</li>
<li>M (核分裂，細胞分裂)

<ul>
<li>染色体と紡錘体の結合のチェック</li>
</ul>
</li>
</ul>
</li>
<li>タンパク質がプロモータ領域に結合することによる転写制御

<ul>
<li>抑制：転写を物理的に妨害（ネガティブな制御）</li>
<li>活性化：RNAポリメラーゼを誘導（ポジティブな制御）</li>
</ul>
</li>
<li>実験による相対的時間の計測

<ul>
<li>e.g. カウロバクターの細胞分裂

<ul>
<li>細胞周期を同期させ，一定時間おきにDNAマイクロアレイでmRNAの発現量を計測する</li>
<li>ゲノムの20%程度が細胞周期に従うmRNAの時間変化を示した→細胞周期に関わっている</li>
</ul>
</li>
<li>e.g. 大腸菌のべん毛の形成

<ul>
<li>べん毛を構成する高分子に対応する遺伝子の発現強度をGFPを用いて計測する</li>
<li>関連する遺伝子産物が段階的に生成されていく様子が観測される</li>
</ul>
</li>
</ul>
</li>
</ul>


<h4>ウィルスの生活環</h4>

<p>バクテリオファージの場合，ウィスルの付着から溶菌まで30分程度で完了する．</p>

<ul>
<li>ウィルスの自己複製の過程

<ul>
<li>付着による感染・DNA注入</li>
<li>転写・翻訳</li>
<li>集合・詰め込み</li>
<li>溶菌</li>
</ul>
</li>
</ul>


<h4>発生過程</h4>

<p>多細胞生物の発生過程において，受精卵だった1つの核の分裂や細胞の空間的な移動が正確に調整され，胚発生に関する遺伝子がカスケード的に働くことによりパターンの形成が行われる．</p>

<ul>
<li>ギャップ遺伝子

<ul>
<li>胚を前部，中部，後部の3つの領域に分割する</li>
</ul>
</li>
<li>ペアルール遺伝子

<ul>
<li>7本の縞模様を作る</li>
</ul>
</li>
<li>体節極性遺伝子

<ul>
<li>14本の縞模様を作る</li>
</ul>
</li>
</ul>


<h3>3.4 操作される時間</h3>

<p>細胞内部では自然に起こる物理的な速度を超えて，生物が能動的に化学反応や物質輸送の速度を上昇させる．こういった速度を操作する機構について見ていく．</p>

<ul>
<li>酵素反応

<ul>
<li>通常の化学反応では非常に長い時間がかかる</li>
<li>酵素を触媒として使うことにより反応の時間をオーダーレベルで加速させる</li>
<li>e.g. トリースリン酸異性化酵素は反応速度を10<sup>9</sup> 倍にする</li>
</ul>
</li>
<li>細胞内の物質輸送

<ul>
<li>ブラウン運動による移動はランダムであり，拡散する時間は長さのスケールに依存する

<ul>
<li><script type="math/tex">t_{\mathrm{diffusion}}=x ^ 2/D</script>（<script type="math/tex">D</script>は拡散係数，<script type="math/tex">x</script>は距離）</li>
<li>濃度にも関連する</li>
</ul>
</li>
<li>分子モーターにより細胞内輸送を行う

<ul>
<li>アクチンフィラメントにおけるキネシンとダイニン</li>
</ul>
</li>
<li>膜タンパクのチャネルとポンプ

<ul>
<li>イオン輸送・イオンの濃度勾配を保つ</li>
</ul>
</li>
</ul>
</li>
<li>DNAの複製速度

<ul>
<li>最少培地では大腸菌の分裂は3,000 s程度で，染色体の複製フォークの最高スピード程度で実現できる．

<ul>
<li>しかし実際には，環境が良ければ1,200 s程度で分裂できる</li>
</ul>
</li>
<li>染色体の複製は並列で行われる

<ul>
<li>大腸菌よりもゲノムサイズが大きいアフリカツメガエルの初期胚でも30分程度で分裂することができる</li>
<li>真核生物は幾つかの染色体に分割され，複数の異なる開始点から同時に複製が始まる</li>
</ul>
</li>
</ul>
</li>
<li>卵と胞子

<ul>
<li>細胞の成長と分裂を分離することができる</li>
<li>胞子の休眠や冬眠</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「数学ガールの誕生 理想の数学対話を求めて」読了]]></title>
    <link href="http://yagays.github.io/blog/2014/01/16/review-birth-of-math-girl/"/>
    <updated>2014-01-16T09:07:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/01/16/review-birth-of-math-girl</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4797373253" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>電車の中で女の子が「<a href="http://www.amazon.co.jp/gp/product/4320026683/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4320026683&linkCode=as2&tag=yagays-22">コンピュータの数学</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=yagays-22&l=as2&o=9&a=4320026683" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />」を読んでいるという一つの奇妙な物語のことを，当時リアルタイムで読んでいた私もよく覚えている．Webサイトに掲載されている数学の面白い文章があるというだけで，知的好奇心を満たす手軽な読み物として楽しんでいた．それが将来「数学ガール」シリーズとして，確固たる地位を確立するとは思わなかったが&#8230;．</p>

<p>本書は，「数学ガール」シリーズの著者である結城浩氏が行った2つの講演を元にしている．一つは公立はこだて未来大学での教員と学生を対象にした講演，もう一つは編集者などを対象にした勉強会で，そのどちらも数学ガールというヒット作が誕生した経緯や作品への取り組みがテーマである．例えば，そもそも著者が自分のWebサイト上で個人的に書き始めた短編がきっかけであること，元々シリーズになる予定は無くタイトルに連番を振るのをためらったこと，ゲーデルの不完全性定理を書くことを反対されたことなどなど，数学ガールの歴史を紐解きつつ，その裏舞台を紹介してくれる．それと同時に，なぜこのようなヒット作となったのか，数学という難しいとされる題材を高校生の物語に乗せて見事に描き切ったのかといった秘訣について，著者が自己分析をしている興味深い内容となっている．そういった一連のシリーズの歴史を通して，出版であったり教育に対して結城浩氏がどう捉えているのかを垣間見ることができる．</p>

<p>詳しい内容は本書を読んでいただくとして，恐らく根底に流れるスタンスは一貫して「読者のことを考える」ということだろう．では，読者とは誰か，どういった人を対象にするのか，その人が作品を向き合ったときに何を考えるのか，何を知りたいのか，どう理解していくのか，そういったことを突き詰めていった結果がこの「数学ガール」シリーズなのだという．だから，そもそも最初の読者である自分が理解していないことは書けないし，一方で数学者とは異なる視点から一般の人に向けた数学の体系を描くこともできる．そういった執筆の背景を理解すると，「数学ガール」シリーズを読み進めていくときの心地よさであったり，理解へと繋がる一瞬の感覚の理由というものが理解できる気がする．</p>

<p>著者曰く「物理ガール」や「情報ガール」は，自然科学や工学に根ざしているという理由でちょっと難しいそうだ．二匹目のドジョウは難しいかもしれないが，人に教えるという行為について本書から学べることはたくさんあるだろう．また，数学ガール自体のファンにとっても，数学ガールの漫画化であったり海外展開の話，そして最初に書いた「コンピュータの数学」にまつわる短い読み切りなどなど，十分に楽しめる一冊となっている．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「人間はいろいろな問題についてどう考えていけば良いのか」読了]]></title>
    <link href="http://yagays.github.io/blog/2014/01/12/review-mori-thinking/"/>
    <updated>2014-01-12T15:53:00+09:00</updated>
    <id>http://yagays.github.io/blog/2014/01/12/review-mori-thinking</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4106105101" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>森博嗣の思考術とでも言うべきか．あとがきには仕事術に関する本を書いてくれと頼まれたとあるが，元研究者の著者としてはその二つは同義だろう．本書は「抽象的思考」を軸に，著者が世の中のあらゆる問題に対してどう考えていくのかといったことが丁寧に解説される．とは言うものの，人の脳みその中で行われる捉えどころの無いものを，直接文字として起こすことはできない．本書においても，方法論として述べられるところはあるものの，基本的には森博嗣本人が「どのような考え方であるのか」ということが中心となる．しかしながら，それはアプローチの方法であり，問題の定義の仕方であり，問題に対して自分がどう接していくのかということに繋がる．何も突拍子もない思考の跳躍をしているわけではなく，問題を一歩引いて眺めたり，多面的に捉えたりと，そのアプローチには「枠」があり，それが抽象化である．</p>

<p>さて，本書で個人的に一番面白かったのが，著者が思考というものを「庭」に喩えている最後の章だ．抽象的思考というものを抽象的に捉えたらということを突き詰めた結果，著者は趣味のガーデニングに行き着いたようだ．ガーデニングは思いの外難しいらしい．思い描く理想の庭を人工的に作っても，植物はいずれ朽ちてしまう．どれだけ手を加えても，時間の流れには逆らえない．しかし，その摂理に虚無的になるのではなく，継続して何かし続けることで，その行為がまた新たな結果を生む．そういった論理では測れない「自然」的な要素が，著者の考える思考の本質なのだという．自分の思考を育てるという意味で，地道な努力によって自分の「庭」を作っていくほか無い．それは，人に強制されたり刷り込まれるものではなく，自発的なもの，結論が出るまでに時間を要するもの，人の一生をかけて理想に近づけていくというものであるというのが著者の思考術である．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MLAC2013 数式を使わずイメージで理解するEMアルゴリズム]]></title>
    <link href="http://yagays.github.io/blog/2013/12/15/mlac-2013-em-algorithm/"/>
    <updated>2013-12-15T19:16:00+09:00</updated>
    <id>http://yagays.github.io/blog/2013/12/15/mlac-2013-em-algorithm</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p><a href="http://qiita.com/advent-calendar/2013/machinelearning">Machine Learning Advent Calendar 2013</a>の15日目を担当する<a href="https://twitter.com/yag_ays">@yag_ays</a>です．専門はバイオインフォマティクスという計算機を使って生物学をする分野で，生モノではなく遺伝子の文字列相手に格闘している大学院生です．今回は初心者の人を対象に，なるべく数式を使わずにEMアルゴリズムについて解説してみたいと思います．</p>

<p>EMアルゴリズムは，SVMやニューラルネットワークといった華々しい機械学習の手法の一つではなく，機械学習の中で使われる尤度最大化という一部分を担当するアルゴリズムです．そのため多くの人にとってEMアルゴリズムは，それ単体を使ってみたりだとか独自に改良をしたりするような対象ではないでしょう．でも，EMアルゴリズムなんて仰々しい名前が付けられているだけあって，いざ自分の仕事に組み込む場合には中身を理解していないと「なぜEMアルゴリズムを使ったの？」であったり「それを使うと何が嬉しいの？」といった質問が来たときに困るし，とりあえず概念だけでも一通り理解しておきたいと思う人もいると思います．そこで今回は，大雑把にEMアルゴリズムを理解することを目的に，細かい定義やら数式は抜きにしてイメージで覚えられるような解説を書いてみました．まあ結局PRMLの受け売りなのですが，紙の上で見るよりかは分かりやすくしたと思うので勘弁してください．</p>

<ul>
<li><strong>この記事の対象となる人</strong>

<ul>
<li>EMアルゴリズムについて聞いたことはあるけどよく分かっていない人</li>
<li>例えば「これEMアルゴリズム使ってるけど，局所解に落ちてるんじゃない」って言われたとして，？？？ってなる人</li>
</ul>
</li>
<li><strong>この記事の対象ではない人</strong>

<ul>
<li>「パターン認識と機械学習」(PRML)下巻9章を読み通した人</li>
<li>イメージと聞いて情報幾何の話だと思った人</li>
</ul>
</li>
</ul>


<h3>EMアルゴリズムとは</h3>

<p>EMアルゴリズムは，潜在変数が存在する時の尤度関数を最大化するアルゴリズムです．機械学習の文脈では，よく混合ガウス分布（GMM）などの潜在変数を用いたモデリングの際に用いられます．PRMLで言うところの下巻9章「混合モデルとEM」ですね．また，今回のMLAC 2013では<a href="https://github.com/masakazu-ishihata/advent2013">m_ishihataさんの記事</a>でも出てきますので，何に使うのかピンと来ない人はそちらも参照してもらえればと思います．</p>

<p>ここで覚えておいて欲しいのは，<strong>尤度関数を最大化する</strong>ということです．確率的な機械学習の手法を使っていると，ときどき尤度関数というものが出てきます．特にEMアルゴリズムのような潜在変数が存在する時には，尤度関数は数式には書くことができても，実際にそれがどういう形をしていてどの値で最大になるのかといったことは全く予想ができません．尤度関数に適当に数字を入れれば値が帰ってきますが，それをパラメータすべてについて計算することは現実的には不可能です．そういった条件でどうにか上手いこと計算して効率よく最大値を求めたいといったときに，EMアルゴリズムは使われます．</p>

<h3>イメージで理解するEMアルゴリズム</h3>

<p>前置きはこのくらいにして，では実際にEMアルゴリズムが何をしているのかをスライドで見てもらいましょう．なお，これはあくまでイメージですので，実際にはデータ数に依存する高次元の空間ですし，EMアルゴリズムの計算途中で対数尤度関数がこのように図示できるわけでもありません．その点は注意してください．なお，以下の解説はPRML下巻9章の図9.14 (P.169)を参考にしています．</p>

<iframe src="http://www.slideshare.net/slideshow/embed_code/29219489" width="476" height="400" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe>


<p>さて，PRMLの図を動かしてみたという感じですが，どうだったでしょうか？途中に少し記号を書いてしまいましたが，あまり気にしないでください．EMアルゴリズムの各ステップを更新していくことで，対数尤度の山を徐々に登っていく様子が何となくつかめたと思います．初期値<script type="math/tex">\theta</script>だったパラメータも，<script type="math/tex">\theta'</script>，<script type="math/tex">\theta''</script>と更新されて，尤度関数を最大化するパラメータが求められたことがわかります．</p>

<h3>EMアルゴリズムにおける下界</h3>

<p>とは言うものの，下界って何だとかどうやって計算するんだとか色々あやふやなところがあるので，その辺を少し補足しておきましょう．下界（Lower Bound）とは，その名の通り対数尤度がここよりも小さくならないということを表しています．EMアルゴリズムでは，この下界というものを使ってだんだん底上げしていくことで対数尤度を増加させていくという感じです．Eステップでパラメータを固定したときの下界というものを求めて，Mステップで潜在変数の分布を固定したときの下界と対数尤度の値が同じになるように下界を押し上げます．あとはこれの繰り返しになるのですが，必ず下界よりも対数尤度は上にあるので，決して対数尤度が小さくはなりません．こうやってEMアルゴリズムは対数尤度を最大化していきます．</p>

<p>下界の求め方も今回は数式を使わずに説明するということで，対数尤度式からアレコレ計算すると出てくる程度に捉えておいてもらえればと思います．例えば混合ガウス分布にEMアルゴリズムを適用する場合だと，Jensenの不等式を使って数式の変形することにより下界は求めることができます．下界と対数尤度の差が実はKLダイバージェンスになっているという話もあるのですが，潜在変数の分布について話してないのでここでは割愛します．詳しくはPRMLの数式を追ってみてください．</p>

<h3>イメージで分かるEMアルゴリズムの性質</h3>

<p>ここからは，EMアルゴリズムで注意しなければいけない点を解説します．先ほど紹介したイメージを持っていれば，数式を使わずともEMアルゴリズムの持つ問題点を指摘できるはずです．</p>

<h4>各ステップを繰り返す必要がある</h4>

<p>当然ですが，EMアルゴリズムはEステップとMステップを繰り返す必要があります．EMアルゴリズムが適用できる問題ならば各ステップの計算自体は簡単ですが，パラメータや対数尤度値がある程度収束するまでは，計算し続けなければいけません．</p>

<h4>初期値に依存し，局所最適解に落ちることもある</h4>

<p>先ほど示したイメージでは，下界を引き上げていく際に二次関数のようなものの頂点と対数尤度関数を行ったり来たりしていました．ということは，きちんと勾配にしたがって最大化してくれるという保証がある一方で，それらがある程度一致したところでパラメータは更新しようがないということになります．そのため，EMアルゴリズムは初期値によっては局所最適解に落ちる可能性があります．</p>

<h3>まとめ</h3>

<p>いかがだったでしょうか？この記事で少しでもEMアルゴリズムのイメージがつかめてもらえれば幸いです．そうすれば，PRMLなどの数式の出てくる参考書を読んでも，EMアルゴリズムというものが一体何がしたいのかといったことが理解しやすくなるんじゃないかと思います．</p>

<p>少し個人的な話になりますが，私自身はこうやって模式図やイメージを実際に頭のなかで組み立てると，とても理解が捗ります．私が機械学習の勉強をするときにこういうことを意識しはじめたのは，PRML復々習レーンで第3章の線形回帰モデルの冒頭を発表したときでした．そのときには3.1.2の「最小二乗法の幾何学」という項が一体何を言っているのか全く分からず，発表の際に堂々と「分かりませんでした！」と言ったことをよく覚えています．その時に発表の際に参加者の皆さんに教えていただいたおかげで，最小二乗法の理解が一気に深まったように思えました．よくわからない数式の最小化という漠然とした状態から，数式の各項が何を表していて，何を最小化するのかということまで具体的に理解できたのはこのときでした．こういった感覚はPRMLを読むうちに何度もあり，自分の中できちんと理解に落としこむことの重要性を実感しています．今回の記事では，その一つとしてEMアルゴリズムをイメージでつかんでもらえるような紹介の仕方をしてみました．勿論のことながら，自分で自由自在に使いこなすくらい理解するにはきちんと数式を追わなければいけないですし，図式としてイメージできないことも多々あります．しかしながら，どんな難しいアルゴリズムや手法でも，やってることは絵にかけるほど単純なのだというリラックスした感覚で臨めば，意外と理解につながるものだと思います．機械学習の勉強で壁にぶち当たったときは，ぜひ図を書いたり具体的な絵にして考えなおしてみると上手くいくかもしれません．</p>

<h4>参考</h4>

<ul>
<li><a href="http://qiita.com/advent-calendar/2013/machinelearning">Machine Learning Advent Calendar 2013 - Qiita [キータ]</a></li>
</ul>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4621061224" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4621061240" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「山賊ダイアリー」1〜4巻 読了]]></title>
    <link href="http://yagays.github.io/blog/2013/12/12/review-sanzoku-diary/"/>
    <updated>2013-12-12T23:19:00+09:00</updated>
    <id>http://yagays.github.io/blog/2013/12/12/review-sanzoku-diary</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4063523918" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4063524264" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=406352454X" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4063524884" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<p>本書は，地元岡山県北部で猟師になった著者が，猟銃や罠などを使ってイノシシやシカ，鳥などの動物を狩る「リアル猟師奮闘記」だ．実際に山に入って狩猟をするのは勿論のこと，狩猟仲間やベテランとのやり取りや日々の生活なども描かれる．</p>

<p>最近めっきり漫画を読まなくなってしまったのだけれども，ネットで評判になってる本書を見てたまたま買って読んでみたら，これがなかなか良かった．絵やコマの割り方が細かくないため素直に物語や知識を追えて，なおかつ実録モノというところが，個人的に気に入った要因だと思う．変に説教臭く無いのも好感が持てる．それでいて本能的な肉への欲求であったり，家畜化されていない動物を仕留めそして食べるという行為の心理的な変化を感じ，料理に化けるときの喜びのようなものがダイレクトに伝わってくる．要所要所に挟まってくる日本の狩猟のシステムであったり，狩りの方法や先人の智慧なども非常に興味深い．知的好奇心も満たされつつ一般人の日常では味わうことのない世界を覗くことができて，個人的には満足度の高い作品だった．狩猟時期が限られていることもあって新しいネタがどんどん出てくるわけでもないようだが，次のシーズンの狩猟の成果に期待したい．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MacPortsでPyMOLをインストールする]]></title>
    <link href="http://yagays.github.io/blog/2013/12/11/pymol-macports/"/>
    <updated>2013-12-11T13:24:00+09:00</updated>
    <id>http://yagays.github.io/blog/2013/12/11/pymol-macports</id>
    <content type="html"><![CDATA[<p>分子ビューアのPyMOLをインストールしたので，そのときのメモ．今回は無料版をコンパイルするということでMacPortsからインストールしたのだが，FinkやHomebrewからもインストールすることができるようだ．</p>

<ul>
<li><a href="http://www.pymolwiki.org/index.php/MAC_Install">MAC Install - PyMOLWiki</a></li>
</ul>


<h4>MacPortsによるインストール</h4>

<p>通常のMacPortsのインストールの手順と同じで，以下のようにすればインストールすることができる．</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo port install pymol</span></code></pre></td></tr></table></div></figure>


<h4>tclのバリアントによるエラー</h4>

<p>のだけれども，自分の環境でMacPortsからそのままインストールを行うと以下のようなエラーが出た．</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo port install pymol
</span><span class='line'>---&gt;  Computing dependencies for pymol
</span><span class='line'>---&gt;  Fetching archive for pymol
</span><span class='line'>Error: org.macports.archivefetch for port pymol returned: tcl must be installed without +corefoundation.
</span><span class='line'>Please see the log file for port pymol for details:
</span><span class='line'>    /opt/local/var/macports/logs/_opt_local_var_macports_sources_rsync.macports.org_release_tarballs_ports_science_pymol/pymol/main.log
</span><span class='line'>To report a bug, follow the instructions in the guide:
</span><span class='line'>    http://guide.macports.org/#project.tickets
</span><span class='line'>Error: Processing of port pymol failed</span></code></pre></td></tr></table></div></figure>


<p>エラーログを見ると，どうやらtclのインストールの際にcorefoundationというバリアントが付いているせいでエラーが起きているようだ．MacPortsで入れたtclを見てみると，以下のようにcorefounderとthreadsのバリアントが付いていることが確認できる．</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ port installed tcl
</span><span class='line'>The following ports are currently installed:
</span><span class='line'>  tcl @8.6.1_0+corefoundation+threads (active)</span></code></pre></td></tr></table></div></figure>


<p>この問題は既に報告されているようだが，tclを再インストールせずにエラーを回避するのは今のところできない模様．ここにも書かれている通り，tclはRなどの他のソフトウェアでも使用するものなのでなるべく弄りたくは無いのだが，今回はやむを得ない．</p>

<ul>
<li><a href="http://trac.macports.org/ticket/37062">#37062 (pymol @1.5 tcl must be installed without +corefoundation) – MacPorts</a></li>
</ul>


<p>ということで，以下のようにtclを一度アンインストールして，バリアントを変えた状態でインストールしなおす．tclの依存関係にある他のプログラムも一度消さなければいけない．</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo port uninstall py27-pmw
</span><span class='line'>$ sudo port uninstall py27-tkinter
</span><span class='line'>$ sudo port uninstall tk
</span><span class='line'>$ sudo port uninstall tcl
</span><span class='line'>
</span><span class='line'>$ sudo port install tcl -corefoundation
</span><span class='line'>$ sudo port install tk -quartz
</span><span class='line'>$ sudo port install pymol</span></code></pre></td></tr></table></div></figure>


<p>アンインストールするpy27-pmw，py27-tkinter，tk，tclはそれぞれ依存関係で繋がっているので，この順番でアンインストールしないといけない．また，py27-pmwとpy27-tkinterはpymolを入れるときにdependenciesの関係で自動で入れてくれるので，アンインストールした後に明示的にインストールしなおさなくても良い．</p>

<p>これでPyMOLがインストールできるはず．</p>

<p><img src="http://dl.dropboxusercontent.com/u/142306/b/pymol.png" alt="" /></p>

<h3>余談</h3>

<p>PyMOLを動かすにはXQuartzが必要になるので，あらかじめインストールしておいたほうがいいだろう．</p>

<ul>
<li><a href="http://xquartz.macosforge.org/landing/">XQuartz</a></li>
</ul>


<h4>環境</h4>

<ul>
<li>Mac OS X 10.9 Mavericks</li>
<li>PyMOL Version 1.6.0.0</li>
</ul>


<h4>参考</h4>

<ul>
<li><a href="http://www.pymol.org/">PyMOL | www.pymol.org</a></li>
<li><a href="http://biokids.org/?PyMOL%A4%F2%BB%C8%A4%C3%A4%C6%A4%DF%A4%E8%A4%A6">PyMOLを使ってみよう - BioKids Wiki</a></li>
<li><a href="http://www.wkagawa.info/crystallography_on_mac/pymol/">PyMOL | Wataru Kagawa&#8217;s Weblog</a></li>
<li><a href="http://togotv.dbcls.jp/20090617.html">PyMOLを使ってタンパク質の構造を見る - 統合TV (togotv)(2009-06-17)</a></li>
<li><a href="http://togotv.dbcls.jp/20090707.html">PyMOLを使い倒す - 統合TV (togotv)(2009-07-07)</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「細胞の物理生物学」読書ノート：第2章その2]]></title>
    <link href="http://yagays.github.io/blog/2013/12/10/pboc-02-2/"/>
    <updated>2013-12-10T20:00:00+09:00</updated>
    <id>http://yagays.github.io/blog/2013/12/10/pboc-02-2</id>
    <content type="html"><![CDATA[<ul>
<li>読書ノートまとめ：<a href="http://yagays.github.io/blog/2013/11/30/archive-physical-biology-of-the-cell/">http://yagays.github.io/blog/2013/11/30/archive-physical-biology-of-the-cell/</a></li>
</ul>


<h4>この章のまとめ</h4>

<p>この2章では，<a href="http://yagays.github.io/blog/2013/12/06/pboc-02-1/">前回</a>のようにモデルとなる大腸菌における様々な数や性質を紹介した後に，生物を構成する構造を大きさのオーダーごとに階層に分けて，各階層ごとの特徴について述べている．単に生物の構造を列挙しているだけに見えるが，それぞれがどの大きさレベルでの話をしているのかを把握し，それらの関係性を理解することが重要となる．ある構造を形作る小さな構造の集合という視点で眺めれば，生物の持つ複雑さを単純化して理解することができる．</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4320057163" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=0815344503" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<h3>大腸菌の概要</h3>

<h4>モデル生物としての大腸菌</h4>

<p>大腸菌は以下の理由により実験的に扱いやすく，分割できる最小単位である単細胞の生物としての標準的な「ものさし」として利用が可能である．</p>

<ul>
<li>採取が容易</li>
<li>好気条件下で増える</li>
<li>実験室での培養が可能で，生育環境も変えやすい</li>
<li>変異体の作成が容易（遺伝子操作）</li>
</ul>


<h4>実際に大腸菌に含まれているタンパク質の測り方</h4>

<p>代表的な方法として，2次元ポリアクリルアミドゲル電気泳動により細胞内に入り混じったタンパク質を分離することができる．</p>

<ul>
<li>横方向：pH：電場の印加</li>
<li>縦方向：分子量：電荷を持った界面活性剤に固定させる</li>
</ul>


<h4>生物学的構造を調べる実験手法</h4>

<ul>
<li>計測方法

<ul>
<li>対象とする構造との相互作用を測る</li>
<li>対象とする構造に力を加える</li>
</ul>
</li>
</ul>


<p>具体的には，以下のような実験がある．</p>

<ul>
<li>光学顕微鏡

<ul>
<li>特定の構造上に分布した蛍光物質から出る光を計測する</li>
</ul>
</li>
<li>原子間力顕微鏡

<ul>
<li>表面を走査して構造の外形を計測する</li>
</ul>
</li>
<li>電子顕微鏡，低温電子トモグラフィ

<ul>
<li>試料に放射した電子線やX線が散乱する様子を計測することによって内部構造を再構成する</li>
</ul>
</li>
</ul>


<h4>大腸菌のスケール</h4>

<p>図表参考．これから先はズームインしていく段階とズームアウトしていく段階をそれぞれ追いつつ，それらが成り立つ上での構造を詳しく見ていく．</p>

<h3>様々な細胞とその構造</h3>

<p>まず細胞からスタートする．ひとえに細胞と言っても，その大きさや機能は様々である．先ほど扱った大腸菌以外にも，単細胞の真核生物であったり多細胞生物の機能ごとに分化した細胞などがある．</p>

<ul>
<li>原生生物</li>
<li>植物細胞</li>
<li>出芽酵母

<ul>
<li>単細胞の真核生物のモデル生物</li>
</ul>
</li>
<li>赤血球，線維芽細胞，ニューロン，網膜桿体細胞

<ul>
<li>高度に専門化した細胞</li>
</ul>
</li>
</ul>


<h3>スケールを下げて眺める</h3>

<h4>細胞小器官</h4>

<p>細胞小器官が集まって細胞を構成している．</p>

<ul>
<li>小胞体</li>
<li>ゴルジ体</li>
<li>ミトコンドリア</li>
<li>リソソーム</li>
</ul>


<p>これらに加えて，特定の機能に特化した細胞は，他の細胞にはない高度に専門化した細胞小器官を持っている場合がある．</p>

<h4>生体高分子集合体</h4>

<p>生体高分子集合体が集まって細胞小器官を構成している．</p>

<ul>
<li>タンパク質，核酸，糖，脂質などが集まった通常の複合体 

<ul>
<li>10nmスケールの生体高分子の集合として，重要な機能を持つ</li>
<li>e.g. ヌクレオソーム，核孔複合体，レプリソーム，リボソーム，プロテアソーム，ATP合成酵素</li>
</ul>
</li>
<li>特定の高分子のユニットが連なった，らせん複合体

<ul>
<li>同じ構造単位が繰り返され幾何的構造を取る</li>
<li>e.g. 微小管，細菌のべん毛，タバコモザイクウィルス，コラーゲン繊維，DNA</li>
</ul>
</li>
</ul>


<p>これらの高分子集合体が集まって，特徴的な細胞内構造を取ることもある．</p>

<ul>
<li>小胞体

<ul>
<li>小胞体膜とリボソーム</li>
</ul>
</li>
<li>飛翔筋肉

<ul>
<li>筋原線維（ミオシンフィラメントの集合）</li>
<li>ミトコンドリア</li>
</ul>
</li>
<li>上皮細胞

<ul>
<li>微繊毛</li>
</ul>
</li>
</ul>


<p>また，ウィルスは生体高分子集合体の中でも特殊な分類に入る．独立した複製という細胞としての基本機能は持たないものの，宿主に寄生して自己増殖ができるという特徴を持つ．</p>

<ul>
<li><p>キャプシドの多様性</p>

<ul>
<li>20面体のタンパク質の殻で，中にウィルスの遺伝物質が入っている</li>
</ul>
</li>
<li><p>HIV</p></li>
</ul>


<h4>生体高分子</h4>

<p>生体高分子が集まって生体高分子集合体を構成している．</p>

<ul>
<li>タンパク質

<ul>
<li>アミノ酸の配列</li>
<li>球と棒による表示，空間充填表示，リボン表示などの表現方法がある</li>
</ul>
</li>
</ul>


<h3>スケールを上げて眺める</h3>

<h4>多細胞性</h4>

<p>単体で生きることのできる細胞が集まることでコミュニケーションを行い協力する．</p>

<ul>
<li>ストロマトライトの原始的なコロニー</li>
<li>細菌のバイオフィルム</li>
<li>粘菌の移動体と子実体</li>
</ul>


<h4>多細胞生物</h4>

<p>多細胞生物は以下の3つの要素を獲得することにより，細胞の集合体としてより大きく多機能な生物個体を形成することができる．</p>

<ul>
<li>多細胞生物の細胞の大きさと複雑さの3つの要素

<ul>
<li>大きな細胞共同体を構造的に支える細胞外マトリックス

<ul>
<li>e.g. 結合組織や上皮シート</li>
</ul>
</li>
<li>同じゲノム情報を持ちつつも別の機能を演じることができるような専門化

<ul>
<li>e.g. 上皮細胞やニューロンなど</li>
</ul>
</li>
<li>細胞が互いにコミュニケーションを取るための精巧な機構

<ul>
<li>e.g. ニューロンにおけるシナプス</li>
</ul>
</li>
</ul>
</li>
</ul>


<h4>個々の多細胞生物</h4>

<p>生物個体を超えたさらに高次のレベルとして，ヒトと，ヒトの体に存在する微生物細胞群の関係も生態系として考えられる．</p>
]]></content>
  </entry>
  
</feed>
