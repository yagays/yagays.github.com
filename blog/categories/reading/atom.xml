<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Reading | Wolfeyes Bioinformatics beta]]></title>
  <link href="http://yagays.github.com/blog/categories/reading/atom.xml" rel="self"/>
  <link href="http://yagays.github.com/"/>
  <updated>2012-10-22T22:03:52+09:00</updated>
  <id>http://yagays.github.com/</id>
  <author>
    <name><![CDATA[yag_ays]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[「Rによるモンテカルロ法入門」読書ノート：2章 受理・棄却法]]></title>
    <link href="http://yagays.github.com/blog/2012/10/22/imcmr-2-2/"/>
    <updated>2012-10-22T21:38:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/10/22/imcmr-2-2</id>
    <content type="html"><![CDATA[<ul>
<li>読書ノート アーカイブ:<a href="http://yagays.github.com/blog/2012/10/20/archive-introducing-monte-carlo-methods-with-r/">http://yagays.github.com/blog/2012/10/20/archive-introducing-monte-carlo-methods-with-r/</a></li>
</ul>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4621065270" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<h3>内容：逆変換法や一般変換法で生成できない分布から乱数を生成する</h3>

<p>逆変換法や一般変換法では，一様分布から生成される乱数に何らかの関数を通すことで任意の乱数を生成してきた．しかし，このような直接的な方法で乱数を生成できない分布の場合には，間接的な方法によって乱数を生成する必要がある．そのような場合には，本来求めたい乱数の分布とは違った分布から乱数を生成し，それが受理できる値か棄却できる値かを選り分けることで，間接的に求めたい分布から生成された乱数を表現する．</p>

<ul>
<li>目標密度（target）: <img src=http://chart.apis.google.com/chart?cht=tx&chl=f+></li>
<li>手段密度・候補密度（candidate）: <img src=http://chart.apis.google.com/chart?cht=tx&chl=g+></li>
</ul>


<p>この受理・棄却法では1つの乱数の値<img src=http://chart.apis.google.com/chart?cht=tx&chl=X+>につき，2つの乱数<img src=http://chart.apis.google.com/chart?cht=tx&chl=Y+%5Csim+g+>と<img src=http://chart.apis.google.com/chart?cht=tx&chl=U+%5Csim+%5Cmathcal%7BU%7D_%7B%5B0%2C1%5D%7D+>を考える．前者は候補密度から乱数を生成したもの，後者は受理・棄却に用いる一様乱数．この2つの乱数を，以下の式にあてはめて受理するか棄却するかを判断する．</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=U+%5Cleq+%5Cfrac%7Bf%28Y%29%7D%7BM+%5Ctimes+g%28Y%29%7D+></p>

<p>ここで登場するMは提案分布と候補密度から見積もった定数で，候補密度の制約の中で登場する値．基本的にある値より大きければ何でも良いのだが，シミュレーションの効率に関わってくる．これが小さい値であればあるほど，シミュレーションで棄却される乱数の候補が少なくて済むので，結果として効率が良くなる．最適なMは以下の式で与えられる（<a href="http://www.stat.ufl.edu/~casella/ShortCourse/MCMC-UseR.pdf">UserR!資料pdf</a> p.51）</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=M+%3D+%5Csup_x+%5Cfrac%7Bf%28x%29%7D%7Bg%28x%29%7D+></p>

<br />


<h3>例 2.7, 例2.8 ベータ分布の乱数を生成する(2通り)</h3>

<p>黒の点が一様分布/ベータ分布から生成した乱数，赤の点がアルゴリズムで受理された乱数（今回求めたかった乱数），青の線が極限<img src=http://chart.apis.google.com/chart?cht=tx&chl=M+g%28x%29+>．</p>

<p>受理・棄却の条件</p>

<ul>
<li>例2.7: <img src=http://chart.apis.google.com/chart?cht=tx&chl=U+%26lt%3B+f%28Y%29+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=U+%5Csim+%5Cmathcal%7BU%7D_%7B%5B0%2CM%5D%7D+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=f+%3A+%5Cmathcal%7BBe%282.7%2C6.3%29%7D+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=g%3A+1+>

<ul>
<li>ここでgは何らかの関数ではなく「gは1に等しい」としているので，上式の中にgが含まれていない．この場合，gで生成される乱数は一様乱数．</li>
</ul>
</li>
<li>例2.8: <img src=http://chart.apis.google.com/chart?cht=tx&chl=Ug%28Y%29+%26lt%3B+f%28Y%29+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=U+%5Csim+%5Cmathcal%7BU%7D_%7B%5B0%2CM%5D%7D+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=f+%3A+%5Cmathcal%7BBe%282.7%2C6.3%29%7D+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=g%3A%5Cmathcal%7BBe%282%2C6%29%7D+></li>
</ul>


<p>例2.8における「提案分布」という言葉は，新しく設定した候補分布のこと．</p>

<p>```r</p>

<h1>例2.7</h1>

<p>Nsim &lt;- 2500
a &lt;- 2.7
b &lt;- 6.3
M &lt;- 2.67
u &lt;- runif(Nsim, max=M)
y &lt;- runif(Nsim)
x &lt;- y[u &lt; dbeta(y,a,b)]</p>

<p>y2 &lt;- rbeta(Nsim,2,6)
u2 &lt;- runif(Nsim, max=1.67) * dbeta(y2,2,6)
x2 &lt;- y2[u2 &lt; dbeta(y2,2.7,6.3)]</p>

<p>par(mfrow=c(1,2))
plot(y, u, xlim=c(0,1.0), ylim=c(0,2.8), cex=0.5, xlab="y", ylab="u.g(y)")
par(new=T)
plot(x, u[u &lt; dbeta(y,a,b)], col="red", xlim=c(0,1.0), ylim=c(0,2.8), cex=0.5, xlab="y", ylab="u.g(y)")
curve(dbeta(x,a,b), add=T, col="red", lwd=2)
abline(h=M, lwd=2, col="blue")</p>

<p>plot(y2, u2, xlim=c(0,1.0), ylim=c(0,5), cex=0.5, xlab="y", ylab="u.g(y)")
par(new=T)
plot(x2, u2[u2 &lt; dbeta(y2,2.7,6.3)], col="red", xlim=c(0,1.0), ylim=c(0,5), cex=0.5, xlab="y", ylab="u.g(y)")
curve(dbeta(x,2.7,6.3), add=T, col="red", lwd=2)
curve(dbeta(x,2,6)*1.67, add=T, col="blue", lwd=2)
```</p>

<p>![](http://dl.dropbox.com/u/142306/b/imcmr/chp2_6.png )</p>

<h4>上の図の解釈</h4>

<p>乱数の値が赤の分布の線より中に入れば受理となる．候補として生成される乱数は青の分布の線の中でランダムに生成されるので，赤と青の線の間の部分が棄却された乱数になる．この赤と青の線の間の部分が少なければ少ないほど，この受理・棄却法の効率も良くなる．じゃあ効率を良くするにはどうすればいいかというと，いじることのできるポイントは2つ</p>

<ul>
<li>提案分布gを良い感じにする（青の線の形を決める）</li>
<li>定数Mを出来るだけ小さくする（青の線の高さを決める，fとgの間の幅を決める）</li>
</ul>


<p>この受理・棄却法の前提として<strong>目標分布（赤の線）から乱数は生成できない</strong>のだから，100％受理されるようなシミュレーションは理論上不可能．だから，乱数が生成できるような候補分布を使って，定数Mを定めて，間接的に乱数を発生させようということ．</p>

<br />


<h3>練習問題 2.7 目標分布fと候補密度gがともにベータ分布だった場合に，どのような制約があるのか</h3>

<h4><img src=http://chart.apis.google.com/chart?cht=tx&chl=a+%5Cleq+%5Calpha%2C+b+%5Cleq+%5Cbeta+>が必要なことの証明</h4>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=f%28x%29++%3D+%5Cfrac%7B%5CGamma%28%5Calpha%2B%5Cbeta%29%7D%7B%5CGamma%28%5Calpha%29%5CGamma%28%5Cbeta%29%7D+x%3Csup%3E%7B%5Calpha-1%7D%3C%2Fsup%3E+%281-x%29%3Csup%3E%7B%5Cbeta-1%7D%3C%2Fsup%3E+%5Csim+%5Cmathcal%7BBe%7D%28%5Calpha%2C%5Cbeta%29+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=g%28x%29++%3D+%5Cfrac%7B%5CGamma%28a%2Bb%29%7D%7B%5CGamma%28a%29%5CGamma%28b%29%7D+x%3Csup%3E%7Ba-1%7D%3C%2Fsup%3E+%281-x%29%3Csup%3E%7Bb-1%7D%3C%2Fsup%3E+%5Csim+%5Cmathcal%7BBe%7D%28a%2Cb%29+>
より</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cfrac%7Bf%28x%29%7D%7Bg%28x%29%7D++%3D+%5Cfrac%7B%5CGamma%28%5Calpha%2B%3Csup%3Ebeta%29%5CGamma%28a%29%5CGamma%28b%29%7D%7B%5CGamma%28a%2Bb%29%5CGamma%28%5Calpha%29%5CGamma%28%5Cbeta%29%7D%3C%2Fsup%3E+x%3Csup%3E%7B%5Calpha-a%7D%3C%2Fsup%3E+%281-x%29%3Csup%3E%7B%5Cbeta-b%7D%3C%2Fsup%3E+%5Csim+%5Cmathcal%7BBe%7D%28ba%2Cb%29+></p>

<p>となり，比<img src=http://chart.apis.google.com/chart?cht=tx&chl=f%2Fg+>が有界になる（どっかのxの値が<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cinf+>になったりしない）には，xや(1-x)のベキ数の部分が0以上でである必要がある．よって<img src=http://chart.apis.google.com/chart?cht=tx&chl=a+%5Cleq+%5Calpha%2C+b+%5Cleq+%5Cbeta+>が必要．</p>

<p>上の細かい証明は省略するが，要するにベータ分布<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cmathcal%7B%5Cbeta%7D%28a%2Cb%29+>において，aとbが1未満の時には0と1の両端で値が跳ね上がる．以下の図は，「<a href="http://www.amazon.co.jp/gp/product/4621061224/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4621061224&linkCode=as2&tag=yagays-22">パターン認識と機械学習 上</a><img src="http://www.assoc-amazon.jp/e/ir?t=yagays-22&l=as2&o=9&a=4621061224" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />」のP.70を参考にベータ分布を作図したもの．これを見ると，aとbが1のときにちょうど一様分布のような形をとり，それより小さいと下に凸，それより大きいと上に凸のような分布の形になることがわかる．なので，ベータ分布が有界であるにはxや(1-x)のベキ数の部分がポイントになってくる．</p>

<p>```r</p>

<h1>練習問題 2.7 ベータ関数の分布を図示してみる</h1>

<p>par(mfrow=c(2,2))
curve(dbeta(x,0.1,0.1),col="red",lwd=2,ylim=c(0,3),main="Be(0.1,0.1)")
curve(dbeta(x,1,1),col="red",lwd=2,ylim=c(0,3),main="Be(1,1)")
curve(dbeta(x,2,3),col="red",lwd=2,ylim=c(0,3),main="Be(2,3)")
curve(dbeta(x,8,4),col="red",lwd=2,ylim=c(0,3),main="Be(8,4)")
```</p>

<p>![](http://dl.dropbox.com/u/142306/b/imcmr/chp2_beta.png )</p>

<h4><img src=http://chart.apis.google.com/chart?cht=tx&chl=a+%3D+%5Cleft%5Clfloor+%5Calpha+%5Cright%5Crfloor+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=b+%3D+%5Cleft%5Clfloor+%5Cbeta+%5Cright%5Crfloor+>の証明</h4>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=f%28x%29%2Fg%28x%29+>を微分して最大値を取る時のxを求めると，<img src=http://chart.apis.google.com/chart?cht=tx&chl=x_%7Bmax%7D+%3D+%5Cfrac%7B%5Calpha-a%7D%7B%5Calpha-a%2B%5Cbeta-b%7D+>となる．よって，上で証明した<img src=http://chart.apis.google.com/chart?cht=tx&chl=a+%5Cleq+%5Calpha%2C+b+%5Cleq+%5Cbeta+>を満たしつつ自然数aとbが最適な値を取るには，<img src=http://chart.apis.google.com/chart?cht=tx&chl=a+%3D+%5Cleft%5Clfloor+%5Calpha+%5Cright%5Crfloor+%2C+b+%3D+%5Cleft%5Clfloor+%5Cbeta+%5Cright%5Crfloor+>となる．これもまあ厳密な証明はできなくても直感的に考えれば明らかだろう．</p>

<br />


<h3>練習問題 2.8 二重指数分布から正規乱数を生成する</h3>

<ul>
<li><img src=http://chart.apis.google.com/chart?cht=tx&chl=f%28x%29+%3D+%5Cfrac%7B1%7D%7B%5Csqrt%7B2%5Cpi%7D%7D%5Cexp%28-%5Cfrac%7Bx%3Csup%3E2%7D%7B2%7D%29%3C%2Fsup%3E+%5Csim+%5Cmathcal%7BN%7D%280%2C1%29+></li>
<li><img src=http://chart.apis.google.com/chart?cht=tx&chl=g%28x%7C%5Calpha%29+%3D+%5Cfrac%7B%5Calpha%7D%7B2%7D%7D%5Cexp%28-%5Calpha+%7Cx%7C%29+></li>
</ul>


<h4>a. 定数Mの取りうる範囲と最小値を求める</h4>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cfrac%7Bf%28x%29%7D%7Bg%28x%7C%5Calpha%29%7D+%3D+%5Csqrt%7B%5Cfrac%7B2%7D%7B%5Cpi%7D%7D%5Calpha%3Csup%3E%7B-1%7D%5Cexp%28-%5Cfrac%7Bx%3Csup%3E2%7D%7B2%7D%3C%2Fsup%3E%3C%2Fsup%3E+%2B+%5Calpha%7Cx%7C%29+></p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=x+%3D+%5Calpha+>のとき，<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cfrac%7Bf%28%5Calpha%29%7D%7Bg%28%5Calpha%29%7D+%3D+%5Csqrt%7B%5Cfrac%7B2%7D%7B%5Cpi%7D%7D%5Calpha%3Csup%3E%7B-1%7D%5Cexp%28-%5Cfrac%7B%5Calpha%3Csup%3E2%7D%7B2%7D%3C%2Fsup%3E%3C%2Fsup%3E+%2B+%5Calpha%3Csup%3E2%29%3C%2Fsup%3E+%3D+%5Csqrt%7B%5Cfrac%7B2%7D%7B%5Cpi%7D%7D%5Calpha%3Csup%3E%7B-1%7De%3Csup%3E%7B%5Calpha%3Csup%3E2%2F2%7D%3C%2Fsup%3E%3C%2Fsup%3E%3C%2Fsup%3E+>となり，与式を満たす．</p>

<p>Mの最小値は，上式を微分すると<img src=http://chart.apis.google.com/chart?cht=tx&chl=%28-%5Calpha%3Csup%3E2%2B1%29%5Cexp%28-%5Cfrac%7Balpha%3Csup%3E2%7D%7B2%7D%29%3C%2Fsup%3E%3C%2Fsup%3E+>が出てくるので，<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Calpha+%3D+%5Cpm+1+>となる．候補分布に課された制約(P.59)より，fとgどちらか一方だけ負になることは無いので，<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Calpha+%3D+1+>が正解．（二階微分すれば-1のとき最小値，1のとき最大値だとわかる）</p>

<h4>b. 受理確率を求める</h4>

<p>受理確率は1/Mで表される．<img src=http://chart.apis.google.com/chart?cht=tx&chl=M+%3D+%5Csup_x+%5Cfrac%7Bf%28x%29%7D%7Bg%28x%29%7D+%3D+%5Csqrt%7B%5Cfrac%7B2%7D%7B%5Cpi%7D%7De%3Csup%3E%7B1%2F2%7D%3C%2Fsup%3E+> より，<img src=http://chart.apis.google.com/chart?cht=tx&chl=1%2FM+%3D+%3D+%5Csqrt%7B%5Cpi%2F2e%7D+%3D+1%2F0.76+%5Csimeq+1.3+>となる．</p>

<h4>c. 候補分布から乱数を生成するために逆変換をする</h4>

<p>受理・棄却法を使うには，当然候補分布から乱数が生成できなければいけない．今回は二重指数分布から乱数を生成して間接的に正規乱数を求めているので，二重指数分布から乱数を生成するために，2章前半で行った逆変換を行う．</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=g%28x%7C%5Calpha%29+%3D+%5Cbegin%7Bcases%7D+%5Cfrac%7B1%7D%7B2%7De%3Csup%3E%7B%5Calpha%3C%2Fsup%3E+x%7D+%26amp%3B+%28x+%26lt%3B+0%29+%5C+1+-+%5Cfrac%7B1%7D%7B2%7De%3Csup%3E%7B%5Calpha%3C%2Fsup%3E+x%7D+%26amp%3B+%28x+%3E+0%29+%5Cend%7Bcases%7D+></p>

<p>より，</p>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cbegin%7Bcases%7D+x+%3D+%5Cfrac%7B1%7D%7B%5Calpha%7D%5Clog%282u%29+%26amp%3B+%28u+%26lt%3B+%5Cfrac%7B1%7D%7B2%7D%29+%5C+x+%3D+-%5Cfrac%7B1%7D%7B%5Calpha%7D%5Clog%282%281-u%29%29+%26amp%3B+%28%5Cfrac%7B1%7D%7B2%7D+%26lt%3B+u+%26lt%3B+1+%29%5Cend%7Bcases%7D+></p>

<p>となる．あとは<img src=http://chart.apis.google.com/chart?cht=tx&chl=U+%5Csim+%5Cmathcal%7BU%7D_%7B%5B0%2C1%5D%7D+>で生成される乱数を上式に当てはめて計算すればよい．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「Rによるモンテカルロ法入門」読書ノート：2章 逆変換・一般変換法]]></title>
    <link href="http://yagays.github.com/blog/2012/10/21/imcmr-2-1/"/>
    <updated>2012-10-21T06:26:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/10/21/imcmr-2-1</id>
    <content type="html"><![CDATA[<ul>
<li>読書ノート アーカイブ:<a href="http://yagays.github.com/blog/2012/10/20/archive-introducing-monte-carlo-methods-with-r/">http://yagays.github.com/blog/2012/10/20/archive-introducing-monte-carlo-methods-with-r/</a></li>
</ul>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4621065270" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<h3>内容：一様分布を元にして様々な確率分布に従う乱数を生成する</h3>

<p>統計解析ソフトであるRには，様々な分布に対応した組み込み関数が用意されている．本章では，そういった組み込み関数を使わずに，一様分布から生成される乱数を逆関数で変換することで，他の確率分布の乱数を表現する．</p>

<p>本書で扱う乱数とは，完全なランダム性を持つ乱数ではなく<strong>擬似乱数</strong>である．擬似乱数はset.seed()関数で設定した値を種として乱数を生成するため，どのような環境においてもset.seed()関数で同じ値を使うことで乱数を再現することができる．</p>

<p>今回は，一様乱数を元にして指数乱数を生成し，指数乱数からガンマ分布やベータ分布の乱数へと変換していく．これらの確率分布は全てRの関数で用意されているものなので，一様乱数から生成した乱数とRの関数から生成した乱数を比較することによって，乱数の生成がうまくいっているかどうかを判断する．以下のコードで描写したヒストグラムはすべて，左側が一様分布から生成した乱数，右側がRの関数を用いて生成した乱数(N=10<sup>4</sup> )．赤い曲線はどちらもRの関数を用いて分布を示したもの．</p>

<h3>例 2.1 一様乱数から指数乱数を作成する</h3>

<p>これはテキストにある通りのコードと作図．mcsmパッケージのdemo(Chapter.2)にも同様のコードがある．</p>

<p>以下のコードでは<img src=http://chart.apis.google.com/chart?cht=tx&chl=-%5Clog%7B%281-u%29%7D+>をそのままコードに落とし込んでいる．テキストにもある通り，<img src=http://chart.apis.google.com/chart?cht=tx&chl=U+%5Csim+%5Cmathcal%7BU%7D_%7B%5B0%2C1%5D%7D+>ならば0から1の間で一様に等しい確率分布なのだがら，<img src=http://chart.apis.google.com/chart?cht=tx&chl=U+>も<img src=http://chart.apis.google.com/chart?cht=tx&chl=1-U+>も一様分布になる．</p>

<p><code>r
par(mfrow=c(1,2))
Nsim &lt;- 10^4
U &lt;- runif(Nsim)
X &lt;- -log(1-U)
Y &lt;- rexp(Nsim)
par(mfrow=c(1,2))
hist(X, freq=F, main="Exp from Uniform", nclass=50)
curve(dexp(x), add=T, col="red", lwd=2)
hist(Y, freq=F, main="Exp from R", nclass=50)
curve(dexp(x), add=T, col="red", lwd=2)
</code></p>

<p>![](http://dl.dropbox.com/u/142306/b/imcmr/chp2_1.png )</p>

<h3>練習問題 2.2 逆変換法を用いてロジスティック分布とコーシー分布の乱数を生成する</h3>

<p>逆変換法を用いてロジスティック分布とコーシー分布の乱数を生成する．変換で求まる関数はいわゆる逆累積分布関数というもの．</p>

<h4>a.ロジスティック分布</h4>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=u+%3D+%5Cfrac%7B1%7D%7B1%2Be%3Csup%3E%7B-%5Cfrac%7Bx-%5Cmu%7D%7B%5Cbeta%7D%7D%7D%3C%2Fsup%3E+>を変形して，<img src=http://chart.apis.google.com/chart?cht=tx&chl=x+%3D+-%5Cbeta+%5Clog%7B%5Cfrac%7B1-u%7D%7Bu%7D%7D+%2B+%5Cmu+></p>

<p>以下のコードは<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cmu%3D0+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cbeta%3D1+>の場合．</p>

<p><code>r
Nsim &lt;- 10^4
U &lt;- runif(Nsim)
par(mfrow=c(1,2))
X &lt;- -log((1-U)/U)
Y &lt;- rlogis(Nsim, 0, 1)
hist(X,freq=F,main="Logis from Uniform")
curve(dlogis(x), add=T, col="red", lwd=2)
hist(Y, freq=F, main="Logis from R")
curve(dlogis(x), add=T, col="red", lwd=2)
</code></p>

<p>![](http://dl.dropbox.com/u/142306/b/imcmr/chp2_2.png )</p>

<h4>b.コーシー分布</h4>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=u+%3D+%5Cfrac%7B1%7D%7B2%7D+%2B+%5Cfrac%7B1%7D%7B%5Cpi%7D+%5Carctan%7B%5Cfrac%7Bx-%5Cmu%7D%7B%5Csigma%7D%7D+>を変形して，<img src=http://chart.apis.google.com/chart?cht=tx&chl=x+%3D+%5Cmu+%2B+%5Csigma+%5Ctan%7B%5Cpi%28u-%5Cfrac%7B1%7D%7B2%7D%29%7D+></p>

<p>以下のコードは<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cmu%3D0+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Csigma%3D1+>の場合．</p>

<p>```r
Nsim <- 10^4
U <- runif(Nsim)
x <- tan(pi*(U-0.5))
Y <- rcauchy(Nsim)
hist(X, freq=F, main="Cauchy from Uniform", xlim=c(-10,10))
curve(dcauchy(x), add=T, col="red", lwd=2)
hist(Y[Y>=-10 &amp; Y&lt;=10], freq=F, main="Cauchy from R", xlim=c(-10,10))
curve(dcauchy(x), add=T, col="red", lwd=2)</p>

<h1>cauchyは値が両端に飛んでヒストグラムが綺麗に書けないので[-10,10]で整えている</h1>

<p>```</p>

<p>![](http://dl.dropbox.com/u/142306/b/imcmr/chp2_3.png )</p>

<h3>練習問題 2.12 指数分布からガンマ分布とベータ分布の乱数を生成する</h3>

<h4>a.ガンマ乱数</h4>

<p>以下の作図では，<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cbeta+>の値を固定して<img src=http://chart.apis.google.com/chart?cht=tx&chl=a+>の値を1,2,5,9と変化させたときの分布の変化を見ている．</p>

<p><code>r
Nsim &lt;- 10^4
beta &lt;- 2.0
par(mfrow=c(4,2))
for(a in c(1,2,5,9)){
  U &lt;- runif(a*Nsim)
  m &lt;- matrix(U, nrow=a)
  X &lt;- beta * apply(-log(m), 2, sum)
  Y &lt;- rgamma(Nsim, shape=a, scale=beta)
  hist(X, freq=F, main=paste("Gamma from Uniform:","a=",a," beta=",beta), nclass=50)
  curve(dgamma(x, shape=a, scale=beta), add=T, col="red", lwd=2)
  hist(Y, freq=F, main=paste("Gamma from Uniform:","a=",a," beta=",beta), nclass=50)
  curve(dgamma(x, shape=a, scale=beta), add=T, col="red", lwd=2)
}
</code></p>

<p>![](http://dl.dropbox.com/u/142306/b/imcmr/chp2_4.png )</p>

<h4>a.ベータ乱数</h4>

<p>この手法では<img src=http://chart.apis.google.com/chart?cht=tx&chl=%28a+%5Cin+%5Cmathbb%7BN%3Csup%3E%2A%7D%29%3C%2Fsup%3E+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cmathbb%7BN%3Csup%3E%2A%7D%3C%2Fsup%3E+%3D+1%2C2%2C+%5Cdots+> という制約があるため，<img src=http://chart.apis.google.com/chart?cht=tx&chl=a%3D0.1+>，<img src=http://chart.apis.google.com/chart?cht=tx&chl=b%3D0.1+>のようなベータ分布は作ることが出来ない．以下はa=1,b=1，a=2,b=3，a=8,b=4の場合．</p>

<p>```r</p>

<h1>a=1,b=1の場合</h1>

<p>par(mfrow=c(3,2))
Nsim <- 10^4
a <- 1
b <- 1
U <- runif((a+b)*Nsim)
m <- matrix(U,nrow=(a+b))
X <- -log(m[a,]) / apply(-log(m),2,sum) # a>=2の場合はapply(-log(m[1:a,]),2,sum) / apply(-log(m),2,sum)
Y &lt;- rbeta(Nsim,a,b)
hist(X, freq=F, main=paste("Beta from Uniform:","a=",a,"b=",b), nclass=50, ylim=c(0,3))
curve(dbeta(x,a,b), add=T, col="red", lwd=2)
hist(Y, freq=F, main=paste("Beta from R:","a=",a,"b=",b), nclass=50, ylim=c(0,3))
curve(dbeta(x,a,b), add=T, col="red", lwd=2)
```</p>

<p>![](http://dl.dropbox.com/u/142306/b/imcmr/chp2_5.png )</p>

<h4>b. 一様分布から指数乱数を作る(逆変換)</h4>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=U+%3D+e%3Csup%3E%7B-%5Clambda%3C%2Fsup%3E+x%7D+>より <img src=http://chart.apis.google.com/chart?cht=tx&chl=x+%3D+-+%5Cfrac%7B%5Clog%7BU%7D%7D%7B%5Clambda%7D+></p>

<h4>c. 一様分布からロジスティック乱数を作る(逆変換)</h4>

<p><img src=http://chart.apis.google.com/chart?cht=tx&chl=U+%3D+%5Cfrac%7Be%3Csup%3Ex%7D%7B1%2Be%3Csup%3Ex%7D%3C%2Fsup%3E%3C%2Fsup%3E+>より<img src=http://chart.apis.google.com/chart?cht=tx&chl=x+%3D+%5Clog%7B%5Cfrac%7BU%7D%7B1-U%7D%7D+></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「Rによるモンテカルロ法入門」読書ノート：アーカイブ]]></title>
    <link href="http://yagays.github.com/blog/2012/10/20/archive-introducing-monte-carlo-methods-with-r/"/>
    <updated>2012-10-20T11:13:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/10/20/archive-introducing-monte-carlo-methods-with-r</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4621065270" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<h3>「Rによるモンテカルロ法入門」</h3>

<p>本書は，モンテカルロ法の実践的な解説書であり，統計解析ソフトのRを用いた豊富な実例と練習問題が組まれている．モンテカルロ法とは乱数を用いて数値計算を行う手法の総称であり，本書で扱う内容は乱数の発生からモンテカルロ積分，そしてマルコフ連鎖モンテカルロ法（MCMC）の各種アルゴリズムに至るまで非常に幅広い．たいていの解説には理論に実践演習が付随した形となっており，数学的な理論を軸にして実際にRを用いたコード例が示される．</p>

<h3>練習問題を解きつつ読書ノートをまとめてみる</h3>

<p><a href="http://yagays.github.com/blog/2012/10/14/review-glm-mcmc/">そんなこんな</a>で，<a href="http://www.amazon.co.jp/gp/product/400006973X/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=400006973X&amp;linkCode=as2&amp;tag=yagays-22">久保本</a>と並行する形で「<a href="http://www.amazon.co.jp/gp/product/4621065270/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4621065270&linkCode=as2&tag=yagays-22">Rによるモンテカルロ法入門</a><img src="http://www.assoc-amazon.jp/e/ir?t=yagays-22&l=as2&o=9&a=4621065270" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />」を読んでいる．一応MCMCの部分だけひと通り目を通したのだが，最終的にMCMCの実装までひと通りやるにしても一連の流れを簡単にでも追っておかなければと思って，最初の乱数の部分からじっくり読み進めている．これがなかなか難しくて，手も足も出ないところをなんとかRのコードを動かして理解を補っているわけなのだが……取り敢えず練習問題を解ける範囲で解きつつRのコードを書いていこうというこでとはセクションごとに小分けてして，じっくり読書ノートを付けて勉強することにしてみた．</p>

<p>以下に，読書ノートのリンクを書き加えていく</p>

<h3>読書ノートまとめ</h3>

<ul>
<li><a href="http://yagays.github.com/blog/2012/10/21/imcmr-2-1/">「Rによるモンテカルロ法入門」読書ノート：2章 逆変換・一般変換法</a>

<ul>
<li>例 2.1，練習問題 2.2，練習問題 2.12</li>
</ul>
</li>
<li><a href="http://yagays.github.com/blog/2012/10/22/imcmr-2-2/">「Rによるモンテカルロ法入門」読書ノート：2章 受理・棄却法</a>

<ul>
<li>例 2.7，例 2.8，練習問題 2.7，練習問題 2.8</li>
</ul>
</li>
<li>&lt;></li>
</ul>


<h3>お決まりごと</h3>

<p>この読書ノート（上記リンク先を含む）は個人的なメモであって，解答およびコードの正確さや厳密さを保証するものではありません．間違いが多分に含まれている可能性があるので，参考にされる際には十分ご注意下さい．</p>

<h3>参考：サンプルコード</h3>

<p>CRANのmcsmパッケージに，本書の一部コードのスクリプトがデモとして入っている．</p>

<ul>
<li><a href="http://cran.r-project.org/web/packages/mcsm/index.html">http://cran.r-project.org/web/packages/mcsm/index.html</a></li>
</ul>


<p>```r</p>

<blockquote><p>install.packages("mcsm")
library(mcsm)
demo(Chapter.1) # Chapter.8まである
```</p></blockquote>

<h3>参考：基本的な確率分布の略称</h3>

<ul>
<li>一様分布: <img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cmathcal%7BU%7D></li>
<li>指数分布: <img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cmathcal%7BExp%7D></li>
<li>カイ二乗分布: <img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cmathcal%7B%5Cchi%3Csup%3E2%7D></sup></li>
<li>ガンマ分布: <img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cmathcal%7BG%7D></li>
<li>ベータ分布: <img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cmathcal%7BBe%7D></li>
<li>正規分布: <img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cmathcal%7BN%7D></li>
<li>二項分布: <img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cmathcal%7BBin%7D></li>
<li>負の二項分布: <img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cmathcal%7BNeg%7D></li>
<li>ポアソン分布(※): <img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cmathcal%7BP%7D></li>
<li>コーシー分布: <img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cmathcal%7BC%7D></li>
<li>スチューデントのT分布: <img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cmathcal%7BT%7D></li>
<li>二重指数分布（ラプラス分布）: <img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cmathcal%7BL%7D></li>
</ul>


<p>（※ <img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cmathcal%7BP%7D>は場合によって変わる）</p>

<h3>参考</h3>

<ul>
<li>(pdf) <a href="http://www.ceremade.dauphine.fr/~xian/shortManual.pdf">http://www.ceremade.dauphine.fr/~xian/shortManual.pdf</a></li>
</ul>


<p>公式ページには，番号が奇数の練習問題だけ解答がある．</p>

<ul>
<li>(pdf) <a href="http://www.stat.ufl.edu/~casella/ShortCourse/MCMC-UseR.pdf">http://www.stat.ufl.edu/~casella/ShortCourse/MCMC-UseR.pdf</a></li>
</ul>


<p>UseR!の発表スライドっぽい資料．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「データ解析のための統計モデリング入門」読書ノート]]></title>
    <link href="http://yagays.github.com/blog/2012/10/14/review-glm-mcmc/"/>
    <updated>2012-10-14T04:40:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/10/14/review-glm-mcmc</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=400006973X" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p><strong>「データ解析のための統計モデリング入門」</strong>をひと通り読んだ．本書はGLMからMCMCによる分布推定までの一連の統計モデリングの流れを，生態学における研究の問題に即したテストデータやRを使った解析例とともに解説した本である．本書を書かれた久保さんの講義資料は前々から拝見していたのだが，今回はそれが全体を通して非常によくまとまっている印象を受けた．やはり実例に沿った例題があって，それを解決するためのストーリーが組まれていると，何が問題で何をすべきなのか，そしてその評価方法を含めてハッキリとしていて読みやすい．Rのコードに関しても，コマンドの実行方法からその解釈の仕方まで丁寧に解説が組まれており，数式とのつながりもわかりやすい．個人的には，後半のMCMCの実験に関しては大部分をWinBUGSにお任せで，シミュレーションの過程が少し不明瞭だった感じもするのだが，限られた紙面でMCMCの細かい実装方法を説明するよりかは既存のツールを使ったほうが全体の流れとしても良かったのだろう．</p>

<br />


<p>さて，本書を読み始める前に必ず目に通すべきなのが，<a href="http://hosho.ees.hokudai.ac.jp/~kubo/ce/IwanamiBook.html">公式ページ</a>にも貼られている各章のつながりや線形モデルの発展の図だ．全体の流れを俯瞰できるほか，実際に中を読みながら今ある問題と図とを照らし合わても，自分が今どういった位置づけの中で何を解いているのかということを把握することができる．</p>

<p>これが非常に参考になったので，個人的にも自分の読書ノートに書きなぐったまとめ図を清書して作ってみた．ほとんど久保さんの図を真似ただけだが，2つの図を組み合わせ感じでストーリーに沿った形で線形モデルの発展をなぞっている．基本的に章の間をつなぐような自問自答の形を取っており，各章には推定するパラメータと手法の代表的なものを付け加えている．</p>

<p><img src="http://dl.dropbox.com/u/142306/b/glm_mcmc.png" alt="" /></p>

<p>以下に簡単な読書ノートを載せておく．Rのコードを使った実験はまだできていないが，とりあえずはMCMCの実装くらいまではやりたいと思う．<strong>なお，このまとめには多分に間違いが含まれている可能性があるので，もし参考にされる際には注意していただきたい．</strong></p>

<!-- more -->


<h3>全体的に</h3>

<ul>
<li>確率の表記の仕方に注意

<ul>
<li><strong>ただ単にパラメータを取る時の確率なのか条件付き確率なのか，文脈に沿ってきちんと把握しておく</strong></li>
<li>ポアソン分布の文脈における%{ gctex p(x|\lambda) %}は，<img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Clambda+>というパラメータ(平均)を取る時のポアソン分布の確率値（他に<img src=http://chart.apis.google.com/chart?cht=tx&chl=p%28x%3B%5Clambda%29+>とも書くパターン）</li>
<li>後半のMCMCに入ると条件付き確率が出てくる</li>
</ul>
</li>
</ul>


<h3>2章</h3>

<ul>
<li>「ある植物の1個体から得られる種子の数に何か法則はあるか？」</li>
<li>確率分布の単純なあてはめ</li>
<li>ポアソン分布を選ぶ理由は，非負の整数で<img src=http://chart.apis.google.com/chart?cht=tx&chl=%280%2C%5Cinfty%5D+>だから</li>
</ul>


<h3>3章</h3>

<ul>
<li>「植物のサイズや施肥効果と種子の数に何か関係はあるか」</li>
<li>説明変数を組み込んだ統計モデル</li>
<li><img src=http://chart.apis.google.com/chart?cht=tx&chl=log%28%5Clambda_i%29+%3D+%5Cbeta_1+%2B+%5Cbeta_2+x_i+></li>
<li>(リンク関数) = (線形予測子) の関係

<ul>
<li>PRMLでは，リンク関数は連結関数と訳されている</li>
</ul>
</li>
<li>対数リンク関数では，要素の効果が積で表される

<ul>
<li><img src=http://chart.apis.google.com/chart?cht=tx&chl=%5Cexp%28%5Cbeta_1+%2B+%5Cbeta_2+x_i+%2B+%5Cbeta_3%29+%3D+%5Cexp%28%5Cbeta_1%29+%5Ctimes+%5Cexp%28%5Cbeta_2+x_i%29+%5Ctimes+%5Cexp%28%5Cbeta_3%29+></li>
</ul>
</li>
</ul>


<h3>4章</h3>

<ul>
<li>モデル選択</li>
<li>良いモデル/悪いモデルと考えた時に，何が良いモデルなのか</li>
<li>当てはまりの良さだけを考えてはいけない

<ul>
<li>機械学習で言うところの過学習</li>
</ul>
</li>
<li>AIC（赤池情報量基準）</li>
<li>平均対数尤度の推定値 / 最大対数尤度のバイアス補正</li>
<li>最大対数尤度 &lt;=> 最小逸脱度</li>
</ul>


<h3>5章</h3>

<h3>6章</h3>

<ul>
<li>「植物のサイズや施肥効果と種子の生存数に何か関係はあるか」</li>
<li>ロジスティック回帰

<ul>
<li>二項分布とロジットリンク関数の組み合わせ</li>
</ul>
</li>
<li>相互作用項による積の効果<img src=http://chart.apis.google.com/chart?cht=tx&chl=x_i+f_i+>を考える</li>
<li>割り算値の統計モデリングの危険性とオフセット項</li>
</ul>


<h3>7章</h3>

<ul>
<li>複数の確率分布を部品とする統計モデリング

<ul>
<li>個体のばらつき(<strong>個体差</strong>)</li>
</ul>
</li>
<li>GLMMは人間が観測できないけど応答変数(種子の生存数)に効いてそうな部分の効果をGLMに組み込んだもの</li>
<li>固定効果とランダム効果</li>
<li>サンプル数の分だけ必要なパラメータをまとめて最尤推定できないので積分して分布を混ぜる</li>
<li>無限個の二項分布をまぜることで平均よりも分散が大きいような確率分布になる</li>
<li>反復/擬似反復</li>
</ul>


<h3>8章</h3>

<ul>
<li>MCMCで分布を推定

<ul>
<li>ランダム効果を複数組み込んだモデルにすると多重積分の数が多くなり最尤推定に時間が掛かる場合</li>
<li>または最尤推定が解析的に求められない場合</li>
</ul>
</li>
<li>MCMCといっても結局やりたいことはパラメータを知りたいということ

<ul>
<li>Rのglm()関数で一瞬で求まったものを，MCMCのシミュレーションで求めているだけ</li>
</ul>
</li>
<li>MCMCサンプリングにより定常分布が定まる ＆　定常分布は尤度に比例する</li>
<li>マルコフ連鎖からサンプリングすることと事後分布からサンプリングすることが同じ</li>
</ul>


<h3>9章</h3>

<ul>
<li>GLMのベイズモデル化</li>
<li><strong>求めているものが値なのか分布なのかを意識する</strong></li>
<li>無情報事前分布を用いたベイズ統計モデル

<ul>
<li>平べったい分布</li>
<li>「 <img src=http://chart.apis.google.com/chart?cht=tx&chl=%5B%5Cinfty%2C%5Cinfty%5D+>の範囲で好きな値を取っていい」ことを表現するための分布</li>
</ul>
</li>
<li>gibbsサンプリングによるMCMCアルゴリズム（複数パラメータのサンプリング）</li>
</ul>


<h3>10章</h3>

<ul>
<li>「調査場所の差」を考慮にいれる

<ul>
<li>これも結局は個体差</li>
</ul>
</li>
<li>階層事前分布・階層ベイズモデル</li>
<li>階層に関しては「生態学のためのベイズ法」にある図が分かりやすい</li>
</ul>


<h3>11章</h3>

<h3>参考</h3>

<p>「<a href="http://www.amazon.co.jp/gp/product/4320056787/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4320056787&linkCode=as2&tag=yagays-22">生態学のためのベイズ法</a><img src="http://www.assoc-amazon.jp/e/ir?t=yagays-22&l=as2&o=9&a=4320056787" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />」は実際の生態学の解析事例が豊富に書かれている．具体的にどういう生物を対象にどういった測定値を用いて解析したみたいな話が色々書いてあるので，モデル化の際のイメージがしやすい．しょっぱなからベイジアンなので，慣れてない人には少し抵抗があるかもしれない．久保さんのところ（<a href="http://hosho.ees.hokudai.ac.jp/~kubo/ce/BayesianFrog.html">URL</a>）にも色々と情報あり．この本はRとWinBUGS．</p>

<p>「<a href="http://www.amazon.co.jp/gp/product/4621065270/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4621065270&linkCode=as2&tag=yagays-22">Rによるモンテカルロ法入門</a><img src="http://www.assoc-amazon.jp/e/ir?t=yagays-22&l=as2&o=9&a=4621065270" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />」は，乱数を発生させて数値計算を行うモンテカルロ法自体について書かれているので，扱っている内容はMCMCに限らずモンテカルロ積分なども含まれている．こちらはWinBUGSを使わず全編Rでコードが書かれているので，RでMCMCを実装するときの参考になる．</p>

<p>久保本であまり触れられていなかった理論方面では，「<a href="http://www.amazon.co.jp/gp/product/4000068520/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4000068520&linkCode=as2&tag=yagays-22">計算統計 2 マルコフ連鎖モンテカルロ法とその周辺 (統計科学のフロンティア 12)</a><img src="http://www.assoc-amazon.jp/e/ir?t=yagays-22&l=as2&o=9&a=4000068520" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />」と「<a href="http://www.amazon.co.jp/gp/product/4254126972/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4254126972&linkCode=as2&tag=yagays-22">マルコフ連鎖モンテカルロ法 (統計ライブラリー)</a><img src="http://www.assoc-amazon.jp/e/ir?t=yagays-22&l=as2&o=9&a=4254126972" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />」の2冊あたりが良さそう．前者の計算統計の方は，久保本の編集にも携われた伊庭氏が書かれたMCMCの解説．後者の方は理論寄りながらも後半では社会学方面の研究の実例が色々と載っており，ポアソン回帰やロジスティック回帰など各事例の数式を追ったり実例を見るのに適している．こちらはRとWinBUGSが混じっている．</p>

<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4320056787" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4621065270" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4000068520" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=yagays-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4254126972" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>参考：ランダム効果について</h3>

<ul>
<li><a href="http://hosho.ees.hokudai.ac.jp/~kubo/ce/RandomEffectsCrawley.html">http://hosho.ees.hokudai.ac.jp/~kubo/ce/RandomEffectsCrawley.html</a></li>
<li><a href="http://blog.kzfmix.com/entry/1267928535">http://blog.kzfmix.com/entry/1267928535</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「せめぎ合う遺伝子」読書ノート 2章その3]]></title>
    <link href="http://yagays.github.com/blog/2012/06/13/genesinconflict-2-3/"/>
    <updated>2012-06-13T07:24:00+09:00</updated>
    <id>http://yagays.github.com/blog/2012/06/13/genesinconflict-2-3</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-jp.amazon.co.jp/e/cm?t=yagays-22&o=9&p=8&l=as1&asins=432005699X&ref=qf_sp_asin_til&fc1=000000&IS2=1&lt1=_blank&m=amazon&lc1=0000FF&bc1=000000&bg1=FFFFFF&f=ifr" style="width:120px; height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" align="right"></iframe>


<p>これまでは配偶子キラー因子を見てきたが，次に母性効果キラー因子を見ていく．これは，ヘテロ接合体メスに作用するキラー因子である．また，植物の花粉に作用する配偶体因子についても少し触れる．</p>

<h3>2.3</h3>

<ul>
<li>配偶子キラー因子

<ul>
<li>ヘテロ接合体オスに作用して，因子を受け継いでいない精子を殺す (e.g. tや<em>SD</em>)</li>
<li>対象となるのは1倍体の配偶子</li>
</ul>
</li>
<li>母性効果キラー因子

<ul>
<li>ヘテロ接合体メスに作用して，因子を受け継いでいない子供を殺す</li>
<li>対象となるのは2倍体の個体</li>
<li>このキラー因子は父親由来でも母親由来でも働く場合がある</li>
</ul>
</li>
</ul>


<!-- more -->


<ul>
<li>コクヌストモドキ

<ul>
<li><em>M</em>, <em>Medae</em>, 母性効果優勢胚発育停止因子</li>
<li>ヘテロ接合メスM/+において，+/+の野生型を殺す</li>
<li>野生型ホモ接合メス+/+から生まれる+/+は生存可能</li>
<li><em>M</em>は父親由来でも母親由来でも働く</li>
<li>4つの<em>Medea</em>因子が関与，地理的に広範囲にパッチ状に分布</li>
</ul>
</li>
</ul>


<br />


<ul>
<li>ハツカネズミ

<ul>
<li><em>HSR</em>領域(第1染色体上の細胞学的手法で検出可能な均一に染色される部分)

<ul>
<li>オスに由来する<em>HSR</em>も同様の効果を示すため，<em>HSR</em>/+ヘテロ接合メスと+/+野生型オスにおいてのみドライヴ性を示す(70%)</li>
<li><em>Sp100-rs</em>と<em>Csprs</em>が融合した100kbの反復配列の900~2000コピーからなる(野生型は60コピー程度)</li>
</ul>
</li>
<li><em>scat</em><sup>+</sup></li>
<li><em>Om</em><sup>DDK</sup></li>
</ul>
</li>
</ul>


<br />


<ul>
<li>子供に投資をすることによってドライヴ性を示す遺伝子

<ul>
<li>これまでのケースは因子を持たない子孫を殺す遺伝子だったが，因子を持つ子孫に投資をしてドライヴ性を示す場合もある(妊娠ドライヴ)</li>
<li>青髭効果(または緑髭効果 green beard effect)</li>
<li>細胞接着分子</li>
<li>シグナル検知(リガンドと受容体，酵素と基質のような関係)</li>
</ul>
</li>
</ul>


<h3>2.4</h3>

<ul>
<li>植物の配偶体因子 gametophyte factor

<ul>
<li>トウモロコシの第4染色体上の<em>ga1</em>遺伝子</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
</feed>
